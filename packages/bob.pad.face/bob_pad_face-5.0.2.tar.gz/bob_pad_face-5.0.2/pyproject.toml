[build-system]
    requires      = ["setuptools>=69.2.0", "wheel"]
    build-backend = "setuptools.build_meta"

[project]
    name            = "bob.pad.face"
    version         = "5.0.2"
    requires-python = ">=3.9"
    description     = "Implements tools for spoofing or presentation attack detection in face biometrics"
    dynamic         = ["readme"]
    license         = {text = "GPLv3 License"}
    authors         = [
    {name = "Amir Mohammadi", email = "amir.mohammadi@idiap.ch"},
    ]
    keywords = ["bob"]

    classifiers=[
        "Framework :: Bob",
        "Development Status :: 3 - Alpha",
        "Intended Audience :: Developers",
        "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
        "Natural Language :: English",
        "Programming Language :: Python",
        "Topic :: Scientific/Engineering :: Artificial Intelligence",
    ]
    dependencies = [
        "bob==12.1.1",
        "bob.io.base==5.1.1",
        "bob.bio.base==8.1.1",
        "bob.bio.face==8.0.1",
        "bob.pad.base==6.0.1",
        "bob.bio.video==7.0.1",
        "clapper~=1.0",
        "dask-ml==2024.3.20",
        "imageio-ffmpeg~=0.4",
        "numpy~=1.26",
        "scikit-learn~=1.4",
        "scikit-image~=0.19",
        "torch~=2.1",
    ]

[project.urls]
    documentation = "https://www.idiap.ch/software/bob/docs/bob/bob.pad.face/v5.0.2/sphinx/"
    homepage      = "https://pypi.org/project/bob.pad.face/"
    repository    = "https://gitlab.idiap.ch/bob/bob.pad.face"
    changelog     = "https://gitlab.idiap.ch/bob/bob.pad.face/-/releases"

[project.optional-dependencies]
    qa  = ["pre-commit"]
    doc = [
        "sphinx",
        "sphinx_rtd_theme",
        "sphinx-autodoc-typehints",
        "auto-intersphinx",
        "sphinxcontrib-programoutput",
        "matplotlib",
        "tensorflow",
        ]
    test = [
        "pytest",
        "pytest-cov",
        "coverage",
        "tensorflow",
        ]

[tool.setuptools]
    zip-safe    = false
    package-dir = {"" = "src"}

[tool.setuptools.dynamic]
    readme = {file = "README.md", content-type = "text/markdown"}

[project.entry-points."bob.pad.database"]
    casia-fasd    = "bob.pad.face.config.casia_fasd:database"
    casia-surf    = "bob.pad.face.config.casia_surf:database"
    mask-attack   = "bob.pad.face.config.mask_attack:database"
    oulu-npu      = "bob.pad.face.config.oulu_npu:database"
    replay-attack = "bob.pad.face.config.replay_attack:database"
    replay-mobile = "bob.pad.face.config.replay_mobile:database"
    swan          = "bob.pad.face.config.swan:database"

[project.entry-points."bob.pad.pipeline"]
    svm-frames   = "bob.pad.face.config.svm_frames:pipeline"
    deep-pix-bis = "bob.pad.face.config.deep_pix_bis:pipeline"

[project.entry-points."bob.pad.config"]
    casia-fasd    = "bob.pad.face.config.casia_fasd"
    casia-surf    = "bob.pad.face.config.casia_surf"
    mask-attack   = "bob.pad.face.config.mask_attack"
    oulu-npu      = "bob.pad.face.config.oulu_npu"
    replay-attack = "bob.pad.face.config.replay_attack"
    replay-mobile = "bob.pad.face.config.replay_mobile"
    swan          = "bob.pad.face.config.swan"
    lbp-svm       = "bob.pad.face.config.lbp_svm"
    deep-pix-bis  = "bob.pad.face.config.deep_pix_bis"

[project.entry-points."bob.pad.cli"]
    statistics = "bob.pad.face.script.statistics:statistics"

[tool.isort]
    profile             = "black"
    line_length         = 80
    order_by_type       = true
    lines_between_types = 1

[tool.black]
    line-length = 80

[tool.pytest.ini_options]
    addopts = [
        "--import-mode=append",
        "--cov-report=term-missing",
        "--cov=bob.pad.face",
    ]
    junit_logging           = "all"
    junit_log_passing_tests = false

# [profile]
#     repository_url = "git@gitlab.idiap.ch:bob/dev-profile.git"
#     commit_hash = "370d1fe4102014cb50e17ce9dd829ae47d21e9b8"
