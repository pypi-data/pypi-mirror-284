# Copyright (c) 2017-2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
# fmt: off
# isort: skip_file
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import enterprise_mediator_administration_service_pb2 as com_dot_digitalasset_dot_canton_dot_domain_dot_admin_dot_v0_dot_enterprise__mediator__administration__service__pb2
from ....pruning.admin.v0 import pruning_pb2 as com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class EnterpriseMediatorAdministrationServiceStub(object):
    """administration service for mediator instances
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Prune = channel.unary_unary(
                '/com.digitalasset.canton.domain.admin.v0.EnterpriseMediatorAdministrationService/Prune',
                request_serializer=com_dot_digitalasset_dot_canton_dot_domain_dot_admin_dot_v0_dot_enterprise__mediator__administration__service__pb2.MediatorPruningRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.SetSchedule = channel.unary_unary(
                '/com.digitalasset.canton.domain.admin.v0.EnterpriseMediatorAdministrationService/SetSchedule',
                request_serializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetSchedule.Request.SerializeToString,
                response_deserializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetSchedule.Response.FromString,
                )
        self.SetCron = channel.unary_unary(
                '/com.digitalasset.canton.domain.admin.v0.EnterpriseMediatorAdministrationService/SetCron',
                request_serializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetCron.Request.SerializeToString,
                response_deserializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetCron.Response.FromString,
                )
        self.SetMaxDuration = channel.unary_unary(
                '/com.digitalasset.canton.domain.admin.v0.EnterpriseMediatorAdministrationService/SetMaxDuration',
                request_serializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetMaxDuration.Request.SerializeToString,
                response_deserializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetMaxDuration.Response.FromString,
                )
        self.SetRetention = channel.unary_unary(
                '/com.digitalasset.canton.domain.admin.v0.EnterpriseMediatorAdministrationService/SetRetention',
                request_serializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetRetention.Request.SerializeToString,
                response_deserializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetRetention.Response.FromString,
                )
        self.ClearSchedule = channel.unary_unary(
                '/com.digitalasset.canton.domain.admin.v0.EnterpriseMediatorAdministrationService/ClearSchedule',
                request_serializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.ClearSchedule.Request.SerializeToString,
                response_deserializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.ClearSchedule.Response.FromString,
                )
        self.GetSchedule = channel.unary_unary(
                '/com.digitalasset.canton.domain.admin.v0.EnterpriseMediatorAdministrationService/GetSchedule',
                request_serializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.GetSchedule.Request.SerializeToString,
                response_deserializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.GetSchedule.Response.FromString,
                )
        self.LocatePruningTimestamp = channel.unary_unary(
                '/com.digitalasset.canton.domain.admin.v0.EnterpriseMediatorAdministrationService/LocatePruningTimestamp',
                request_serializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.LocatePruningTimestamp.Request.SerializeToString,
                response_deserializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.LocatePruningTimestamp.Response.FromString,
                )


class EnterpriseMediatorAdministrationServiceServicer(object):
    """administration service for mediator instances
    """

    def Prune(self, request, context):
        """Remove unnecessary data from the Mediator
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSchedule(self, request, context):
        """Enable automatic pruning using the specified schedule parameters
        The following errors may occur on the SetSchedule or Update commands:
        - ``INVALID_ARGUMENT``: if a parameter is missing or an invalid cron expression
        or duration.
        - ``FAILED_PRECONDITION``: if automatic background pruning has not been enabled
        or if invoked on a participant running the Community Edition.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCron(self, request, context):
        """Modify individual pruning schedule parameters.
        - ``INVALID_ARGUMENT``: if the payload is malformed or no schedule is configured
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetMaxDuration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRetention(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearSchedule(self, request, context):
        """Disable automatic pruning and remove the persisted schedule configuration.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSchedule(self, request, context):
        """Retrieve the automatic pruning configuration.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LocatePruningTimestamp(self, request, context):
        """Retrieve pruning timestamp at or near the "beginning" of events.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EnterpriseMediatorAdministrationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Prune': grpc.unary_unary_rpc_method_handler(
                    servicer.Prune,
                    request_deserializer=com_dot_digitalasset_dot_canton_dot_domain_dot_admin_dot_v0_dot_enterprise__mediator__administration__service__pb2.MediatorPruningRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetSchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSchedule,
                    request_deserializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetSchedule.Request.FromString,
                    response_serializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetSchedule.Response.SerializeToString,
            ),
            'SetCron': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCron,
                    request_deserializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetCron.Request.FromString,
                    response_serializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetCron.Response.SerializeToString,
            ),
            'SetMaxDuration': grpc.unary_unary_rpc_method_handler(
                    servicer.SetMaxDuration,
                    request_deserializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetMaxDuration.Request.FromString,
                    response_serializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetMaxDuration.Response.SerializeToString,
            ),
            'SetRetention': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRetention,
                    request_deserializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetRetention.Request.FromString,
                    response_serializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetRetention.Response.SerializeToString,
            ),
            'ClearSchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearSchedule,
                    request_deserializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.ClearSchedule.Request.FromString,
                    response_serializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.ClearSchedule.Response.SerializeToString,
            ),
            'GetSchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSchedule,
                    request_deserializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.GetSchedule.Request.FromString,
                    response_serializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.GetSchedule.Response.SerializeToString,
            ),
            'LocatePruningTimestamp': grpc.unary_unary_rpc_method_handler(
                    servicer.LocatePruningTimestamp,
                    request_deserializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.LocatePruningTimestamp.Request.FromString,
                    response_serializer=com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.LocatePruningTimestamp.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.digitalasset.canton.domain.admin.v0.EnterpriseMediatorAdministrationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EnterpriseMediatorAdministrationService(object):
    """administration service for mediator instances
    """

    @staticmethod
    def Prune(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.digitalasset.canton.domain.admin.v0.EnterpriseMediatorAdministrationService/Prune',
            com_dot_digitalasset_dot_canton_dot_domain_dot_admin_dot_v0_dot_enterprise__mediator__administration__service__pb2.MediatorPruningRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.digitalasset.canton.domain.admin.v0.EnterpriseMediatorAdministrationService/SetSchedule',
            com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetSchedule.Request.SerializeToString,
            com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetSchedule.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetCron(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.digitalasset.canton.domain.admin.v0.EnterpriseMediatorAdministrationService/SetCron',
            com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetCron.Request.SerializeToString,
            com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetCron.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetMaxDuration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.digitalasset.canton.domain.admin.v0.EnterpriseMediatorAdministrationService/SetMaxDuration',
            com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetMaxDuration.Request.SerializeToString,
            com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetMaxDuration.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetRetention(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.digitalasset.canton.domain.admin.v0.EnterpriseMediatorAdministrationService/SetRetention',
            com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetRetention.Request.SerializeToString,
            com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.SetRetention.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClearSchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.digitalasset.canton.domain.admin.v0.EnterpriseMediatorAdministrationService/ClearSchedule',
            com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.ClearSchedule.Request.SerializeToString,
            com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.ClearSchedule.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.digitalasset.canton.domain.admin.v0.EnterpriseMediatorAdministrationService/GetSchedule',
            com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.GetSchedule.Request.SerializeToString,
            com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.GetSchedule.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LocatePruningTimestamp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.digitalasset.canton.domain.admin.v0.EnterpriseMediatorAdministrationService/LocatePruningTimestamp',
            com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.LocatePruningTimestamp.Request.SerializeToString,
            com_dot_digitalasset_dot_canton_dot_pruning_dot_admin_dot_v0_dot_pruning__pb2.LocatePruningTimestamp.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
