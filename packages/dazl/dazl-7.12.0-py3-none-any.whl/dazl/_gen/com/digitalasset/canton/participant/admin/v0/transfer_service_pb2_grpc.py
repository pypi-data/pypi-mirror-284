# Copyright (c) 2017-2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
# fmt: off
# isort: skip_file
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import transfer_service_pb2 as com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_transfer__service__pb2


class TransferServiceStub(object):
    """Supports transferring contracts from one domain to another
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TransferOut = channel.unary_unary(
                '/com.digitalasset.canton.participant.admin.v0.TransferService/TransferOut',
                request_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_transfer__service__pb2.AdminTransferOutRequest.SerializeToString,
                response_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_transfer__service__pb2.AdminTransferOutResponse.FromString,
                )
        self.TransferIn = channel.unary_unary(
                '/com.digitalasset.canton.participant.admin.v0.TransferService/TransferIn',
                request_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_transfer__service__pb2.AdminTransferInRequest.SerializeToString,
                response_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_transfer__service__pb2.AdminTransferInResponse.FromString,
                )
        self.TransferSearch = channel.unary_unary(
                '/com.digitalasset.canton.participant.admin.v0.TransferService/TransferSearch',
                request_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_transfer__service__pb2.AdminTransferSearchQuery.SerializeToString,
                response_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_transfer__service__pb2.AdminTransferSearchResponse.FromString,
                )


class TransferServiceServicer(object):
    """Supports transferring contracts from one domain to another
    """

    def TransferOut(self, request, context):
        """transfer out a contract
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferIn(self, request, context):
        """transfer-in a contract
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferSearch(self, request, context):
        """return the in-flight transfers on a given participant for a given target domain
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TransferServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TransferOut': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferOut,
                    request_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_transfer__service__pb2.AdminTransferOutRequest.FromString,
                    response_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_transfer__service__pb2.AdminTransferOutResponse.SerializeToString,
            ),
            'TransferIn': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferIn,
                    request_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_transfer__service__pb2.AdminTransferInRequest.FromString,
                    response_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_transfer__service__pb2.AdminTransferInResponse.SerializeToString,
            ),
            'TransferSearch': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferSearch,
                    request_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_transfer__service__pb2.AdminTransferSearchQuery.FromString,
                    response_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_transfer__service__pb2.AdminTransferSearchResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.digitalasset.canton.participant.admin.v0.TransferService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TransferService(object):
    """Supports transferring contracts from one domain to another
    """

    @staticmethod
    def TransferOut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.digitalasset.canton.participant.admin.v0.TransferService/TransferOut',
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_transfer__service__pb2.AdminTransferOutRequest.SerializeToString,
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_transfer__service__pb2.AdminTransferOutResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransferIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.digitalasset.canton.participant.admin.v0.TransferService/TransferIn',
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_transfer__service__pb2.AdminTransferInRequest.SerializeToString,
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_transfer__service__pb2.AdminTransferInResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransferSearch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.digitalasset.canton.participant.admin.v0.TransferService/TransferSearch',
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_transfer__service__pb2.AdminTransferSearchQuery.SerializeToString,
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_transfer__service__pb2.AdminTransferSearchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
