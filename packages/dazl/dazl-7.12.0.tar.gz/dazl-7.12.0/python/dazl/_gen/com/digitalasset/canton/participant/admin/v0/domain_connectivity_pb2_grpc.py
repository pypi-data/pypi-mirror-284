# Copyright (c) 2017-2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
# fmt: off
# isort: skip_file
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import domain_connectivity_pb2 as com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2


class DomainConnectivityServiceStub(object):
    """*
    Domain connectivity service for adding and connecting to domains

    The domain connectivity service allows to register to new domains and control the
    participants domain connections.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ReconnectDomains = channel.unary_unary(
                '/com.digitalasset.canton.participant.admin.v0.DomainConnectivityService/ReconnectDomains',
                request_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ReconnectDomainsRequest.SerializeToString,
                response_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ReconnectDomainsResponse.FromString,
                )
        self.RegisterDomain = channel.unary_unary(
                '/com.digitalasset.canton.participant.admin.v0.DomainConnectivityService/RegisterDomain',
                request_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.RegisterDomainRequest.SerializeToString,
                response_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.RegisterDomainResponse.FromString,
                )
        self.ModifyDomain = channel.unary_unary(
                '/com.digitalasset.canton.participant.admin.v0.DomainConnectivityService/ModifyDomain',
                request_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ModifyDomainRequest.SerializeToString,
                response_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ModifyDomainResponse.FromString,
                )
        self.ConnectDomain = channel.unary_unary(
                '/com.digitalasset.canton.participant.admin.v0.DomainConnectivityService/ConnectDomain',
                request_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ConnectDomainRequest.SerializeToString,
                response_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ConnectDomainResponse.FromString,
                )
        self.DisconnectDomain = channel.unary_unary(
                '/com.digitalasset.canton.participant.admin.v0.DomainConnectivityService/DisconnectDomain',
                request_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.DisconnectDomainRequest.SerializeToString,
                response_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.DisconnectDomainResponse.FromString,
                )
        self.ListConnectedDomains = channel.unary_unary(
                '/com.digitalasset.canton.participant.admin.v0.DomainConnectivityService/ListConnectedDomains',
                request_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ListConnectedDomainsRequest.SerializeToString,
                response_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ListConnectedDomainsResponse.FromString,
                )
        self.ListConfiguredDomains = channel.unary_unary(
                '/com.digitalasset.canton.participant.admin.v0.DomainConnectivityService/ListConfiguredDomains',
                request_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ListConfiguredDomainsRequest.SerializeToString,
                response_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ListConfiguredDomainsResponse.FromString,
                )
        self.GetAgreement = channel.unary_unary(
                '/com.digitalasset.canton.participant.admin.v0.DomainConnectivityService/GetAgreement',
                request_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.GetAgreementRequest.SerializeToString,
                response_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.GetAgreementResponse.FromString,
                )
        self.AcceptAgreement = channel.unary_unary(
                '/com.digitalasset.canton.participant.admin.v0.DomainConnectivityService/AcceptAgreement',
                request_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.AcceptAgreementRequest.SerializeToString,
                response_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.AcceptAgreementResponse.FromString,
                )
        self.GetDomainId = channel.unary_unary(
                '/com.digitalasset.canton.participant.admin.v0.DomainConnectivityService/GetDomainId',
                request_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.GetDomainIdRequest.SerializeToString,
                response_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.GetDomainIdResponse.FromString,
                )


class DomainConnectivityServiceServicer(object):
    """*
    Domain connectivity service for adding and connecting to domains

    The domain connectivity service allows to register to new domains and control the
    participants domain connections.
    """

    def ReconnectDomains(self, request, context):
        """reconnect to domains
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterDomain(self, request, context):
        """configure a new domain connection
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ModifyDomain(self, request, context):
        """reconfigure a domain connection
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConnectDomain(self, request, context):
        """connect to a configured domain
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisconnectDomain(self, request, context):
        """disconnect from a configured domain
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListConnectedDomains(self, request, context):
        """list connected domains
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListConfiguredDomains(self, request, context):
        """list configured domains
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAgreement(self, request, context):
        """Get the service agreement for the domain
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AcceptAgreement(self, request, context):
        """Accept the agreement of the domain
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDomainId(self, request, context):
        """Get the domain id of the given domain alias
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DomainConnectivityServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ReconnectDomains': grpc.unary_unary_rpc_method_handler(
                    servicer.ReconnectDomains,
                    request_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ReconnectDomainsRequest.FromString,
                    response_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ReconnectDomainsResponse.SerializeToString,
            ),
            'RegisterDomain': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterDomain,
                    request_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.RegisterDomainRequest.FromString,
                    response_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.RegisterDomainResponse.SerializeToString,
            ),
            'ModifyDomain': grpc.unary_unary_rpc_method_handler(
                    servicer.ModifyDomain,
                    request_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ModifyDomainRequest.FromString,
                    response_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ModifyDomainResponse.SerializeToString,
            ),
            'ConnectDomain': grpc.unary_unary_rpc_method_handler(
                    servicer.ConnectDomain,
                    request_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ConnectDomainRequest.FromString,
                    response_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ConnectDomainResponse.SerializeToString,
            ),
            'DisconnectDomain': grpc.unary_unary_rpc_method_handler(
                    servicer.DisconnectDomain,
                    request_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.DisconnectDomainRequest.FromString,
                    response_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.DisconnectDomainResponse.SerializeToString,
            ),
            'ListConnectedDomains': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConnectedDomains,
                    request_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ListConnectedDomainsRequest.FromString,
                    response_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ListConnectedDomainsResponse.SerializeToString,
            ),
            'ListConfiguredDomains': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConfiguredDomains,
                    request_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ListConfiguredDomainsRequest.FromString,
                    response_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ListConfiguredDomainsResponse.SerializeToString,
            ),
            'GetAgreement': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAgreement,
                    request_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.GetAgreementRequest.FromString,
                    response_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.GetAgreementResponse.SerializeToString,
            ),
            'AcceptAgreement': grpc.unary_unary_rpc_method_handler(
                    servicer.AcceptAgreement,
                    request_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.AcceptAgreementRequest.FromString,
                    response_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.AcceptAgreementResponse.SerializeToString,
            ),
            'GetDomainId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDomainId,
                    request_deserializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.GetDomainIdRequest.FromString,
                    response_serializer=com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.GetDomainIdResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.digitalasset.canton.participant.admin.v0.DomainConnectivityService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DomainConnectivityService(object):
    """*
    Domain connectivity service for adding and connecting to domains

    The domain connectivity service allows to register to new domains and control the
    participants domain connections.
    """

    @staticmethod
    def ReconnectDomains(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.digitalasset.canton.participant.admin.v0.DomainConnectivityService/ReconnectDomains',
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ReconnectDomainsRequest.SerializeToString,
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ReconnectDomainsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterDomain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.digitalasset.canton.participant.admin.v0.DomainConnectivityService/RegisterDomain',
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.RegisterDomainRequest.SerializeToString,
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.RegisterDomainResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ModifyDomain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.digitalasset.canton.participant.admin.v0.DomainConnectivityService/ModifyDomain',
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ModifyDomainRequest.SerializeToString,
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ModifyDomainResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConnectDomain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.digitalasset.canton.participant.admin.v0.DomainConnectivityService/ConnectDomain',
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ConnectDomainRequest.SerializeToString,
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ConnectDomainResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisconnectDomain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.digitalasset.canton.participant.admin.v0.DomainConnectivityService/DisconnectDomain',
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.DisconnectDomainRequest.SerializeToString,
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.DisconnectDomainResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListConnectedDomains(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.digitalasset.canton.participant.admin.v0.DomainConnectivityService/ListConnectedDomains',
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ListConnectedDomainsRequest.SerializeToString,
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ListConnectedDomainsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListConfiguredDomains(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.digitalasset.canton.participant.admin.v0.DomainConnectivityService/ListConfiguredDomains',
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ListConfiguredDomainsRequest.SerializeToString,
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.ListConfiguredDomainsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAgreement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.digitalasset.canton.participant.admin.v0.DomainConnectivityService/GetAgreement',
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.GetAgreementRequest.SerializeToString,
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.GetAgreementResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AcceptAgreement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.digitalasset.canton.participant.admin.v0.DomainConnectivityService/AcceptAgreement',
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.AcceptAgreementRequest.SerializeToString,
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.AcceptAgreementResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDomainId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.digitalasset.canton.participant.admin.v0.DomainConnectivityService/GetDomainId',
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.GetDomainIdRequest.SerializeToString,
            com_dot_digitalasset_dot_canton_dot_participant_dot_admin_dot_v0_dot_domain__connectivity__pb2.GetDomainIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
