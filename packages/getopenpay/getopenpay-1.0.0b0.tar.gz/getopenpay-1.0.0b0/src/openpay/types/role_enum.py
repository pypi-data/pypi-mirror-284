# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class RoleEnum(str, enum.Enum):
    ADMIN = "admin"
    DEVELOPER = "developer"
    SUPPORT_SPECIALIST = "support_specialist"
    READ_ONLY = "read_only"

    def visit(
        self,
        admin: typing.Callable[[], T_Result],
        developer: typing.Callable[[], T_Result],
        support_specialist: typing.Callable[[], T_Result],
        read_only: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is RoleEnum.ADMIN:
            return admin()
        if self is RoleEnum.DEVELOPER:
            return developer()
        if self is RoleEnum.SUPPORT_SPECIALIST:
            return support_specialist()
        if self is RoleEnum.READ_ONLY:
            return read_only()
