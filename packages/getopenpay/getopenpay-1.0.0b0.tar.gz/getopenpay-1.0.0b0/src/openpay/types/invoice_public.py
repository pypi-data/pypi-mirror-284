# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ..core.unchecked_base_model import UncheckedBaseModel
from .credit_card_type import CreditCardType
from .invoice_item_public import InvoiceItemPublic


class InvoicePublic(UncheckedBaseModel):
    id: str = pydantic_v1.Field()
    """
    Unique identifier of the invoice.
    """

    paid_at: dt.datetime = pydantic_v1.Field()
    """
    When the invoice is paid, in 'ISO 8601' format.
    """

    paid_amount_atom: int = pydantic_v1.Field()
    """
    Total amount paid. It is in atomic units (in USD this is cents).
    """

    billed_to: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    Name of the customer
    """

    billing_address: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    Billing address of the customer.
    """

    card_type: typing.Optional[CreditCardType] = pydantic_v1.Field(default=None)
    """
    Visa, Amex, Mastercard, etc
    """

    last_four: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    Last four digits of credit card
    """

    lines: typing.Optional[typing.List[InvoiceItemPublic]] = pydantic_v1.Field(default=None)
    """
    List of individual line items that make up the invoice.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
