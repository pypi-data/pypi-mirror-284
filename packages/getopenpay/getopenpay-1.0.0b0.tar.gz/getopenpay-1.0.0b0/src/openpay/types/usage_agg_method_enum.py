# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class UsageAggMethodEnum(str, enum.Enum):
    SUM = "sum"
    LAST_DURING_PERIOD = "last_during_period"
    LAST_EVER = "last_ever"
    MAX = "max"

    def visit(
        self,
        sum: typing.Callable[[], T_Result],
        last_during_period: typing.Callable[[], T_Result],
        last_ever: typing.Callable[[], T_Result],
        max: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is UsageAggMethodEnum.SUM:
            return sum()
        if self is UsageAggMethodEnum.LAST_DURING_PERIOD:
            return last_during_period()
        if self is UsageAggMethodEnum.LAST_EVER:
            return last_ever()
        if self is UsageAggMethodEnum.MAX:
            return max()
