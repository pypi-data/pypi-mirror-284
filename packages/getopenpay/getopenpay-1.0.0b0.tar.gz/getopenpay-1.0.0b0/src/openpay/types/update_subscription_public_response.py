# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ..core.unchecked_base_model import UncheckedBaseModel
from .invoice_external import InvoiceExternal
from .payment_method_external import PaymentMethodExternal
from .price_external import PriceExternal
from .product_external import ProductExternal
from .subscription_external import SubscriptionExternal


class UpdateSubscriptionPublicResponse(UncheckedBaseModel):
    subscriptions: typing.List[SubscriptionExternal] = pydantic_v1.Field()
    """
    List of subscriptions after update (containing original and any newly spawned subscriptions)
    """

    invoices: typing.List[InvoiceExternal] = pydantic_v1.Field()
    """
    The list of invoices generated from the update
    """

    prices: typing.List[PriceExternal] = pydantic_v1.Field()
    """
    The list of prices related to the subscriptions
    """

    products: typing.List[ProductExternal] = pydantic_v1.Field()
    """
    The list of products related to the subscriptions
    """

    payment_methods: typing.List[PaymentMethodExternal] = pydantic_v1.Field()
    """
    List of Customerâ€™s Payment Methods.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
