# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ..core.unchecked_base_model import UncheckedBaseModel
from .object_name import ObjectName
from .payment_processor_name import PaymentProcessorName


class PaymentProcessorExternal(UncheckedBaseModel):
    id: str = pydantic_v1.Field()
    """
    Unique identifier of the payment_processor.
    """

    object: typing.Optional[ObjectName] = None
    created_at: dt.datetime = pydantic_v1.Field()
    """
    DateTime at which the object was created, in 'ISO 8601' format.
    """

    updated_at: dt.datetime = pydantic_v1.Field()
    """
    DateTime at which the object was updated, in 'ISO 8601' format.
    """

    is_deleted: typing.Optional[bool] = pydantic_v1.Field(default=None)
    """
    If true, indicates that this object has been deleted
    """

    account_id: str = pydantic_v1.Field()
    """
    Unique identifier of the account.
    """

    processor_name: PaymentProcessorName = pydantic_v1.Field()
    """
    Name of payment processor.
    """

    api_keys: typing.Dict[str, typing.Any] = pydantic_v1.Field()
    """
    These keys will allow to authenticate API requests to payment processor.
    """

    description: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    Description of payment processor.
    """

    is_default: bool = pydantic_v1.Field()
    """
    Indicates whether this payment processor is default or not
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
