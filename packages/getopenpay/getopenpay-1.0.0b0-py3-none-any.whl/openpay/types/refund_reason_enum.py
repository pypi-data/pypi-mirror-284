# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class RefundReasonEnum(str, enum.Enum):
    MANUAL = "manual"
    DUPLICATE = "duplicate"
    FRAUDULENT = "fraudulent"
    REQUESTED_BY_CUSTOMER = "requested_by_customer"
    EXPIRED_UNCAPTURED_CHARGE = "expired_uncaptured_charge"

    def visit(
        self,
        manual: typing.Callable[[], T_Result],
        duplicate: typing.Callable[[], T_Result],
        fraudulent: typing.Callable[[], T_Result],
        requested_by_customer: typing.Callable[[], T_Result],
        expired_uncaptured_charge: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is RefundReasonEnum.MANUAL:
            return manual()
        if self is RefundReasonEnum.DUPLICATE:
            return duplicate()
        if self is RefundReasonEnum.FRAUDULENT:
            return fraudulent()
        if self is RefundReasonEnum.REQUESTED_BY_CUSTOMER:
            return requested_by_customer()
        if self is RefundReasonEnum.EXPIRED_UNCAPTURED_CHARGE:
            return expired_uncaptured_charge()
