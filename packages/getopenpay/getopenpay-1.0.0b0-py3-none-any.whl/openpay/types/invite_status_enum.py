# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class InviteStatusEnum(str, enum.Enum):
    PENDING = "pending"
    ACCEPTED = "accepted"
    DECLINED = "declined"
    CANCELED = "canceled"

    def visit(
        self,
        pending: typing.Callable[[], T_Result],
        accepted: typing.Callable[[], T_Result],
        declined: typing.Callable[[], T_Result],
        canceled: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is InviteStatusEnum.PENDING:
            return pending()
        if self is InviteStatusEnum.ACCEPTED:
            return accepted()
        if self is InviteStatusEnum.DECLINED:
            return declined()
        if self is InviteStatusEnum.CANCELED:
            return canceled()
