[build-system]
requires = ["setuptools>=45", "setuptools-git-versioning"]
build-backend = "setuptools.build_meta"

[tool.setuptools-git-versioning]
enabled = true
template = "{tag}"
dev_template = "{tag}.dev{ccount}"
dirty_template = "{tag}.dev{ccount}+dirty"

#[tool.setuptools.package-data]
# include VERSION file to a package
#my_module = ["VERSION"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
readme = {file = ["README.md"], content-type = "text/markdown"}
dependencies = {file = ["requirements.txt"]}
optional-dependencies.dev = {file = ["requirements-dev.txt"]}


[project.urls]
homepage = "https://config.pyfunc.com"
documentation = "https://docs.pyfunc.com"
repository = "https://github.com/pyfunc/config"
changelog = "https://github.com/pyfunc/config/releases"
wiki = "https://github.com/pyfunc/config/wiki"
issue = "https://github.com/pyfunc/config/issues/new"


[project]
name = "pyfunc_config"
dynamic = ["version", "readme", "dependencies", "optional-dependencies"]
description = "libs for cameramonit, ocr, fin-officer, cfo, and other projects"
keywords = ["test", "framework", "cameramonit", "fin-officer", "console", "terminal", "time"]
license = { file = "LICENSE" }
requires-python = ">=3.7"


authors = [
    { name = "Tom Sapletta", email = "tom@sapletta.com" },
]
maintainers = [
    { name = "pyfunc developers", email = "info@softreck.dev" }
]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Environment :: MacOS X",
    "Environment :: Other Environment",
    "Environment :: Win32 (MS Windows)",
    "Environment :: X11 Applications",
    "Framework :: IPython",
    "Framework :: Jupyter",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Other Audience",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft",
    "Operating System :: Microsoft :: MS-DOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: BSD",
    "Operating System :: POSIX :: BSD :: FreeBSD",
    "Operating System :: POSIX :: Linux",
    "Operating System :: POSIX :: SunOS/Solaris",
    "Operating System :: Unix",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation",
    "Programming Language :: Python :: Implementation :: IronPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Unix Shell",
    "Topic :: Desktop Environment",
    "Topic :: Education :: Computer Aided Instruction (CAI)",
    "Topic :: Education :: Testing",
    "Topic :: Office/Business",
    "Topic :: Other/Nonlisted Topic",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Pre-processors",
    "Topic :: Software Development :: User Interfaces",
    "Topic :: System :: Installation/Setup",
    "Topic :: System :: Logging",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Shells",
    "Topic :: Terminals",
    "Topic :: Utilities"
]


[tool.pylint]
max-line-length = 88
disable = [
    "C0103", # (invalid-name)
    "C0113", # (missing-module-docstring)
    "C0114", # (missing-class-docstring)
    "C0115", # (missing-function-docstring)
    "R0903", # (too-few-public-methods)
    "R0913", # (too-many-arguments)
    "W0105", # (pointless-string-statement)
]

[tool.flake8]
max_line_length = 99
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    ".asv",
    ".tox",
    ".ipynb_checkpoints"
]

[tool.isort]
line_length = 99
multi_line_output = 4
profile = "black"
src_paths = ["src/pyfunc_config", "test"]
honor_noqa = true


[tool.coverage.run]
#branch = true
#include = ["pyfunc/*"]
#relative_files = true
#disable_warnings = ["include-ignored"]
source = ["src"]


[tool.black]
line-length = 120