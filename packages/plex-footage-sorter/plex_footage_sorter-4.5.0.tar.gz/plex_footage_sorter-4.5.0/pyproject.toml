[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name="plex_footage_sorter"
authors=[
    {name = "Benjamin Mummery", email="benjamin.mummery@zapatacomputing.com"}
]
license = {file = "LICENSE"}
description = "A simple script to process android phone footage default names into plex-friendly filenames."
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dynamic = ["version"]
dependencies = []

[tool.setuptools.dynamic]
version = {attr = "src.__version__"}

[project.urls]
"Homepage" = "https://github.com/BenjaminMummery/plex-footage-sorter"
"Bug Tracker" = "https://github.com/BenjaminMummery/plex-footage-sorter/issues"

[project.scripts]
plex-footage-sorter = "src.plex_footage_sorter.entry:main"

[project.optional-dependencies]
dev = [
    "build",
    "pytest>=3.1.0",
    "pytest-cov",
    "pytest-mock",
    "pytest-virtualenv",
    "python-semantic-release",
]

[tool.setuptools.packages]
find = {}

[tool.distutils.bdist_wheel]
universal = true

[tool.mypy]
exclude = "tests/"
warn_unused_configs = true
check_untyped_defs = true

[tool.pytest.ini_options]
addopts = "--strict-markers"

[tool.interrogate]
ignore-init-method = true
fail-under = 100
verbose = 2
ignore_magic = true

[tool.flake8]
ignore = ["E203", "W503"]
max-line-length = 88
style="google"
count = true
arg-type-hints-in-docstring = true

[tool.semantic_release]
assets = []
commit_message = "build: {version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"
version_variables = ["src/__init__.py:__version__"]

[tool.semantic_release.branches.main]
match = "(main|master|release)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

