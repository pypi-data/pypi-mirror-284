[metadata]
name = cars-mesh
author = CNES
author_email = cars@cnes.fr
url = https://github.com/CNES/cars-mesh
description = "3D Surface reconstruction with texture and classification from remote sensing photogrammetric point cloud"
long_description = file:README.md
long_description_content_type = text/markdown
license = Apache Software License 2.0
license_files = LICENSE
platform = any
keywords = cars-mesh, 3D, DEM, cars, pandora, photogrammetry
classifiers = 
	Development Status :: 4 - Beta
	Intended Audience :: Developers
	Intended Audience :: End Users/Desktop
	Intended Audience :: Science/Research
	Environment :: Console
	Topic :: Software Development :: Libraries :: Python Modules
	License :: OSI Approved :: Apache Software License
	Operating System :: OS Independent
	Natural Language :: English
	Programming Language :: Python
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.8

[options]
python_requires = >=3.8
setup_requires = 
	setuptools>=65.5
	setuptools_scm[toml]>=6.2 # Following https://pypi.org/project/setuptools-scm/
	wheel
install_requires = 
	argparse                      # Python Argument Parser
	numpy                         # array manipulation
	laspy[laszip]                 # las file manipulation
	open3d-cpu                        # 3D library open source
	pandas                        # data with many attributes manipulation
	scipy                         # scientific library
	plyfile                       # ply file manipulation
	matplotlib                    # visualisation and meshing
	pyproj                        # coordinates conversion
	transitions                   # state machine
	rasterio                      # georeferenced data handler
package_dir = 
	. = cars_mesh
packages = find:

[options.extras_require]
dev = 
	pre-commit
	isort>=5.8.0                  # Check imports
	black>=21.5b0                 # PEP8 format code
	flake8>=3.9.1                 # General linter
	flake8-comprehensions>=3.4.0  # Check list/dict/set
	flake8-bugbear>=21.4.3        # Add some rules to flake8
	pylint                        # General linter
	setuptools_scm                # versions from git tag
	virtualenv
	configupdater
	twine                         # for pypi upload
	pytest
	pytest-cov
	tox
docs = 
	sphinx
	sphinx_rtd_theme
	sphinx_autoapi

[options.package_data]
cars_mesh = data/*, logging.json

[options.entry_points]
console_scripts = 
	cars-mesh = cars_mesh.cli:main
	cars-mesh-evaluate = cars_mesh.cli_evaluate:main

[bdist_wheel]
universal = false

[flake8]
exclude = .git, venv, build, dist, tests/test_output, docs, docs/source/conf.py
ignore = B028, B905, B907
extend-ignore = E203, W503
max-complexity = 15
max-line-length = 80
copyright-check = True
select = E,F,W,C,B9,C4,B

[egg_info]
tag_build = 
tag_date = 0

