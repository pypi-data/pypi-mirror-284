Metadata-Version: 2.1
Name: cntools
Version: 2.1.11
Summary: A package for identifying cellular neighborhoods
Author-email: Yicheng Tao <yctao@umich.edu>
Maintainer-email: Yicheng Tao <yctao@umich.edu>
License: MIT License
        
        Copyright (c) 2022 yctao7
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/liu-bioinfo-lab/CNTools
Project-URL: Issues, https://github.com/liu-bioinfo-lab/CNTools/issues
Keywords: cellular neighborhoods
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Science/Research
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: cython ==0.29.36
Requires-Dist: gdown ==5.1.0
Requires-Dist: jupyter ==1.0.0
Requires-Dist: matplotlib ==3.4.2
Requires-Dist: networkx ==2.6.2
Requires-Dist: numpy ==1.20.3
Requires-Dist: pandas ==1.2.4
Requires-Dist: pip ==23.2.1
Requires-Dist: pillow ==10.3.0
Requires-Dist: pydot ==1.4.2
Requires-Dist: python-louvain ==0.15
Requires-Dist: scikit-learn ==0.24.2
Requires-Dist: scipy ==1.6.2
Requires-Dist: seaborn ==0.11.2
Requires-Dist: shapely ==1.8.4
Requires-Dist: statsmodels ==0.12.2
Requires-Dist: tensorly ==0.5.1
Requires-Dist: tqdm ==4.62.1
Requires-Dist: spatial-lda ==0.1.3

# CNTools

## System requirements
The software denpendencies are listed in `pyproject.toml`. The software is independent of operating systems except that it needs Rosetta translation to work in macOS with Apple silicon.

## Installation guide
As we need a conda package pydot=1.4.2 (not a pip one), the package should be installed by
```
conda create -n cntools python=3.8 pydot=1.4.2
conda activate cntools
python -m pip install cntools
```
In macOS with Apple silicon, the package should be installed in an x86-64 conda environment by
```
CONDA_SUBDIR=osx-64 conda create -n cntools python=3.8 pydot=1.4.2
conda activate cntools
python -m pip install cntools
``` 

## Instructions for use

### Idenfity and smooth cellular neighborhoods
See `tests/test_crc.ipynb` for CRC dataset, `tests/test_t2d.ipynb` for T2D dataset, and `tests/test_hlt.ipynb` for HLT dataset. For example, to run CNE on the CRC dataset, just do
```
from cntools.datasets import load_ct_order, prep_crc, Dataset
from cntools.identification import CNE
from cntools.smoothing import NaiveSmooth

# load dataset
df = prep_crc(pd.read_csv('data/CRC/CRC_clusters_neighborhoods_markers.csv'))
ct_order = load_ct_order('data/CRC/ct_order.json')
ds = Dataset(df, ct_order)

# identify
identifier = CNE(n_cns=9, perp=15, lam=0.25)
cns = identifier.fit(ds) # output CN

# smooth
smoother = NaiveSmooth(ds=ds, n_cns=identifier.n_cns, feats=identifier.feats, s=3)
cns_smoothed_naive = smoother.fit(cns) # output CN after smoothing
```

### Analyze cellular neighborhoods
See jupyter notebooks in the `tests/analysis` folder.

## Demo
Run `tests/test_crc.ipynb`, `tests/test_t2d.ipynb`, and `tests/test_hlt.ipynb` for CN identification and smoothing. Run jupyter notebooks in the `tests/analysis/` folder for CN analyses. Expected CN outputs are in the `tests/cn/*/CNE/` folder. Expected analysis outputs are in the `tests/analysis_res/*/CNE/` folder.

## Acknowledgements
Our implementation adapts the code of [Spatial LDA](https://github.com/calico/spatial_lda), [Schurch et al. (2020)](https://github.com/nolanlab/NeighborhoodCoordination), and [Bhate et al. (2022)](https://github.com/nolanlab/TissueSchematics) as cellular neighborhood identification and analysis methods. We thank the authors for sharing their code.
```
@article{chen2020modeling,
  title={Modeling Multiplexed Images with Spatial-LDA Reveals Novel Tissue Microenvironments},
  author={Chen, Zhenghao and Soifer, Ilya and Hilton, Hugo and Keren, Leeat and Jojic, Vladimir},
  journal={Journal of Computational Biology},
  year={2020},
  publisher={Mary Ann Liebert, Inc., publishers 140 Huguenot Street, 3rd Floor New~â€¦}
}

@article{schurch2020coordinated,
  title={Coordinated cellular neighborhoods orchestrate antitumoral immunity at the colorectal cancer invasive front},
  author={Sch{\"u}rch, Christian M and Bhate, Salil S and Barlow, Graham L and Phillips, Darci J and Noti, Luca and Zlobec, Inti and Chu, Pauline and Black, Sarah and Demeter, Janos and McIlwain, David R and others},
  journal={Cell},
  volume={182},
  number={5},
  pages={1341--1359},
  year={2020},
  publisher={Elsevier}
}

@article{bhate2022tissue,
  title={Tissue schematics map the specialization of immune tissue motifs and their appropriation by tumors},
  author={Bhate, Salil S and Barlow, Graham L and Sch{\"u}rch, Christian M and Nolan, Garry P},
  journal={Cell Systems},
  volume={13},
  number={2},
  pages={109--130},
  year={2022},
  publisher={Elsevier}
}
```
