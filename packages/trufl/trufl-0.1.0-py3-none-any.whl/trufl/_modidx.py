# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/trufl',
                'doc_host': 'https://franckalbinet.github.io',
                'git_url': 'https://github.com/franckalbinet/trufl',
                'lib_path': 'trufl'},
  'syms': { 'trufl.callbacks': { 'trufl.callbacks.Callback': ('callbacks.html#callback', 'trufl/callbacks.py'),
                                 'trufl.callbacks.CountCB': ('callbacks.html#countcb', 'trufl/callbacks.py'),
                                 'trufl.callbacks.CountCB.__call__': ('callbacks.html#countcb.__call__', 'trufl/callbacks.py'),
                                 'trufl.callbacks.CountCB.__init__': ('callbacks.html#countcb.__init__', 'trufl/callbacks.py'),
                                 'trufl.callbacks.MaxCB': ('callbacks.html#maxcb', 'trufl/callbacks.py'),
                                 'trufl.callbacks.MaxCB.__call__': ('callbacks.html#maxcb.__call__', 'trufl/callbacks.py'),
                                 'trufl.callbacks.MaxCB.__init__': ('callbacks.html#maxcb.__init__', 'trufl/callbacks.py'),
                                 'trufl.callbacks.MinCB': ('callbacks.html#mincb', 'trufl/callbacks.py'),
                                 'trufl.callbacks.MinCB.__call__': ('callbacks.html#mincb.__call__', 'trufl/callbacks.py'),
                                 'trufl.callbacks.MinCB.__init__': ('callbacks.html#mincb.__init__', 'trufl/callbacks.py'),
                                 'trufl.callbacks.MoranICB': ('callbacks.html#moranicb', 'trufl/callbacks.py'),
                                 'trufl.callbacks.MoranICB.__call__': ('callbacks.html#moranicb.__call__', 'trufl/callbacks.py'),
                                 'trufl.callbacks.MoranICB.__init__': ('callbacks.html#moranicb.__init__', 'trufl/callbacks.py'),
                                 'trufl.callbacks.MoranICB._weights': ('callbacks.html#moranicb._weights', 'trufl/callbacks.py'),
                                 'trufl.callbacks.PriorCB': ('callbacks.html#priorcb', 'trufl/callbacks.py'),
                                 'trufl.callbacks.PriorCB.__call__': ('callbacks.html#priorcb.__call__', 'trufl/callbacks.py'),
                                 'trufl.callbacks.PriorCB.__init__': ('callbacks.html#priorcb.__init__', 'trufl/callbacks.py'),
                                 'trufl.callbacks.State': ('callbacks.html#state', 'trufl/callbacks.py'),
                                 'trufl.callbacks.State.__call__': ('callbacks.html#state.__call__', 'trufl/callbacks.py'),
                                 'trufl.callbacks.State.__init__': ('callbacks.html#state.__init__', 'trufl/callbacks.py'),
                                 'trufl.callbacks.State._flatten': ('callbacks.html#state._flatten', 'trufl/callbacks.py'),
                                 'trufl.callbacks.State.expand_to_k_nearest': ( 'callbacks.html#state.expand_to_k_nearest',
                                                                                'trufl/callbacks.py'),
                                 'trufl.callbacks.State.get': ('callbacks.html#state.get', 'trufl/callbacks.py'),
                                 'trufl.callbacks.State.run_cbs': ('callbacks.html#state.run_cbs', 'trufl/callbacks.py'),
                                 'trufl.callbacks.StdCB': ('callbacks.html#stdcb', 'trufl/callbacks.py'),
                                 'trufl.callbacks.StdCB.__call__': ('callbacks.html#stdcb.__call__', 'trufl/callbacks.py'),
                                 'trufl.callbacks.StdCB.__init__': ('callbacks.html#stdcb.__init__', 'trufl/callbacks.py'),
                                 'trufl.callbacks.Variable': ('callbacks.html#variable', 'trufl/callbacks.py')},
            'trufl.collector': { 'trufl.collector.DataCollector': ('collector.html#datacollector', 'trufl/collector.py'),
                                 'trufl.collector.DataCollector.__init__': ('collector.html#datacollector.__init__', 'trufl/collector.py'),
                                 'trufl.collector.DataCollector.collect': ('collector.html#datacollector.collect', 'trufl/collector.py'),
                                 'trufl.collector.DataCollector.get_values': ( 'collector.html#datacollector.get_values',
                                                                               'trufl/collector.py')},
            'trufl.mcdm': { 'trufl.mcdm.abspearson': ('mcdm.html#abspearson', 'trufl/mcdm.py'),
                            'trufl.mcdm.check_normalization_input': ('mcdm.html#check_normalization_input', 'trufl/mcdm.py'),
                            'trufl.mcdm.check_scoring_input': ('mcdm.html#check_scoring_input', 'trufl/mcdm.py'),
                            'trufl.mcdm.check_weighting_input': ('mcdm.html#check_weighting_input', 'trufl/mcdm.py'),
                            'trufl.mcdm.correlate': ('mcdm.html#correlate', 'trufl/mcdm.py'),
                            'trufl.mcdm.cp': ('mcdm.html#cp', 'trufl/mcdm.py'),
                            'trufl.mcdm.critic': ('mcdm.html#critic', 'trufl/mcdm.py'),
                            'trufl.mcdm.dcor': ('mcdm.html#dcor', 'trufl/mcdm.py'),
                            'trufl.mcdm.dist_matrix': ('mcdm.html#dist_matrix', 'trufl/mcdm.py'),
                            'trufl.mcdm.em': ('mcdm.html#em', 'trufl/mcdm.py'),
                            'trufl.mcdm.is_normalized_matrix': ('mcdm.html#is_normalized_matrix', 'trufl/mcdm.py'),
                            'trufl.mcdm.is_normalized_vector': ('mcdm.html#is_normalized_vector', 'trufl/mcdm.py'),
                            'trufl.mcdm.lin_func': ('mcdm.html#lin_func', 'trufl/mcdm.py'),
                            'trufl.mcdm.linear1': ('mcdm.html#linear1', 'trufl/mcdm.py'),
                            'trufl.mcdm.linear2': ('mcdm.html#linear2', 'trufl/mcdm.py'),
                            'trufl.mcdm.linear3': ('mcdm.html#linear3', 'trufl/mcdm.py'),
                            'trufl.mcdm.mw': ('mcdm.html#mw', 'trufl/mcdm.py'),
                            'trufl.mcdm.normalize': ('mcdm.html#normalize', 'trufl/mcdm.py'),
                            'trufl.mcdm.pearson': ('mcdm.html#pearson', 'trufl/mcdm.py'),
                            'trufl.mcdm.score': ('mcdm.html#score', 'trufl/mcdm.py'),
                            'trufl.mcdm.sd': ('mcdm.html#sd', 'trufl/mcdm.py'),
                            'trufl.mcdm.squared_dcor': ('mcdm.html#squared_dcor', 'trufl/mcdm.py'),
                            'trufl.mcdm.squared_dcov': ('mcdm.html#squared_dcov', 'trufl/mcdm.py'),
                            'trufl.mcdm.squared_dcov_matrix': ('mcdm.html#squared_dcov_matrix', 'trufl/mcdm.py'),
                            'trufl.mcdm.topsis': ('mcdm.html#topsis', 'trufl/mcdm.py'),
                            'trufl.mcdm.vector': ('mcdm.html#vector', 'trufl/mcdm.py'),
                            'trufl.mcdm.vic': ('mcdm.html#vic', 'trufl/mcdm.py'),
                            'trufl.mcdm.weigh': ('mcdm.html#weigh', 'trufl/mcdm.py')},
            'trufl.optimizer': { 'trufl.optimizer.Optimizer': ('optimizer.html#optimizer', 'trufl/optimizer.py'),
                                 'trufl.optimizer.Optimizer.__init__': ('optimizer.html#optimizer.__init__', 'trufl/optimizer.py'),
                                 'trufl.optimizer.Optimizer.get_rank': ('optimizer.html#optimizer.get_rank', 'trufl/optimizer.py')},
            'trufl.reader': { 'trufl.reader.read_geojson': ('reader.html#read_geojson', 'trufl/reader.py'),
                              'trufl.reader.read_shapefile': ('reader.html#read_shapefile', 'trufl/reader.py')},
            'trufl.sampler': { 'trufl.sampler.Sampler': ('sampler.html#sampler', 'trufl/sampler.py'),
                               'trufl.sampler.Sampler.__init__': ('sampler.html#sampler.__init__', 'trufl/sampler.py'),
                               'trufl.sampler.Sampler.loc_ids': ('sampler.html#sampler.loc_ids', 'trufl/sampler.py'),
                               'trufl.sampler.Sampler.sample': ('sampler.html#sampler.sample', 'trufl/sampler.py'),
                               'trufl.sampler.rank_to_sample': ('sampler.html#rank_to_sample', 'trufl/sampler.py')},
            'trufl.utils': { 'trufl.utils.anonymize_raster': ('utils.html#anonymize_raster', 'trufl/utils.py'),
                             'trufl.utils.gridder': ('utils.html#gridder', 'trufl/utils.py'),
                             'trufl.utils.reproject_raster': ('utils.html#reproject_raster', 'trufl/utils.py')}}}
