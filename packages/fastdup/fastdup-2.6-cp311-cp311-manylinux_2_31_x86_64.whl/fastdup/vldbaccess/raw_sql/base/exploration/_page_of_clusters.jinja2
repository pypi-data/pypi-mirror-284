SELECT *, ROW_NUMBER() OVER() as cluster_rn
FROM (
    SELECT
        --{% if is_textual_search %}
        max({% include "_text_img_relevance.jinja2" %}) AS txt_relevance,
        --{% else %}
        max(formed_by) AS formed,
        max(n_images+n_objects) AS n_media,
        --{% endif %}
        --{% if similarity_using_vector_db and anchor_media_id and cosine_similarity %}
        MIN(1 - (image_vector_filtered.similarity_distance_)) as similarity_distance,
        --{% elif similarity_using_vector_db and anchor_media_id %}
        MIN(image_vector_filtered.similarity_distance_) as similarity_distance,
        --{% elif anchor_media_id %}
        MIN(1-distance) as similarity_distance,
        --{% endif %}
        count(distinct (metadata->>'video')) n_videos_filtered,
        sum(CASE WHEN metadata->>'video' IS NOT NULL THEN 1 ELSE 0 END) n_frames_filtered,
        sum(CASE WHEN cluster_type = 'OBJECTS' THEN 1 ELSE 0 END) n_objects_filtered,
        sum(CASE WHEN cluster_type = 'IMAGES' THEN 1 ELSE 0 END) n_images_filtered,
        COUNT(*) n_media_filtered,
        cluster_id
    FROM
        flat_similarity_clusters
        {% include "_similarity_join_filtering.jinja2" %}
    WHERE
        true
        {% include "_composite_filter.jinja2" %}
    GROUP BY
        cluster_id
    ORDER BY
        --{% if anchor_media_id %}
        similarity_distance ASC NULLS LAST,
        --{% elif is_textual_search %}
        txt_relevance DESC NULLS LAST,
        --{% elif Settings.SORT_EXPLORATION_RESULTS_BY_CLUSTER_FORMED %}
        formed, n_media_filtered DESC,
        --{% else %}
        n_media_filtered DESC,
        --{% endif %}
        cluster_id  -- ensure deterministic order
    OFFSET {{offset}}
    LIMIT {{page_size}}
) foo