from typing import List
from typing import overload
import com.google.gson
import ghidra.app.util.bin
import ghidra.file.formats.cart
import java.lang


class CartV1File(object):




    @overload
    def __init__(self, __a0: ghidra.app.util.bin.BinaryReader): ...

    @overload
    def __init__(self, __a0: ghidra.app.util.bin.ByteProvider): ...

    @overload
    def __init__(self, __a0: ghidra.app.util.bin.BinaryReader, __a1: unicode): ...

    @overload
    def __init__(self, __a0: ghidra.app.util.bin.ByteProvider, __a1: unicode): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getDataOffset(self) -> long: ...

    def getDataSize(self) -> long: ...

    def getDecryptor(self) -> ghidra.file.formats.cart.CartV1Decryptor: ...

    def getFooter(self) -> ghidra.file.formats.cart.CartV1Footer: ...

    def getFooterHash(self, __a0: unicode) -> List[int]: ...

    def getHeader(self) -> ghidra.file.formats.cart.CartV1Header: ...

    def getMetadata(self) -> com.google.gson.JsonObject: ...

    def getName(self) -> unicode: ...

    def getPackedSize(self) -> long: ...

    def getPath(self) -> unicode: ...

    @overload
    @staticmethod
    def hasCartFooter(__a0: ghidra.app.util.bin.BinaryReader) -> bool: ...

    @overload
    @staticmethod
    def hasCartFooter(__a0: ghidra.app.util.bin.ByteProvider) -> bool: ...

    @overload
    @staticmethod
    def hasCartHeader(__a0: ghidra.app.util.bin.BinaryReader) -> bool: ...

    @overload
    @staticmethod
    def hasCartHeader(__a0: ghidra.app.util.bin.ByteProvider) -> bool: ...

    def hashCode(self) -> int: ...

    @overload
    @staticmethod
    def isCart(__a0: ghidra.app.util.bin.BinaryReader) -> bool: ...

    @overload
    @staticmethod
    def isCart(__a0: ghidra.app.util.bin.ByteProvider) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def dataOffset(self) -> long: ...

    @property
    def dataSize(self) -> long: ...

    @property
    def decryptor(self) -> ghidra.file.formats.cart.CartV1Decryptor: ...

    @property
    def footer(self) -> ghidra.file.formats.cart.CartV1Footer: ...

    @property
    def header(self) -> ghidra.file.formats.cart.CartV1Header: ...

    @property
    def metadata(self) -> com.google.gson.JsonObject: ...

    @property
    def name(self) -> unicode: ...

    @property
    def packedSize(self) -> long: ...

    @property
    def path(self) -> unicode: ...