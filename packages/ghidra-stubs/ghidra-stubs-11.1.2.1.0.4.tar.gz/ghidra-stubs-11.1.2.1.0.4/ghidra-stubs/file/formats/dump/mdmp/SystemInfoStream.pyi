from typing import overload
import ghidra.app.util.bin
import ghidra.program.model.data
import java.lang


class SystemInfoStream(object, ghidra.app.util.bin.StructConverter):
    ASCII: ghidra.program.model.data.DataType
    BYTE: ghidra.program.model.data.DataType
    DWORD: ghidra.program.model.data.DataType
    IBO32: ghidra.program.model.data.DataType
    IBO64: ghidra.program.model.data.DataType
    NAME: unicode = u'MINIDUMP_SYSTEM_INFO'
    POINTER: ghidra.program.model.data.DataType
    QWORD: ghidra.program.model.data.DataType
    SLEB128: ghidra.program.model.data.SignedLeb128DataType
    STRING: ghidra.program.model.data.DataType
    ULEB128: ghidra.program.model.data.UnsignedLeb128DataType
    UTF16: ghidra.program.model.data.DataType
    UTF8: ghidra.program.model.data.DataType
    VOID: ghidra.program.model.data.DataType
    WORD: ghidra.program.model.data.DataType







    def equals(self, __a0: object) -> bool: ...

    def getAMDExtendedCpuFeatures(self) -> int: ...

    def getBuildNumber(self) -> int: ...

    def getCSDName(self) -> unicode: ...

    def getCSDNameLength(self) -> int: ...

    def getCSDVersionRVA(self) -> int: ...

    def getClass(self) -> java.lang.Class: ...

    def getFeatureInformation(self) -> int: ...

    def getMajorVersion(self) -> int: ...

    def getMinorVersion(self) -> int: ...

    def getNumberOfProcessors(self) -> int: ...

    def getPlatformId(self) -> int: ...

    def getProcessorArchitecture(self) -> int: ...

    def getProcessorLevel(self) -> int: ...

    def getProcessorRevision(self) -> int: ...

    def getProductType(self) -> int: ...

    def getSuiteMask(self) -> int: ...

    def getVendorId(self, __a0: int) -> int: ...

    def getVersionInformation(self) -> int: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setAMDExtendedCpuFeatures(self, __a0: int) -> None: ...

    def setBuildNumber(self, __a0: int) -> None: ...

    def setCSDRevisionRVA(self, __a0: int) -> None: ...

    def setFeatureInformation(self, __a0: int) -> None: ...

    def setMajorVersion(self, __a0: int) -> None: ...

    def setMinorVersion(self, __a0: int) -> None: ...

    def setNumberOfProcessors(self, __a0: int) -> None: ...

    def setPlatformId(self, __a0: int) -> None: ...

    def setProcessorArchitecture(self, __a0: int) -> None: ...

    def setProcessorLevel(self, __a0: int) -> None: ...

    def setProcessorRevision(self, __a0: int) -> None: ...

    def setProductType(self, __a0: int) -> None: ...

    def setSuiteMask(self, __a0: int) -> None: ...

    def setVendorId(self, __a0: int, __a1: int) -> None: ...

    def setVersionInformation(self, __a0: int) -> None: ...

    def toDataType(self) -> ghidra.program.model.data.DataType: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def AMDExtendedCpuFeatures(self) -> int: ...

    @AMDExtendedCpuFeatures.setter
    def AMDExtendedCpuFeatures(self, value: int) -> None: ...

    @property
    def CSDName(self) -> unicode: ...

    @property
    def CSDNameLength(self) -> int: ...

    @property
    def CSDRevisionRVA(self) -> None: ...  # No getter available.

    @CSDRevisionRVA.setter
    def CSDRevisionRVA(self, value: int) -> None: ...

    @property
    def CSDVersionRVA(self) -> int: ...

    @property
    def buildNumber(self) -> int: ...

    @buildNumber.setter
    def buildNumber(self, value: int) -> None: ...

    @property
    def featureInformation(self) -> int: ...

    @featureInformation.setter
    def featureInformation(self, value: int) -> None: ...

    @property
    def majorVersion(self) -> int: ...

    @majorVersion.setter
    def majorVersion(self, value: int) -> None: ...

    @property
    def minorVersion(self) -> int: ...

    @minorVersion.setter
    def minorVersion(self, value: int) -> None: ...

    @property
    def numberOfProcessors(self) -> int: ...

    @numberOfProcessors.setter
    def numberOfProcessors(self, value: int) -> None: ...

    @property
    def platformId(self) -> int: ...

    @platformId.setter
    def platformId(self, value: int) -> None: ...

    @property
    def processorArchitecture(self) -> int: ...

    @processorArchitecture.setter
    def processorArchitecture(self, value: int) -> None: ...

    @property
    def processorLevel(self) -> int: ...

    @processorLevel.setter
    def processorLevel(self, value: int) -> None: ...

    @property
    def processorRevision(self) -> int: ...

    @processorRevision.setter
    def processorRevision(self, value: int) -> None: ...

    @property
    def productType(self) -> int: ...

    @productType.setter
    def productType(self, value: int) -> None: ...

    @property
    def suiteMask(self) -> int: ...

    @suiteMask.setter
    def suiteMask(self, value: int) -> None: ...

    @property
    def versionInformation(self) -> int: ...

    @versionInformation.setter
    def versionInformation(self, value: int) -> None: ...