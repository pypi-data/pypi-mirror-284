from typing import overload
import com.google.gson
import com.google.gson.stream
import ghidra.program.model.data
import ghidra.program.model.data.ISF
import ghidra.util.task
import java.lang


class IsfDataTypeWriter(ghidra.program.model.data.ISF.AbstractIsfWriter):
    deferredKeys: List[object]



    def __init__(self, __a0: ghidra.program.model.data.DataTypeManager, __a1: List[object], __a2: java.io.Writer): ...



    def add(self, __a0: com.google.gson.JsonElement, __a1: unicode, __a2: com.google.gson.JsonElement) -> None: ...

    def close(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getObject(self, __a0: com.google.gson.JsonElement, __a1: java.lang.Class) -> object: ...

    @overload
    def getObjectDataType(self, __a0: ghidra.program.model.data.DataType) -> ghidra.program.model.data.ISF.IsfObject: ...

    @overload
    def getObjectDataType(self, __a0: ghidra.program.model.data.DataType, __a1: int) -> ghidra.program.model.data.ISF.IsfObject: ...

    def getObjectTypeDeclaration(self, __a0: ghidra.program.model.data.DataTypeComponent) -> ghidra.program.model.data.ISF.IsfObject: ...

    def getResults(self) -> com.google.gson.JsonArray: ...

    def getRootObject(self, __a0: ghidra.util.task.TaskMonitor) -> com.google.gson.JsonObject: ...

    def getTree(self, __a0: object) -> com.google.gson.JsonElement: ...

    def getWriter(self) -> com.google.gson.stream.JsonWriter: ...

    def hashCode(self) -> int: ...

    def newIsfDynamicComponent(self, __a0: ghidra.program.model.data.Dynamic, __a1: ghidra.program.model.data.ISF.IsfObject, __a2: int) -> ghidra.program.model.data.ISF.IsfObject: ...

    def newTypedObject(self, __a0: ghidra.program.model.data.DataType, __a1: ghidra.program.model.data.ISF.IsfObject) -> ghidra.program.model.data.ISF.IsfTypedObject: ...

    def newTypedefBase(self, __a0: ghidra.program.model.data.TypeDef) -> ghidra.program.model.data.ISF.IsfTypedefBase: ...

    def newTypedefPointer(self, __a0: ghidra.program.model.data.TypeDef) -> ghidra.program.model.data.ISF.IsfTypedefPointer: ...

    def newTypedefUser(self, __a0: ghidra.program.model.data.TypeDef, __a1: ghidra.program.model.data.ISF.IsfObject) -> ghidra.program.model.data.ISF.IsfObject: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def requestAddress(self, __a0: unicode) -> None: ...

    def requestSymbol(self, __a0: unicode) -> None: ...

    def resolve(self, __a0: ghidra.program.model.data.DataType) -> ghidra.program.model.data.ISF.IsfObject: ...

    def setSkipSymbols(self, __a0: bool) -> None: ...

    def setSkipTypes(self, __a0: bool) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def write(self, __a0: com.google.gson.JsonObject) -> None: ...

    @property
    def skipSymbols(self) -> None: ...  # No getter available.

    @skipSymbols.setter
    def skipSymbols(self, value: bool) -> None: ...

    @property
    def skipTypes(self) -> None: ...  # No getter available.

    @skipTypes.setter
    def skipTypes(self, value: bool) -> None: ...

    @property
    def writer(self) -> com.google.gson.stream.JsonWriter: ...