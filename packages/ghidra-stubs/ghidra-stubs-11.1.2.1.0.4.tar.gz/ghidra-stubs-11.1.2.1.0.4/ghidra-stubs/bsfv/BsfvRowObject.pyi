from typing import overload
import ghidra.bsfv
import ghidra.program.model.address
import ghidra.program.model.pcode
import java.lang


class BsfvRowObject(object):




    def __init__(self, __a0: int, __a1: ghidra.program.model.pcode.SequenceNumber, __a2: ghidra.program.model.pcode.Varnode, __a3: ghidra.program.model.pcode.PcodeOpAST, __a4: ghidra.program.model.pcode.PcodeOpAST, __a5: ghidra.bsfv.BSimFeatureType, __a6: ghidra.program.model.address.Address, __a7: int): ...



    def equals(self, __a0: object) -> bool: ...

    def getAddress(self) -> ghidra.program.model.address.Address: ...

    def getBSimFeatureType(self) -> ghidra.bsfv.BSimFeatureType: ...

    def getBaseVarnode(self) -> ghidra.program.model.pcode.Varnode: ...

    def getBasicBlockStart(self) -> ghidra.program.model.address.Address: ...

    def getBlockIndex(self) -> int: ...

    def getClass(self) -> java.lang.Class: ...

    def getFeature(self) -> ghidra.bsfv.BsfvFeatureColumnObject: ...

    def getOpMnemonic(self) -> unicode: ...

    def getPcodeOpAST(self) -> ghidra.program.model.pcode.PcodeOpAST: ...

    def getPreviousPcodeOpAST(self) -> ghidra.program.model.pcode.PcodeOpAST: ...

    def getSeq(self) -> ghidra.program.model.pcode.SequenceNumber: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def BSimFeatureType(self) -> ghidra.bsfv.BSimFeatureType: ...

    @property
    def address(self) -> ghidra.program.model.address.Address: ...

    @property
    def baseVarnode(self) -> ghidra.program.model.pcode.Varnode: ...

    @property
    def basicBlockStart(self) -> ghidra.program.model.address.Address: ...

    @property
    def blockIndex(self) -> int: ...

    @property
    def feature(self) -> ghidra.bsfv.BsfvFeatureColumnObject: ...

    @property
    def opMnemonic(self) -> unicode: ...

    @property
    def pcodeOpAST(self) -> ghidra.program.model.pcode.PcodeOpAST: ...

    @property
    def previousPcodeOpAST(self) -> ghidra.program.model.pcode.PcodeOpAST: ...

    @property
    def seq(self) -> ghidra.program.model.pcode.SequenceNumber: ...