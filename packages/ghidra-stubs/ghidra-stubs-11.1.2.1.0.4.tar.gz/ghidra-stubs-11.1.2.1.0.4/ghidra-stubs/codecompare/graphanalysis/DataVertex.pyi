from typing import overload
import java.lang


class DataVertex(object):




    @overload
    def __init__(self, __a0: ghidra.program.model.pcode.PcodeOpAST, __a1: ghidra.codecompare.graphanalysis.DataGraph, __a2: int): ...

    @overload
    def __init__(self, __a0: ghidra.program.model.pcode.VarnodeAST, __a1: ghidra.codecompare.graphanalysis.DataGraph, __a2: int): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def hashCode(self) -> int: ...

    def isCollapsed(self) -> bool: ...

    def isCommutative(self) -> bool: ...

    def isOp(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def collapsed(self) -> bool: ...

    @property
    def commutative(self) -> bool: ...

    @property
    def op(self) -> bool: ...