from typing import overload
import ghidra.framework.options
import java.awt
import java.lang


class DecompilerCodeComparisonOptions(object):
    HELP_TOPIC: unicode = u'FunctionComparison'
    OPTIONS_CATEGORY_NAME: unicode = u'Decompiler Code Comparison'



    def __init__(self): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getDiffHighlightColor(self) -> java.awt.Color: ...

    def getFocusedTokenIneligibleHighlightColor(self) -> java.awt.Color: ...

    def getFocusedTokenMatchHighlightColor(self) -> java.awt.Color: ...

    def getFocusedTokenUnmatchedHighlightColor(self) -> java.awt.Color: ...

    def hashCode(self) -> int: ...

    def loadOptions(self, __a0: ghidra.framework.options.ToolOptions) -> None: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def registerOptions(self, __a0: ghidra.framework.options.ToolOptions) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def diffHighlightColor(self) -> java.awt.Color: ...

    @property
    def focusedTokenIneligibleHighlightColor(self) -> java.awt.Color: ...

    @property
    def focusedTokenMatchHighlightColor(self) -> java.awt.Color: ...

    @property
    def focusedTokenUnmatchedHighlightColor(self) -> java.awt.Color: ...