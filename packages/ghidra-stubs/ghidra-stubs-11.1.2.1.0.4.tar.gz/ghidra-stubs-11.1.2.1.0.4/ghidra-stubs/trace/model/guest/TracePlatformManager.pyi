from typing import overload
import ghidra.program.model.lang
import ghidra.trace.model.guest
import java.lang
import java.util


class TracePlatformManager(object):








    def addGuestPlatform(self, __a0: ghidra.program.model.lang.CompilerSpec) -> ghidra.trace.model.guest.TraceGuestPlatform: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getGuestPlatforms(self) -> java.util.Collection: ...

    def getHostPlatform(self) -> ghidra.trace.model.guest.TracePlatform: ...

    def getOrAddPlatform(self, __a0: ghidra.program.model.lang.CompilerSpec) -> ghidra.trace.model.guest.TracePlatform: ...

    def getPlatform(self, __a0: ghidra.program.model.lang.CompilerSpec) -> ghidra.trace.model.guest.TracePlatform: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def guestPlatforms(self) -> java.util.Collection: ...

    @property
    def hostPlatform(self) -> ghidra.trace.model.guest.TracePlatform: ...