from typing import overload
import ghidra.program.model.lang
import ghidra.trace.database
import ghidra.trace.database.guest
import ghidra.trace.model.guest
import java.io
import java.lang
import java.util


class DBTracePlatformManager(object, ghidra.trace.database.DBTraceManager, ghidra.trace.model.guest.TracePlatformManager):




    def __init__(self, __a0: db.DBHandle, __a1: ghidra.framework.data.OpenMode, __a2: java.util.concurrent.locks.ReadWriteLock, __a3: ghidra.util.task.TaskMonitor, __a4: ghidra.program.model.lang.CompilerSpec, __a5: ghidra.trace.database.DBTrace): ...



    def addGuestPlatform(self, __a0: ghidra.program.model.lang.CompilerSpec) -> ghidra.trace.model.guest.TraceGuestPlatform: ...

    def assertMine(self, __a0: ghidra.trace.model.guest.TracePlatform) -> ghidra.trace.database.guest.InternalTracePlatform: ...

    def dbError(self, __a0: java.io.IOException) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getGuestPlatforms(self) -> java.util.Collection: ...

    def getHostPlatform(self) -> ghidra.trace.model.guest.TracePlatform: ...

    def getLanguageByKey(self, __a0: int) -> ghidra.trace.database.guest.DBTraceGuestPlatform.DBTraceGuestLanguage: ...

    def getLanguageByLanguage(self, __a0: ghidra.program.model.lang.Language) -> ghidra.trace.database.guest.DBTraceGuestPlatform.DBTraceGuestLanguage: ...

    def getOrAddPlatform(self, __a0: ghidra.program.model.lang.CompilerSpec) -> ghidra.trace.model.guest.TracePlatform: ...

    def getPlatform(self, __a0: ghidra.program.model.lang.CompilerSpec) -> ghidra.trace.database.guest.InternalTracePlatform: ...

    def getPlatformByKey(self, __a0: int) -> ghidra.trace.database.guest.InternalTracePlatform: ...

    def hashCode(self) -> int: ...

    def invalidateCache(self, __a0: bool) -> None: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def guestPlatforms(self) -> java.util.Collection: ...

    @property
    def hostPlatform(self) -> ghidra.trace.database.guest.InternalTracePlatform: ...