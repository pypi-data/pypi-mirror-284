from typing import overload
import ghidra.program.model.address
import ghidra.trace.database.address
import ghidra.trace.database.stack
import ghidra.trace.model
import ghidra.trace.model.stack
import ghidra.util
import ghidra.util.database
import java.lang


class DBTraceStackFrame(ghidra.util.database.DBAnnotatedObject, ghidra.trace.model.stack.TraceStackFrame, ghidra.trace.database.address.DBTraceOverlaySpaceAdapter.DecodesAddresses):
    TABLE_NAME: unicode = u'StackFrames'



    def __init__(self, __a0: ghidra.trace.database.stack.DBTraceStackManager, __a1: ghidra.util.database.DBCachedObjectStore, __a2: db.DBRecord): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getComment(self, __a0: long) -> unicode: ...

    def getKey(self) -> long: ...

    def getLevel(self) -> int: ...

    def getObjectKey(self) -> ghidra.util.database.ObjectKey: ...

    def getOverlaySpaceAdapter(self) -> ghidra.trace.database.address.DBTraceOverlaySpaceAdapter: ...

    def getProgramCounter(self, __a0: long) -> ghidra.program.model.address.Address: ...

    def getStack(self) -> ghidra.trace.model.stack.TraceStack: ...

    def getTableName(self) -> unicode: ...

    def hashCode(self) -> int: ...

    @overload
    def isDeleted(self) -> bool: ...

    @overload
    def isDeleted(self, __a0: ghidra.util.Lock) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def set(self, __a0: ghidra.trace.database.stack.DBTraceStack) -> None: ...

    def setComment(self, __a0: long, __a1: unicode) -> None: ...

    def setInvalid(self) -> None: ...

    def setProgramCounter(self, __a0: ghidra.trace.model.Lifespan, __a1: ghidra.program.model.address.Address) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def level(self) -> int: ...

    @property
    def overlaySpaceAdapter(self) -> ghidra.trace.database.address.DBTraceOverlaySpaceAdapter: ...

    @property
    def stack(self) -> ghidra.trace.database.stack.DBTraceStack: ...