from typing import List
from typing import overload
import db
import ghidra.util.database
import java.lang


class SchemaBuilder(object):




    def __init__(self): ...



    def build(self) -> db.Schema: ...

    def equals(self, __a0: object) -> bool: ...

    @overload
    def field(self, __a0: unicode, __a1: java.lang.Class) -> ghidra.util.database.SchemaBuilder: ...

    @overload
    def field(self, __a0: unicode, __a1: java.lang.Class, __a2: bool) -> ghidra.util.database.SchemaBuilder: ...

    def fieldCount(self) -> int: ...

    def getClass(self) -> java.lang.Class: ...

    @staticmethod
    def getColumnIndex(__a0: db.Schema, __a1: unicode) -> int: ...

    def hashCode(self) -> int: ...

    def keyField(self, __a0: unicode, __a1: java.lang.Class) -> ghidra.util.database.SchemaBuilder: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    @staticmethod
    def toIntArray(__a0: List[object]) -> List[int]: ...

    def toString(self) -> unicode: ...

    def version(self, __a0: int) -> ghidra.util.database.SchemaBuilder: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

