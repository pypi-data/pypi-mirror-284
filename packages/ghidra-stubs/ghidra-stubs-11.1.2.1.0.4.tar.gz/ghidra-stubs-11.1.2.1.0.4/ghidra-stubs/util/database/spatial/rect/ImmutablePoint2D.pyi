from typing import overload
import ghidra.util.database.spatial.rect
import java.lang


class ImmutablePoint2D(object, ghidra.util.database.spatial.rect.Point2D):




    def __init__(self, __a0: object, __a1: object, __a2: ghidra.util.database.spatial.rect.EuclideanSpace2D): ...



    def computeDistance(self, __a0: ghidra.util.database.spatial.rect.Point2D) -> float: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getSpace(self) -> ghidra.util.database.spatial.rect.EuclideanSpace2D: ...

    def getX(self) -> object: ...

    def getY(self) -> object: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def space(self) -> ghidra.util.database.spatial.rect.EuclideanSpace2D: ...

    @property
    def x(self) -> object: ...

    @property
    def y(self) -> object: ...