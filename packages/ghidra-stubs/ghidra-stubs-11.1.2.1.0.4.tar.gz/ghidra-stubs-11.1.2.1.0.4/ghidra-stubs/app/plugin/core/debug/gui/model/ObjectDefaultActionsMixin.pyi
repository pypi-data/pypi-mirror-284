from typing import overload
import ghidra.app.plugin.core.debug.gui.model
import ghidra.app.services
import ghidra.debug.api.tracemgr
import ghidra.framework.plugintool
import ghidra.program.model.address
import ghidra.trace.model.target
import java.lang
import javax.swing


class ObjectDefaultActionsMixin(object):








    def activatePath(self, __a0: ghidra.trace.model.target.TraceObjectKeyPath) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getCurrent(self) -> ghidra.debug.api.tracemgr.DebuggerCoordinates: ...

    def getTool(self) -> ghidra.framework.plugintool.PluginTool: ...

    @overload
    def goToAddress(self, __a0: ghidra.program.model.address.Address) -> None: ...

    @overload
    def goToAddress(self, __a0: ghidra.app.services.DebuggerListingService, __a1: ghidra.program.model.address.Address) -> None: ...

    def goToRange(self, __a0: ghidra.program.model.address.AddressRange) -> None: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    @overload
    def performDefaultAction(self, __a0: ghidra.trace.model.target.TraceObject) -> bool: ...

    @overload
    def performDefaultAction(self, __a0: ghidra.trace.model.target.TraceObjectValue) -> bool: ...

    @overload
    def performDefaultAction(self, __a0: object) -> bool: ...

    def performElementCellDefaultAction(self, __a0: javax.swing.JTable) -> bool: ...

    def performPathRowDefaultAction(self, __a0: ghidra.app.plugin.core.debug.gui.model.PathTableModel.PathRow) -> bool: ...

    def performValueRowDefaultAction(self, __a0: ghidra.app.plugin.core.debug.gui.model.ObjectTableModel.ValueRow) -> bool: ...

    def toString(self) -> unicode: ...

    def toggleObject(self, __a0: ghidra.trace.model.target.TraceObject) -> None: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def current(self) -> ghidra.debug.api.tracemgr.DebuggerCoordinates: ...

    @property
    def tool(self) -> ghidra.framework.plugintool.PluginTool: ...