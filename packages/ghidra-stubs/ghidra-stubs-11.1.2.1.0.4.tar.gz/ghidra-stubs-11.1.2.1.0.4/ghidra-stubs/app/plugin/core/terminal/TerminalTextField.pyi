from typing import overload
import docking.widgets.fieldpanel.field
import docking.widgets.fieldpanel.internal
import docking.widgets.fieldpanel.support
import ghidra.app.plugin.core.terminal
import ghidra.app.plugin.core.terminal.vt
import java.awt
import java.lang
import javax.swing


class TerminalTextField(object, docking.widgets.fieldpanel.field.TextField):








    def contains(self, __a0: int, __a1: int) -> bool: ...

    @staticmethod
    def create(__a0: ghidra.app.plugin.core.terminal.vt.VtLine, __a1: java.awt.FontMetrics, __a2: ghidra.app.plugin.core.terminal.vt.AnsiColorResolver) -> ghidra.app.plugin.core.terminal.TerminalTextField: ...

    def dataToScreenLocation(self, __a0: int, __a1: int) -> docking.widgets.fieldpanel.support.RowColLocation: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getCol(self, __a0: int, __a1: int) -> int: ...

    def getCursorBounds(self, __a0: int, __a1: int) -> java.awt.Rectangle: ...

    def getFieldElement(self, __a0: int, __a1: int) -> docking.widgets.fieldpanel.field.FieldElement: ...

    def getHeight(self) -> int: ...

    def getHeightAbove(self) -> int: ...

    def getHeightBelow(self) -> int: ...

    def getNumCols(self, __a0: int) -> int: ...

    def getNumDataRows(self) -> int: ...

    def getNumRows(self) -> int: ...

    def getPreferredWidth(self) -> int: ...

    def getRow(self, __a0: int) -> int: ...

    def getScrollableUnitIncrement(self, __a0: int, __a1: int, __a2: int) -> int: ...

    def getStartX(self) -> int: ...

    def getText(self) -> unicode: ...

    def getTextWithLineSeparators(self) -> unicode: ...

    def getWidth(self) -> int: ...

    def getX(self, __a0: int, __a1: int) -> int: ...

    def getY(self, __a0: int) -> int: ...

    def hashCode(self) -> int: ...

    def isClipped(self) -> bool: ...

    def isPrimary(self) -> bool: ...

    def isValid(self, __a0: int, __a1: int) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def paint(self, __a0: javax.swing.JComponent, __a1: java.awt.Graphics, __a2: docking.widgets.fieldpanel.internal.PaintContext, __a3: java.awt.Rectangle, __a4: docking.widgets.fieldpanel.internal.FieldBackgroundColorManager, __a5: docking.widgets.fieldpanel.support.RowColLocation, __a6: int) -> None: ...

    def rowHeightChanged(self, __a0: int, __a1: int) -> None: ...

    def screenLocationToTextOffset(self, __a0: int, __a1: int) -> int: ...

    def screenToDataLocation(self, __a0: int, __a1: int) -> docking.widgets.fieldpanel.support.RowColLocation: ...

    def setPrimary(self, __a0: bool) -> None: ...

    def textOffsetToScreenLocation(self, __a0: int) -> docking.widgets.fieldpanel.support.RowColLocation: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def clipped(self) -> bool: ...

    @property
    def height(self) -> int: ...

    @property
    def heightAbove(self) -> int: ...

    @property
    def heightBelow(self) -> int: ...

    @property
    def numDataRows(self) -> int: ...

    @property
    def numRows(self) -> int: ...

    @property
    def preferredWidth(self) -> int: ...

    @property
    def primary(self) -> bool: ...

    @primary.setter
    def primary(self, value: bool) -> None: ...

    @property
    def startX(self) -> int: ...

    @property
    def text(self) -> unicode: ...

    @property
    def textWithLineSeparators(self) -> unicode: ...

    @property
    def width(self) -> int: ...