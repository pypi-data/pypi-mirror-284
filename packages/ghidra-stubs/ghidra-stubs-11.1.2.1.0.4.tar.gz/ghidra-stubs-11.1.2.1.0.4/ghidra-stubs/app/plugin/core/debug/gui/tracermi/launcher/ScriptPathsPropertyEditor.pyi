from typing import List
from typing import overload
import docking.widgets.pathmanager
import java.awt
import java.beans
import java.lang


class ScriptPathsPropertyEditor(docking.widgets.pathmanager.AbstractTypedPropertyEditor):




    def __init__(self): ...



    def addPropertyChangeListener(self, __a0: java.beans.PropertyChangeListener) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getAsText(self) -> unicode: ...

    def getClass(self) -> java.lang.Class: ...

    def getCustomEditor(self) -> java.awt.Component: ...

    def getJavaInitializationString(self) -> unicode: ...

    def getTags(self) -> List[unicode]: ...

    def getValue(self) -> object: ...

    def hashCode(self) -> int: ...

    def isPaintable(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def paintValue(self, __a0: java.awt.Graphics, __a1: java.awt.Rectangle) -> None: ...

    def removePropertyChangeListener(self, __a0: java.beans.PropertyChangeListener) -> None: ...

    def setAsText(self, __a0: unicode) -> None: ...

    def setValue(self, __a0: object) -> None: ...

    def supportsCustomEditor(self) -> bool: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def customEditor(self) -> java.awt.Component: ...

    @property
    def javaInitializationString(self) -> unicode: ...