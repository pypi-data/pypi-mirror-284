from typing import overload
import ghidra.app.plugin.core.debug.gui.stack
import ghidra.program.model.address
import ghidra.program.model.listing
import java.lang


class StackFrameRow(object):





    class Synthetic(ghidra.app.plugin.core.debug.gui.stack.StackFrameRow):




        def __init__(self, __a0: ghidra.app.plugin.core.debug.gui.stack.DebuggerLegacyStackPanel, __a1: ghidra.program.model.address.Address): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def getComment(self) -> unicode: ...

        def getFrameLevel(self) -> int: ...

        def getFunction(self) -> ghidra.program.model.listing.Function: ...

        def getModule(self) -> unicode: ...

        def getProgramCounter(self) -> ghidra.program.model.address.Address: ...

        def getSnap(self) -> long: ...

        def hashCode(self) -> int: ...

        def isCommentable(self) -> bool: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def setComment(self, __a0: unicode) -> None: ...

        def toString(self) -> unicode: ...

        def updateProgramCounter(self, __a0: ghidra.program.model.address.Address) -> None: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...

        @property
        def programCounter(self) -> ghidra.program.model.address.Address: ...

    def __init__(self, __a0: ghidra.app.plugin.core.debug.gui.stack.DebuggerLegacyStackPanel, __a1: ghidra.trace.model.stack.TraceStackFrame): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getComment(self) -> unicode: ...

    def getFrameLevel(self) -> int: ...

    def getFunction(self) -> ghidra.program.model.listing.Function: ...

    def getModule(self) -> unicode: ...

    def getProgramCounter(self) -> ghidra.program.model.address.Address: ...

    def getSnap(self) -> long: ...

    def hashCode(self) -> int: ...

    def isCommentable(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setComment(self, __a0: unicode) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def comment(self) -> unicode: ...

    @comment.setter
    def comment(self, value: unicode) -> None: ...

    @property
    def commentable(self) -> bool: ...

    @property
    def frameLevel(self) -> int: ...

    @property
    def function(self) -> ghidra.program.model.listing.Function: ...

    @property
    def module(self) -> unicode: ...

    @property
    def programCounter(self) -> ghidra.program.model.address.Address: ...

    @property
    def snap(self) -> long: ...