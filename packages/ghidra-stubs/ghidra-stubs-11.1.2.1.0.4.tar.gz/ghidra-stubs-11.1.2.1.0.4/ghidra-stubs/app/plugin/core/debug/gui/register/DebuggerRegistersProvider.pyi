from typing import List
from typing import overload
import docking
import docking.action
import docking.actions
import ghidra.app.plugin.core.debug.gui
import ghidra.app.plugin.core.debug.gui.register
import ghidra.debug.api.tracemgr
import ghidra.framework.options
import ghidra.framework.plugintool
import ghidra.program.model.lang
import ghidra.trace.model.guest
import ghidra.util
import java.awt.event
import java.lang
import java.util
import java.util.concurrent
import javax.swing


class DebuggerRegistersProvider(ghidra.framework.plugintool.ComponentProviderAdapter, ghidra.app.plugin.core.debug.gui.DebuggerProvider, docking.actions.PopupActionProvider):








    def addLocalAction(self, __a0: docking.action.DockingActionIf) -> None: ...

    def addToTool(self) -> None: ...

    def adjustFontSize(self, __a0: bool) -> None: ...

    def canBeParent(self) -> bool: ...

    def cloneAsDisconnected(self) -> ghidra.app.plugin.core.debug.gui.register.DebuggerRegistersProvider: ...

    def closeComponent(self) -> None: ...

    @staticmethod
    def collectCommonRegisters(__a0: ghidra.program.model.lang.CompilerSpec) -> java.util.LinkedHashSet: ...

    def componentActivated(self) -> None: ...

    def componentDeactived(self) -> None: ...

    def componentHidden(self) -> None: ...

    def componentShown(self) -> None: ...

    def computeDefaultRegisterFavorites(self, __a0: ghidra.trace.model.guest.TracePlatform) -> java.util.LinkedHashSet: ...

    def computeDefaultRegisterSelection(self, __a0: ghidra.trace.model.guest.TracePlatform) -> java.util.LinkedHashSet: ...

    def contextChanged(self) -> None: ...

    def coordinatesActivated(self, __a0: ghidra.debug.api.tracemgr.DebuggerCoordinates) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getActionContext(self, __a0: java.awt.event.MouseEvent) -> docking.ActionContext: ...

    def getClass(self) -> java.lang.Class: ...

    def getComponent(self) -> javax.swing.JComponent: ...

    def getContextType(self) -> java.lang.Class: ...

    def getCurrent(self) -> ghidra.debug.api.tracemgr.DebuggerCoordinates: ...

    def getDefaultWindowPosition(self) -> docking.WindowPosition: ...

    def getHelpInfo(self) -> unicode: ...

    def getHelpLocation(self) -> ghidra.util.HelpLocation: ...

    def getHelpObject(self) -> object: ...

    def getIcon(self) -> javax.swing.Icon: ...

    def getInstanceID(self) -> long: ...

    def getIntraGroupPosition(self) -> docking.WindowPosition: ...

    def getLocalActions(self) -> java.util.Set: ...

    @staticmethod
    def getMappedName(__a0: unicode, __a1: unicode) -> unicode: ...

    @staticmethod
    def getMappedOwner(__a0: unicode, __a1: unicode) -> unicode: ...

    def getName(self) -> unicode: ...

    def getOwner(self) -> unicode: ...

    def getPopupActions(self, __a0: docking.Tool, __a1: docking.ActionContext) -> List[object]: ...

    def getRegisterRow(self, __a0: ghidra.program.model.lang.Register) -> ghidra.app.plugin.core.debug.gui.register.RegisterRow: ...

    def getSubTitle(self) -> unicode: ...

    def getTabText(self) -> unicode: ...

    def getTitle(self) -> unicode: ...

    def getTool(self) -> docking.Tool: ...

    def getWindowGroup(self) -> unicode: ...

    def getWindowSubMenuName(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def isActive(self) -> bool: ...

    def isFavorite(self, __a0: ghidra.program.model.lang.Register) -> bool: ...

    def isFocusedProvider(self) -> bool: ...

    def isInTool(self) -> bool: ...

    def isSnapshot(self) -> bool: ...

    def isTransient(self) -> bool: ...

    def isVisible(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def readDataState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    @staticmethod
    def registerProviderNameOwnerChange(__a0: unicode, __a1: unicode, __a2: unicode, __a3: unicode) -> None: ...

    def removeFromTool(self) -> None: ...

    def requestFocus(self) -> None: ...

    def resetFontSize(self) -> None: ...

    def setHelpLocation(self, __a0: ghidra.util.HelpLocation) -> None: ...

    def setIntraGroupPosition(self, __a0: docking.WindowPosition) -> None: ...

    def setSelectedRegistersAndLoad(self, __a0: java.util.Collection) -> java.util.concurrent.CompletableFuture: ...

    def setSelectedRow(self, __a0: ghidra.app.plugin.core.debug.gui.register.RegisterRow) -> None: ...

    def setSubTitle(self, __a0: unicode) -> None: ...

    def setTabText(self, __a0: unicode) -> None: ...

    def setTitle(self, __a0: unicode) -> None: ...

    def setVisible(self, __a0: bool) -> None: ...

    def toFront(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def writeDataState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    @property
    def component(self) -> javax.swing.JComponent: ...

    @property
    def current(self) -> ghidra.debug.api.tracemgr.DebuggerCoordinates: ...

    @property
    def selectedRegistersAndLoad(self) -> None: ...  # No getter available.

    @selectedRegistersAndLoad.setter
    def selectedRegistersAndLoad(self, value: java.util.Collection) -> None: ...

    @property
    def selectedRow(self) -> None: ...  # No getter available.

    @selectedRow.setter
    def selectedRow(self, value: ghidra.app.plugin.core.debug.gui.register.RegisterRow) -> None: ...

    @property
    def snapshot(self) -> bool: ...