from typing import overload
import docking
import docking.action
import ghidra.app.plugin.core.debug.gui
import ghidra.debug.api.tracemgr
import ghidra.framework.options
import ghidra.trace.model
import ghidra.trace.model.target
import ghidra.util
import java.awt.event
import java.lang
import java.util
import javax.swing


class DebuggerModelProvider(docking.ComponentProvider, ghidra.app.plugin.core.debug.gui.MultiProviderSaveBehavior.SaveableProvider):




    def __init__(self, __a0: ghidra.app.plugin.core.debug.gui.model.DebuggerModelPlugin, __a1: bool): ...



    def addLocalAction(self, __a0: docking.action.DockingActionIf) -> None: ...

    def addToTool(self) -> None: ...

    def adjustFontSize(self, __a0: bool) -> None: ...

    def canBeParent(self) -> bool: ...

    def closeComponent(self) -> None: ...

    def componentActivated(self) -> None: ...

    def componentDeactived(self) -> None: ...

    def componentHidden(self) -> None: ...

    def componentShown(self) -> None: ...

    def contextChanged(self) -> None: ...

    def coordinatesActivated(self, __a0: ghidra.debug.api.tracemgr.DebuggerCoordinates) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getActionContext(self, __a0: java.awt.event.MouseEvent) -> docking.ActionContext: ...

    def getClass(self) -> java.lang.Class: ...

    def getComponent(self) -> javax.swing.JComponent: ...

    def getContextType(self) -> java.lang.Class: ...

    def getDefaultWindowPosition(self) -> docking.WindowPosition: ...

    def getHelpInfo(self) -> unicode: ...

    def getHelpLocation(self) -> ghidra.util.HelpLocation: ...

    def getHelpObject(self) -> object: ...

    def getIcon(self) -> javax.swing.Icon: ...

    def getInstanceID(self) -> long: ...

    def getIntraGroupPosition(self) -> docking.WindowPosition: ...

    def getLocalActions(self) -> java.util.Set: ...

    @staticmethod
    def getMappedName(__a0: unicode, __a1: unicode) -> unicode: ...

    @staticmethod
    def getMappedOwner(__a0: unicode, __a1: unicode) -> unicode: ...

    def getName(self) -> unicode: ...

    def getOwner(self) -> unicode: ...

    def getPath(self) -> ghidra.trace.model.target.TraceObjectKeyPath: ...

    def getSubTitle(self) -> unicode: ...

    def getTabText(self) -> unicode: ...

    def getTitle(self) -> unicode: ...

    def getTool(self) -> docking.Tool: ...

    def getWindowGroup(self) -> unicode: ...

    def getWindowSubMenuName(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def isActive(self) -> bool: ...

    def isFocusedProvider(self) -> bool: ...

    def isInTool(self) -> bool: ...

    def isLimitToCurrentSnap(self) -> bool: ...

    def isShowHidden(self) -> bool: ...

    def isShowMethodsInTree(self) -> bool: ...

    def isShowPrimitivesInTree(self) -> bool: ...

    def isSnapshot(self) -> bool: ...

    def isTransient(self) -> bool: ...

    def isVisible(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def readConfigState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    def readDataState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    @staticmethod
    def registerProviderNameOwnerChange(__a0: unicode, __a1: unicode, __a2: unicode, __a3: unicode) -> None: ...

    def removeFromTool(self) -> None: ...

    def requestFocus(self) -> None: ...

    def resetFontSize(self) -> None: ...

    def setHelpLocation(self, __a0: ghidra.util.HelpLocation) -> None: ...

    def setIntraGroupPosition(self, __a0: docking.WindowPosition) -> None: ...

    def setLimitToCurrentSnap(self, __a0: bool) -> None: ...

    def setPath(self, __a0: ghidra.trace.model.target.TraceObjectKeyPath) -> None: ...

    def setShowAttributesTable(self, __a0: bool) -> None: ...

    def setShowElementsTable(self, __a0: bool) -> None: ...

    def setShowHidden(self, __a0: bool) -> None: ...

    def setShowMethodsInTree(self, __a0: bool) -> None: ...

    def setShowObjectsTree(self, __a0: bool) -> None: ...

    def setShowPrimitivesInTree(self, __a0: bool) -> None: ...

    def setSubTitle(self, __a0: unicode) -> None: ...

    def setTabText(self, __a0: unicode) -> None: ...

    def setTitle(self, __a0: unicode) -> None: ...

    def setVisible(self, __a0: bool) -> None: ...

    def toFront(self) -> None: ...

    def toString(self) -> unicode: ...

    def traceClosed(self, __a0: ghidra.trace.model.Trace) -> None: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def writeConfigState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    def writeDataState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    @property
    def component(self) -> javax.swing.JComponent: ...

    @property
    def limitToCurrentSnap(self) -> bool: ...

    @limitToCurrentSnap.setter
    def limitToCurrentSnap(self, value: bool) -> None: ...

    @property
    def path(self) -> ghidra.trace.model.target.TraceObjectKeyPath: ...

    @path.setter
    def path(self, value: ghidra.trace.model.target.TraceObjectKeyPath) -> None: ...

    @property
    def showAttributesTable(self) -> None: ...  # No getter available.

    @showAttributesTable.setter
    def showAttributesTable(self, value: bool) -> None: ...

    @property
    def showElementsTable(self) -> None: ...  # No getter available.

    @showElementsTable.setter
    def showElementsTable(self, value: bool) -> None: ...

    @property
    def showHidden(self) -> bool: ...

    @showHidden.setter
    def showHidden(self, value: bool) -> None: ...

    @property
    def showMethodsInTree(self) -> bool: ...

    @showMethodsInTree.setter
    def showMethodsInTree(self, value: bool) -> None: ...

    @property
    def showObjectsTree(self) -> None: ...  # No getter available.

    @showObjectsTree.setter
    def showObjectsTree(self, value: bool) -> None: ...

    @property
    def showPrimitivesInTree(self) -> bool: ...

    @showPrimitivesInTree.setter
    def showPrimitivesInTree(self, value: bool) -> None: ...