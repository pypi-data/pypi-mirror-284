from typing import overload
import docking.widgets.fieldpanel.field
import docking.widgets.fieldpanel.support
import ghidra.app.decompiler
import ghidra.app.decompiler.component.hover
import ghidra.app.plugin.core.codebrowser.hover
import ghidra.app.plugin.core.debug.gui.stack.vars
import ghidra.app.plugin.core.debug.stack
import ghidra.app.plugin.core.hover
import ghidra.debug.api.tracemgr
import ghidra.framework.options
import ghidra.pcode.exec
import ghidra.program.model.address
import ghidra.program.model.data
import ghidra.program.model.lang
import ghidra.program.model.listing
import ghidra.program.model.pcode
import ghidra.program.util
import ghidra.trace.model
import ghidra.trace.model.listing
import java.lang
import java.util.concurrent
import javax.swing


class VariableValueHoverService(ghidra.app.plugin.core.hover.AbstractConfigurableHover, ghidra.app.plugin.core.codebrowser.hover.ListingHoverService, ghidra.app.decompiler.component.hover.DecompilerHoverService):





    class TableFiller(object):




        def __init__(self, __a0: ghidra.app.plugin.core.debug.gui.stack.vars.VariableValueTable, __a1: ghidra.framework.plugintool.PluginTool, __a2: ghidra.debug.api.tracemgr.DebuggerCoordinates, __a3: ghidra.app.plugin.core.debug.gui.stack.vars.VariableValueUtils.VariableEvaluator, __a4: ghidra.app.plugin.core.debug.stack.StackUnwindWarningSet): ...



        def equals(self, __a0: object) -> bool: ...

        def fillCodeUnit(self, __a0: ghidra.trace.model.listing.TraceCodeUnit, __a1: ghidra.program.model.listing.Program, __a2: ghidra.program.model.address.Address) -> ghidra.app.plugin.core.debug.gui.stack.vars.VariableValueTable: ...

        def fillComponent(self, __a0: ghidra.app.decompiler.ClangFieldToken, __a1: ghidra.program.model.address.AddressSetView) -> java.util.concurrent.CompletableFuture: ...

        def fillComposite(self, __a0: ghidra.program.model.pcode.HighSymbol, __a1: ghidra.program.model.pcode.HighVariable, __a2: ghidra.program.model.address.AddressSetView) -> java.util.concurrent.CompletableFuture: ...

        def fillDefinedData(self, __a0: ghidra.trace.model.listing.TraceData) -> ghidra.app.plugin.core.debug.gui.stack.vars.VariableValueTable: ...

        def fillFrameOp(self, __a0: ghidra.app.plugin.core.debug.stack.UnwoundFrame, __a1: ghidra.program.model.listing.Program, __a2: unicode, __a3: ghidra.program.model.data.DataType, __a4: ghidra.program.model.pcode.PcodeOp, __a5: ghidra.program.model.address.AddressSetView) -> ghidra.app.plugin.core.debug.gui.stack.vars.VariableValueTable: ...

        def fillFrameStorage(self, __a0: ghidra.app.plugin.core.debug.stack.UnwoundFrame, __a1: unicode, __a2: ghidra.program.model.data.DataType, __a3: ghidra.program.model.listing.Program, __a4: ghidra.program.model.listing.VariableStorage) -> ghidra.app.plugin.core.debug.gui.stack.vars.VariableValueTable: ...

        @overload
        def fillHighVariable(self, __a0: ghidra.program.model.pcode.HighVariable, __a1: ghidra.program.model.address.AddressSetView) -> java.util.concurrent.CompletableFuture: ...

        @overload
        def fillHighVariable(self, __a0: ghidra.program.model.pcode.HighVariable, __a1: unicode, __a2: ghidra.program.model.address.AddressSetView) -> java.util.concurrent.CompletableFuture: ...

        def fillInstruction(self, __a0: ghidra.trace.model.listing.TraceInstruction) -> ghidra.app.plugin.core.debug.gui.stack.vars.VariableValueTable: ...

        def fillMemory(self, __a0: ghidra.program.model.listing.Program, __a1: ghidra.program.model.address.Address) -> java.util.concurrent.CompletableFuture: ...

        def fillOperand(self, __a0: ghidra.program.util.OperandFieldLocation, __a1: ghidra.program.model.listing.Instruction) -> java.util.concurrent.CompletableFuture: ...

        def fillPcodeOp(self, __a0: ghidra.program.model.listing.Function, __a1: unicode, __a2: ghidra.program.model.data.DataType, __a3: ghidra.program.model.pcode.PcodeOp, __a4: ghidra.program.model.address.AddressSetView) -> java.util.concurrent.CompletableFuture: ...

        def fillReference(self, __a0: ghidra.program.model.listing.CodeUnit, __a1: ghidra.program.model.address.Address) -> java.util.concurrent.CompletableFuture: ...

        def fillRegister(self, __a0: ghidra.program.model.listing.Instruction, __a1: ghidra.program.model.lang.Register) -> java.util.concurrent.CompletableFuture: ...

        def fillRegisterNoFrame(self, __a0: ghidra.program.model.lang.Register) -> ghidra.app.plugin.core.debug.gui.stack.vars.VariableValueTable: ...

        def fillStack(self, __a0: ghidra.program.model.listing.Instruction, __a1: ghidra.program.model.address.Address) -> java.util.concurrent.CompletableFuture: ...

        def fillStorage(self, __a0: ghidra.program.model.listing.Function, __a1: unicode, __a2: ghidra.program.model.data.DataType, __a3: ghidra.program.model.listing.Program, __a4: ghidra.program.model.listing.VariableStorage, __a5: ghidra.program.model.address.AddressSetView) -> java.util.concurrent.CompletableFuture: ...

        def fillToken(self, __a0: ghidra.app.decompiler.ClangToken) -> java.util.concurrent.CompletableFuture: ...

        def fillUndefinedUnit(self, __a0: ghidra.trace.model.listing.TraceData, __a1: ghidra.program.model.listing.Program, __a2: ghidra.program.model.address.Address) -> ghidra.app.plugin.core.debug.gui.stack.vars.VariableValueTable: ...

        def fillVariable(self, __a0: ghidra.program.model.listing.Variable) -> java.util.concurrent.CompletableFuture: ...

        def fillWatchValue(self, __a0: ghidra.app.plugin.core.debug.stack.UnwoundFrame, __a1: ghidra.program.model.address.Address, __a2: ghidra.program.model.data.DataType, __a3: ghidra.pcode.exec.DebuggerPcodeUtils.WatchValue) -> ghidra.app.plugin.core.debug.gui.stack.vars.VariableValueTable: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...



    def __init__(self, __a0: ghidra.framework.plugintool.PluginTool): ...



    def componentHidden(self) -> None: ...

    def componentShown(self) -> None: ...

    def dispose(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def fillVariableValueTable(self, __a0: ghidra.app.plugin.core.debug.gui.stack.vars.VariableValueTable, __a1: ghidra.program.util.ProgramLocation, __a2: ghidra.debug.api.tracemgr.DebuggerCoordinates, __a3: docking.widgets.fieldpanel.support.FieldLocation, __a4: docking.widgets.fieldpanel.field.Field, __a5: ghidra.app.plugin.core.debug.stack.StackUnwindWarningSet) -> java.util.concurrent.CompletableFuture: ...

    def getClass(self) -> java.lang.Class: ...

    def getHoverComponent(self, __a0: ghidra.program.model.listing.Program, __a1: ghidra.program.util.ProgramLocation, __a2: docking.widgets.fieldpanel.support.FieldLocation, __a3: docking.widgets.fieldpanel.field.Field) -> javax.swing.JComponent: ...

    def getPriority(self) -> int: ...

    def hashCode(self) -> int: ...

    def hoverModeSelected(self) -> bool: ...

    def initializeOptions(self) -> None: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def optionsChanged(self, __a0: ghidra.framework.options.ToolOptions, __a1: unicode, __a2: object, __a3: object) -> None: ...

    def scroll(self, __a0: int) -> None: ...

    def setOptions(self, __a0: ghidra.framework.options.Options, __a1: unicode) -> None: ...

    def toString(self) -> unicode: ...

    def traceClosed(self, __a0: ghidra.trace.model.Trace) -> None: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

