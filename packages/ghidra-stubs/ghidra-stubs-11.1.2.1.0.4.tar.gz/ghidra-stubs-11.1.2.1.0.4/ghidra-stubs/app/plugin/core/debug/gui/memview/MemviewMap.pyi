from typing import overload
import java.lang


class MemviewMap(object):




    def __init__(self, __a0: long, __a1: long): ...



    def createMapping(self, __a0: float) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getMultiplier(self) -> float: ...

    def getOffset(self, __a0: int) -> long: ...

    def getOriginalElemPerPixel(self) -> float: ...

    def getPixel(self, __a0: long) -> int: ...

    def getSize(self) -> long: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def multiplier(self) -> float: ...

    @property
    def originalElemPerPixel(self) -> float: ...

    @property
    def size(self) -> long: ...