from typing import overload
import ghidra.debug.api.tracemgr
import ghidra.program.model.data
import ghidra.program.model.lang
import ghidra.program.model.listing
import java.lang


class RegisterRow(object):








    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getCurrent(self) -> ghidra.debug.api.tracemgr.DebuggerCoordinates: ...

    def getData(self) -> ghidra.program.model.listing.Data: ...

    def getDataType(self) -> ghidra.program.model.data.DataType: ...

    def getName(self) -> unicode: ...

    def getNumber(self) -> int: ...

    def getRegister(self) -> ghidra.program.model.lang.Register: ...

    def getRepresentation(self) -> unicode: ...

    def getValue(self) -> long: ...

    def hashCode(self) -> int: ...

    def isChanged(self) -> bool: ...

    def isFavorite(self) -> bool: ...

    def isKnown(self) -> bool: ...

    def isRepresentationEditable(self) -> bool: ...

    def isValueEditable(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setDataType(self, __a0: ghidra.program.model.data.DataType) -> None: ...

    def setFavorite(self, __a0: bool) -> None: ...

    def setRepresentation(self, __a0: unicode) -> None: ...

    def setValue(self, __a0: long) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def changed(self) -> bool: ...

    @property
    def current(self) -> ghidra.debug.api.tracemgr.DebuggerCoordinates: ...

    @property
    def data(self) -> ghidra.program.model.listing.Data: ...

    @property
    def dataType(self) -> ghidra.program.model.data.DataType: ...

    @dataType.setter
    def dataType(self, value: ghidra.program.model.data.DataType) -> None: ...

    @property
    def favorite(self) -> bool: ...

    @favorite.setter
    def favorite(self, value: bool) -> None: ...

    @property
    def known(self) -> bool: ...

    @property
    def name(self) -> unicode: ...

    @property
    def number(self) -> int: ...

    @property
    def register(self) -> ghidra.program.model.lang.Register: ...

    @property
    def representation(self) -> unicode: ...

    @representation.setter
    def representation(self, value: unicode) -> None: ...

    @property
    def representationEditable(self) -> bool: ...

    @property
    def value(self) -> long: ...

    @value.setter
    def value(self, value: long) -> None: ...

    @property
    def valueEditable(self) -> bool: ...