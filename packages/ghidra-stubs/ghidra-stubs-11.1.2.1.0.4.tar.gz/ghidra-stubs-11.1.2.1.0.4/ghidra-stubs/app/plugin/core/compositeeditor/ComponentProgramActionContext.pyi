from typing import overload
import docking
import ghidra.app.context
import ghidra.app.plugin.core.compositeeditor
import ghidra.program.model.data
import ghidra.program.model.listing
import java.awt
import java.awt.event
import java.lang


class ComponentProgramActionContext(ghidra.app.context.ProgramActionContext, ghidra.app.plugin.core.compositeeditor.ComponentContext):




    def __init__(self, __a0: ghidra.app.plugin.core.compositeeditor.CompositeEditorProvider, __a1: ghidra.program.model.listing.Program, __a2: ghidra.program.model.data.DataTypeComponent): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getComponentProvider(self) -> docking.ComponentProvider: ...

    def getCompositeDataType(self) -> ghidra.program.model.data.Composite: ...

    def getContextObject(self) -> object: ...

    def getDataTypeComponent(self) -> ghidra.program.model.data.DataTypeComponent: ...

    def getDataTypeManager(self) -> ghidra.program.model.data.DataTypeManager: ...

    def getEventClickModifiers(self) -> int: ...

    def getMouseEvent(self) -> java.awt.event.MouseEvent: ...

    def getProgram(self) -> ghidra.program.model.listing.Program: ...

    def getSourceComponent(self) -> java.awt.Component: ...

    def getSourceObject(self) -> object: ...

    def hasAnyEventClickModifiers(self, __a0: int) -> bool: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setContextObject(self, __a0: object) -> docking.DefaultActionContext: ...

    def setEventClickModifiers(self, __a0: int) -> None: ...

    def setMouseEvent(self, __a0: java.awt.event.MouseEvent) -> docking.ActionContext: ...

    def setSourceObject(self, __a0: object) -> docking.ActionContext: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def compositeDataType(self) -> ghidra.program.model.data.Composite: ...

    @property
    def dataTypeComponent(self) -> ghidra.program.model.data.DataTypeComponent: ...

    @property
    def dataTypeManager(self) -> ghidra.program.model.data.DataTypeManager: ...