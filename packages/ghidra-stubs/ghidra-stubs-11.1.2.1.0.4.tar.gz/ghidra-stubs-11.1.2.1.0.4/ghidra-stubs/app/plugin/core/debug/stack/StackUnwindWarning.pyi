from typing import List
from typing import overload
import ghidra.app.plugin.core.debug.stack
import ghidra.program.model.address
import ghidra.program.model.data
import ghidra.program.model.listing
import ghidra.program.model.pcode
import java.lang
import java.util


class StackUnwindWarning(object):





    class MultipleHighCallsStackUnwindWarning(java.lang.Record, ghidra.app.plugin.core.debug.stack.StackUnwindWarning):




        def __init__(self, __a0: List[object]): ...



        def equals(self, __a0: object) -> bool: ...

        def found(self) -> List[object]: ...

        def getClass(self) -> java.lang.Class: ...

        def getMessage(self) -> unicode: ...

        def hashCode(self) -> int: ...

        def moots(self, __a0: ghidra.app.plugin.core.debug.stack.StackUnwindWarning) -> bool: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def reportDetails(self) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...

        @property
        def message(self) -> unicode: ...




    class CouldNotRecoverSignatureStackUnwindWarning(java.lang.Record, ghidra.app.plugin.core.debug.stack.StackUnwindWarning):




        def __init__(self, __a0: ghidra.program.model.pcode.PcodeOpAST): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def getMessage(self) -> unicode: ...

        def hashCode(self) -> int: ...

        def moots(self, __a0: ghidra.app.plugin.core.debug.stack.StackUnwindWarning) -> bool: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def op(self) -> ghidra.program.model.pcode.PcodeOpAST: ...

        def reportDetails(self) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...

        @property
        def message(self) -> unicode: ...




    class UnspecifiedConventionStackUnwindWarning(java.lang.Record, ghidra.app.plugin.core.debug.stack.StackUnwindWarning, ghidra.app.plugin.core.debug.stack.StackUnwindWarning.Combinable):




        def __init__(self, __a0: ghidra.program.model.listing.Function): ...



        def equals(self, __a0: object) -> bool: ...

        def function(self) -> ghidra.program.model.listing.Function: ...

        def getClass(self) -> java.lang.Class: ...

        def getMessage(self) -> unicode: ...

        def hashCode(self) -> int: ...

        def moots(self, __a0: ghidra.app.plugin.core.debug.stack.StackUnwindWarning) -> bool: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def reportDetails(self) -> None: ...

        def summarize(self, __a0: java.util.Collection) -> unicode: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...

        @property
        def message(self) -> unicode: ...




    class NoHighCallsStackUnwindWarning(java.lang.Record, ghidra.app.plugin.core.debug.stack.StackUnwindWarning):




        def __init__(self, __a0: ghidra.program.model.pcode.PcodeOp): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def getMessage(self) -> unicode: ...

        def hashCode(self) -> int: ...

        def moots(self, __a0: ghidra.app.plugin.core.debug.stack.StackUnwindWarning) -> bool: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def op(self) -> ghidra.program.model.pcode.PcodeOp: ...

        def reportDetails(self) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...

        @property
        def message(self) -> unicode: ...




    class CustomStackUnwindWarning(java.lang.Record, ghidra.app.plugin.core.debug.stack.StackUnwindWarning):




        def __init__(self, __a0: unicode): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def getMessage(self) -> unicode: ...

        def hashCode(self) -> int: ...

        def message(self) -> unicode: ...

        def moots(self, __a0: ghidra.app.plugin.core.debug.stack.StackUnwindWarning) -> bool: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def reportDetails(self) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class OpaqueReturnPathStackUnwindWarning(java.lang.Record, ghidra.app.plugin.core.debug.stack.StackUnwindWarning):




        def __init__(self, __a0: ghidra.program.model.address.Address, __a1: java.lang.Exception): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def getMessage(self) -> unicode: ...

        def hashCode(self) -> int: ...

        def last(self) -> java.lang.Exception: ...

        def moots(self, __a0: ghidra.app.plugin.core.debug.stack.StackUnwindWarning) -> bool: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def pc(self) -> ghidra.program.model.address.Address: ...

        def reportDetails(self) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...

        @property
        def message(self) -> unicode: ...




    class NoReturnPathStackUnwindWarning(java.lang.Record, ghidra.app.plugin.core.debug.stack.StackUnwindWarning):




        def __init__(self, __a0: ghidra.program.model.address.Address): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def getMessage(self) -> unicode: ...

        def hashCode(self) -> int: ...

        def moots(self, __a0: ghidra.app.plugin.core.debug.stack.StackUnwindWarning) -> bool: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def pc(self) -> ghidra.program.model.address.Address: ...

        def reportDetails(self) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...

        @property
        def message(self) -> unicode: ...




    class UnknownPurgeStackUnwindWarning(java.lang.Record, ghidra.app.plugin.core.debug.stack.StackUnwindWarning, ghidra.app.plugin.core.debug.stack.StackUnwindWarning.Combinable):




        def __init__(self, __a0: ghidra.program.model.listing.Function): ...



        def equals(self, __a0: object) -> bool: ...

        def function(self) -> ghidra.program.model.listing.Function: ...

        def getClass(self) -> java.lang.Class: ...

        def getMessage(self) -> unicode: ...

        def hashCode(self) -> int: ...

        def moots(self, __a0: ghidra.app.plugin.core.debug.stack.StackUnwindWarning) -> bool: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def reportDetails(self) -> None: ...

        def summarize(self, __a0: java.util.Collection) -> unicode: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...

        @property
        def message(self) -> unicode: ...




    class Combinable(object):








        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def summarize(self, __a0: java.util.Collection) -> unicode: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class NoHighVariableFromTargetPointerTypeUnwindWarning(java.lang.Record, ghidra.app.plugin.core.debug.stack.StackUnwindWarning):




        def __init__(self, __a0: ghidra.program.model.pcode.VarnodeAST): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def getMessage(self) -> unicode: ...

        def hashCode(self) -> int: ...

        def moots(self, __a0: ghidra.app.plugin.core.debug.stack.StackUnwindWarning) -> bool: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def reportDetails(self) -> None: ...

        def toString(self) -> unicode: ...

        def vn(self) -> ghidra.program.model.pcode.VarnodeAST: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...

        @property
        def message(self) -> unicode: ...




    class UnexpectedTargetTypeStackUnwindWarning(java.lang.Record, ghidra.app.plugin.core.debug.stack.StackUnwindWarning):




        def __init__(self, __a0: ghidra.program.model.data.DataType): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def getMessage(self) -> unicode: ...

        def hashCode(self) -> int: ...

        def moots(self, __a0: ghidra.app.plugin.core.debug.stack.StackUnwindWarning) -> bool: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def reportDetails(self) -> None: ...

        def toString(self) -> unicode: ...

        def type(self) -> ghidra.program.model.data.DataType: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...

        @property
        def message(self) -> unicode: ...





    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getMessage(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def moots(self, __a0: ghidra.app.plugin.core.debug.stack.StackUnwindWarning) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def reportDetails(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def message(self) -> unicode: ...