from typing import overload
import java.lang


class AnalyzerEnablementState(object):




    def __init__(self, __a0: ghidra.app.services.Analyzer, __a1: bool, __a2: bool): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getName(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def isDefaultEnablement(self) -> bool: ...

    def isEnabled(self) -> bool: ...

    def isPrototype(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setEnabled(self, __a0: bool) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def defaultEnablement(self) -> bool: ...

    @property
    def enabled(self) -> bool: ...

    @property
    def name(self) -> unicode: ...

    @property
    def prototype(self) -> bool: ...