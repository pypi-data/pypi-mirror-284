from typing import overload
import ghidra.debug.api.target
import ghidra.debug.api.tracermi
import java.lang
import java.util


class DefaultRemoteMethodRegistry(object, ghidra.debug.api.tracermi.RemoteMethodRegistry):




    def __init__(self): ...



    def all(self) -> java.util.Map: ...

    def equals(self, __a0: object) -> bool: ...

    def get(self, __a0: unicode) -> ghidra.debug.api.tracermi.RemoteMethod: ...

    def getByAction(self, __a0: ghidra.debug.api.target.ActionName) -> java.util.Set: ...

    def getClass(self) -> java.lang.Class: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

