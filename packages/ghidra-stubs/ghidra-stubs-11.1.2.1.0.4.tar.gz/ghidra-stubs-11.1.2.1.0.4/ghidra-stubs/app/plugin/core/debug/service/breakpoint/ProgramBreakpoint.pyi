from typing import overload
import ghidra.debug.api.breakpoint
import ghidra.program.model.listing
import ghidra.program.util
import java.lang
import java.util


class ProgramBreakpoint(object):




    def __init__(self, __a0: ghidra.program.model.listing.Program, __a1: ghidra.program.model.address.Address, __a2: long, __a3: java.util.Set): ...



    def add(self, __a0: ghidra.program.model.listing.Bookmark) -> bool: ...

    def canMerge(self, __a0: ghidra.program.model.listing.Program, __a1: ghidra.program.model.listing.Bookmark) -> bool: ...

    def computeCategory(self) -> unicode: ...

    def computeMode(self) -> ghidra.debug.api.breakpoint.LogicalBreakpoint.ProgramMode: ...

    def deleteFromProgram(self) -> None: ...

    def disable(self) -> None: ...

    def enable(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getBookmark(self) -> ghidra.program.model.listing.Bookmark: ...

    def getClass(self) -> java.lang.Class: ...

    def getEmuSleigh(self) -> unicode: ...

    def getLocation(self) -> ghidra.program.util.ProgramLocation: ...

    def getName(self) -> unicode: ...

    def getProgram(self) -> ghidra.program.model.listing.Program: ...

    def hashCode(self) -> int: ...

    def isDisabled(self) -> bool: ...

    def isEmpty(self) -> bool: ...

    def isEnabled(self) -> bool: ...

    @staticmethod
    def kindsFromBookmark(__a0: ghidra.program.model.listing.Bookmark) -> java.util.Set: ...

    @staticmethod
    def lengthFromBookmark(__a0: ghidra.program.model.listing.Bookmark) -> long: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def remove(self, __a0: ghidra.program.model.listing.Bookmark) -> bool: ...

    def setEmuSleigh(self, __a0: unicode) -> None: ...

    def setName(self, __a0: unicode) -> None: ...

    def toString(self) -> unicode: ...

    def toggleWithComment(self, __a0: bool, __a1: unicode) -> None: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def bookmark(self) -> ghidra.program.model.listing.Bookmark: ...

    @property
    def disabled(self) -> bool: ...

    @property
    def empty(self) -> bool: ...

    @property
    def emuSleigh(self) -> unicode: ...

    @emuSleigh.setter
    def emuSleigh(self, value: unicode) -> None: ...

    @property
    def enabled(self) -> bool: ...

    @property
    def location(self) -> ghidra.program.util.ProgramLocation: ...

    @property
    def name(self) -> unicode: ...

    @name.setter
    def name(self, value: unicode) -> None: ...

    @property
    def program(self) -> ghidra.program.model.listing.Program: ...