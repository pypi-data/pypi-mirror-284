from typing import overload
import java.lang


class SegmentMapDescription(object):




    def __init__(self): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getClassNameIndex(self) -> int: ...

    def getFlags(self) -> int: ...

    def getFrame(self) -> int: ...

    def getGroup(self) -> int: ...

    def getLength(self) -> long: ...

    def getOffset(self) -> long: ...

    def getOvl(self) -> int: ...

    def getSegNameIndex(self) -> int: ...

    def getSegmentOffset(self) -> long: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def classNameIndex(self) -> int: ...

    @property
    def flags(self) -> int: ...

    @property
    def frame(self) -> int: ...

    @property
    def group(self) -> int: ...

    @property
    def length(self) -> long: ...

    @property
    def offset(self) -> long: ...

    @property
    def ovl(self) -> int: ...

    @property
    def segNameIndex(self) -> int: ...

    @property
    def segmentOffset(self) -> long: ...