from typing import overload
import ghidra.app.util.bin.format.pdb2.pdbreader
import java.lang


class SymbolGroup(object):
    PUBLIC_GLOBAL_MODULE_NUMBER: int = 0



    @overload
    def __init__(self, __a0: ghidra.app.util.bin.format.pdb2.pdbreader.AbstractPdb, __a1: int): ...

    @overload
    def __init__(self, __a0: java.util.Map, __a1: int): ...

    @overload
    def __init__(self, __a0: java.util.Map, __a1: int, __a2: long): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getSymbolIterator(self) -> ghidra.app.util.bin.format.pdb2.pdbreader.MsSymbolIterator: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def symbolIterator(self) -> ghidra.app.util.bin.format.pdb2.pdbreader.MsSymbolIterator: ...