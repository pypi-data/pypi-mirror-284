from typing import overload
import ghidra.app.util.bin.format.swift
import ghidra.app.util.demangler
import ghidra.app.util.demangler.swift
import ghidra.program.model.listing
import java.lang


class SwiftDemangler(object, ghidra.app.util.demangler.Demangler):




    @overload
    def __init__(self): ...

    @overload
    def __init__(self, __a0: ghidra.program.model.listing.Program): ...



    def canDemangle(self, __a0: ghidra.program.model.listing.Program) -> bool: ...

    def createDefaultOptions(self) -> ghidra.app.util.demangler.DemanglerOptions: ...

    @overload
    def demangle(self, __a0: unicode) -> ghidra.app.util.demangler.DemangledObject: ...

    @overload
    def demangle(self, __a0: unicode, __a1: bool) -> ghidra.app.util.demangler.DemangledObject: ...

    @overload
    def demangle(self, __a0: unicode, __a1: ghidra.app.util.demangler.DemanglerOptions) -> ghidra.app.util.demangler.DemangledObject: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getDemangled(self, __a0: unicode, __a1: ghidra.app.util.demangler.swift.SwiftDemanglerOptions) -> ghidra.app.util.demangler.Demangled: ...

    def getSwiftDemanglerOptions(self, __a0: ghidra.app.util.demangler.DemanglerOptions) -> ghidra.app.util.demangler.swift.SwiftDemanglerOptions: ...

    def getTypeMetadata(self) -> ghidra.app.util.bin.format.swift.SwiftTypeMetadata: ...

    def hashCode(self) -> int: ...

    def initialize(self, __a0: ghidra.program.model.listing.Program) -> None: ...

    def isSwiftMangledSymbol(self, __a0: unicode) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def typeMetadata(self) -> ghidra.app.util.bin.format.swift.SwiftTypeMetadata: ...