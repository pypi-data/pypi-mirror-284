from typing import overload
import ghidra.features.bsim.query.description
import ghidra.features.bsim.query.protocol
import ghidra.xml
import java.io
import java.lang
import java.util


class SimilarityNote(object, java.lang.Comparable):




    @overload
    def __init__(self): ...

    @overload
    def __init__(self, __a0: ghidra.features.bsim.query.description.FunctionDescription, __a1: float, __a2: float): ...



    @overload
    def compareTo(self, __a0: ghidra.features.bsim.query.protocol.SimilarityNote) -> int: ...

    @overload
    def compareTo(self, __a0: object) -> int: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getFunctionDescription(self) -> ghidra.features.bsim.query.description.FunctionDescription: ...

    def getSignificance(self) -> float: ...

    def getSimilarity(self) -> float: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def restoreXml(self, __a0: ghidra.xml.XmlPullParser, __a1: ghidra.features.bsim.query.description.DescriptionManager, __a2: java.util.Map) -> None: ...

    def saveXml(self, __a0: java.io.Writer) -> None: ...

    def setTransfer(self, __a0: ghidra.features.bsim.query.protocol.SimilarityNote, __a1: ghidra.features.bsim.query.description.DescriptionManager, __a2: bool) -> None: ...

    def toString(self) -> unicode: ...

    def transfer(self, __a0: ghidra.features.bsim.query.description.DescriptionManager, __a1: bool) -> None: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def functionDescription(self) -> ghidra.features.bsim.query.description.FunctionDescription: ...

    @property
    def significance(self) -> float: ...

    @property
    def similarity(self) -> float: ...