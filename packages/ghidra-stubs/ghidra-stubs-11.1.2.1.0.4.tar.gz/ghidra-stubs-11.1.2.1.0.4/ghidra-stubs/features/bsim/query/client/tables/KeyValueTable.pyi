from typing import List
from typing import overload
import ghidra.features.bsim.query.client.tables
import ghidra.features.bsim.query.description
import java.lang
import java.sql


class KeyValueTable(ghidra.features.bsim.query.client.tables.SQLComplexTable):




    def __init__(self): ...



    def close(self) -> None: ...

    def create(self, __a0: java.sql.Statement) -> None: ...

    def delete(self, __a0: long) -> int: ...

    def drop(self, __a0: java.sql.Statement) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getValue(self, __a0: unicode) -> unicode: ...

    def hashCode(self) -> int: ...

    def insert(self, __a0: List[object]) -> long: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setConnection(self, __a0: java.sql.Connection) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def writeBasicInfo(self, __a0: ghidra.features.bsim.query.description.DatabaseInformation) -> None: ...

    def writeExecutableCategories(self, __a0: ghidra.features.bsim.query.description.DatabaseInformation) -> None: ...

    def writeFunctionTags(self, __a0: ghidra.features.bsim.query.description.DatabaseInformation) -> None: ...

