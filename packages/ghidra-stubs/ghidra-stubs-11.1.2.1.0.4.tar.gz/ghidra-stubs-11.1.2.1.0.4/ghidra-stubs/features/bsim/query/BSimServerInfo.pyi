from typing import overload
import ghidra.features.bsim.query
import java.lang
import java.net


class BSimServerInfo(object, java.lang.Comparable):
    DEFAULT_ELASTIC_PORT: int = 9200
    DEFAULT_POSTGRES_PORT: int = 5432
    H2_FILE_EXTENSION: unicode = u'.mv.db'



    @overload
    def __init__(self, __a0: java.net.URL): ...

    @overload
    def __init__(self, __a0: ghidra.features.bsim.query.BSimServerInfo.DBType, __a1: unicode, __a2: int, __a3: unicode): ...



    @overload
    def compareTo(self, __a0: ghidra.features.bsim.query.BSimServerInfo) -> int: ...

    @overload
    def compareTo(self, __a0: object) -> int: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getDBName(self) -> unicode: ...

    def getDBType(self) -> ghidra.features.bsim.query.BSimServerInfo.DBType: ...

    def getFunctionDatabase(self, __a0: bool) -> ghidra.features.bsim.query.FunctionDatabase: ...

    def getPort(self) -> int: ...

    def getServerName(self) -> unicode: ...

    def getShortDBName(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def isWindowsFilePath(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    def toURL(self) -> java.net.URL: ...

    def toURLString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def DBName(self) -> unicode: ...

    @property
    def DBType(self) -> ghidra.features.bsim.query.BSimServerInfo.DBType: ...

    @property
    def port(self) -> int: ...

    @property
    def serverName(self) -> unicode: ...

    @property
    def shortDBName(self) -> unicode: ...

    @property
    def windowsFilePath(self) -> bool: ...