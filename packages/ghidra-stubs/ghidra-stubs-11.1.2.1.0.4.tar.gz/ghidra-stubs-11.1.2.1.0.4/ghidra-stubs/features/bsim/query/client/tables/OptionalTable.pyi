from typing import overload
import java.lang


class OptionalTable(object):




    def __init__(self, __a0: unicode, __a1: int, __a2: int, __a3: java.sql.Connection): ...



    def clearTable(self) -> None: ...

    def close(self) -> None: ...

    def createTable(self) -> None: ...

    def deleteValue(self, __a0: object) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def exists(self) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getKeyType(self) -> int: ...

    def getName(self) -> unicode: ...

    def getValueType(self) -> int: ...

    def hashCode(self) -> int: ...

    def lockForWrite(self) -> None: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def readValue(self, __a0: object) -> object: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def writeValue(self, __a0: object, __a1: object) -> None: ...

    @property
    def keyType(self) -> int: ...

    @property
    def name(self) -> unicode: ...

    @property
    def valueType(self) -> int: ...