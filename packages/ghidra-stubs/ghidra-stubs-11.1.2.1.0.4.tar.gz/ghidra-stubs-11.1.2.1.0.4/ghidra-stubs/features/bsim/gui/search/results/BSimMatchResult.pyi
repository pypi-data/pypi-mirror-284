from typing import List
from typing import overload
import ghidra.features.bsim.gui.search.results
import ghidra.features.bsim.query.description
import ghidra.features.bsim.query.protocol
import ghidra.program.model.address
import ghidra.program.model.listing
import java.lang
import java.util


class BSimMatchResult(object):




    def __init__(self, __a0: ghidra.features.bsim.query.description.FunctionDescription, __a1: ghidra.program.model.address.Address, __a2: ghidra.features.bsim.query.protocol.SimilarityNote): ...



    def equals(self, __a0: object) -> bool: ...

    @staticmethod
    def filterMatchRows(__a0: ghidra.features.bsim.query.protocol.BSimFilter, __a1: List[object]) -> List[object]: ...

    @staticmethod
    def generate(__a0: List[object], __a1: ghidra.program.model.listing.Program) -> List[object]: ...

    def getAddress(self) -> ghidra.program.model.address.Address: ...

    def getArchitecture(self) -> unicode: ...

    def getClass(self) -> java.lang.Class: ...

    def getCompilerName(self) -> unicode: ...

    def getDate(self) -> java.util.Date: ...

    def getExeCategoryAlphabetic(self, __a0: unicode) -> unicode: ...

    def getExecutableName(self) -> unicode: ...

    def getExecutableURLString(self) -> unicode: ...

    def getMatchFunctionDescription(self) -> ghidra.features.bsim.query.description.FunctionDescription: ...

    def getMd5(self) -> unicode: ...

    def getOriginalFunctionAddress(self) -> long: ...

    def getOriginalFunctionDescription(self) -> ghidra.features.bsim.query.description.FunctionDescription: ...

    def getOriginalFunctionName(self) -> unicode: ...

    def getSignificance(self) -> float: ...

    def getSimilarFunctionAddress(self) -> long: ...

    def getSimilarFunctionName(self) -> unicode: ...

    def getSimilarity(self) -> float: ...

    def getStatus(self) -> ghidra.features.bsim.gui.search.results.BSimResultStatus: ...

    def hashCode(self) -> int: ...

    def isFlagSet(self, __a0: int) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setStatus(self, __a0: ghidra.features.bsim.gui.search.results.BSimResultStatus) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def address(self) -> ghidra.program.model.address.Address: ...

    @property
    def architecture(self) -> unicode: ...

    @property
    def compilerName(self) -> unicode: ...

    @property
    def date(self) -> java.util.Date: ...

    @property
    def executableName(self) -> unicode: ...

    @property
    def executableURLString(self) -> unicode: ...

    @property
    def matchFunctionDescription(self) -> ghidra.features.bsim.query.description.FunctionDescription: ...

    @property
    def md5(self) -> unicode: ...

    @property
    def originalFunctionAddress(self) -> long: ...

    @property
    def originalFunctionDescription(self) -> ghidra.features.bsim.query.description.FunctionDescription: ...

    @property
    def originalFunctionName(self) -> unicode: ...

    @property
    def significance(self) -> float: ...

    @property
    def similarFunctionAddress(self) -> long: ...

    @property
    def similarFunctionName(self) -> unicode: ...

    @property
    def similarity(self) -> float: ...

    @property
    def status(self) -> ghidra.features.bsim.gui.search.results.BSimResultStatus: ...

    @status.setter
    def status(self, value: ghidra.features.bsim.gui.search.results.BSimResultStatus) -> None: ...