from typing import overload
import ghidra.features.bsim.gui.search.results
import ghidra.program.model.address
import java.lang


class BSimApplyResult(object):




    @overload
    def __init__(self, __a0: ghidra.features.bsim.gui.search.results.BSimMatchResult, __a1: ghidra.features.bsim.gui.search.results.BSimResultStatus, __a2: unicode): ...

    @overload
    def __init__(self, __a0: ghidra.program.model.listing.Function, __a1: ghidra.program.model.listing.Function, __a2: ghidra.features.bsim.gui.search.results.BSimResultStatus, __a3: unicode): ...

    @overload
    def __init__(self, __a0: unicode, __a1: unicode, __a2: ghidra.features.bsim.gui.search.results.BSimResultStatus, __a3: ghidra.program.model.address.Address, __a4: unicode): ...



    def equals(self, __a0: object) -> bool: ...

    def getAddress(self) -> ghidra.program.model.address.Address: ...

    def getClass(self) -> java.lang.Class: ...

    def getMessage(self) -> unicode: ...

    def getSourceFunctionName(self) -> unicode: ...

    def getStatus(self) -> ghidra.features.bsim.gui.search.results.BSimResultStatus: ...

    def getTargetFunctionName(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def isError(self) -> bool: ...

    def isIgnored(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def address(self) -> ghidra.program.model.address.Address: ...

    @property
    def error(self) -> bool: ...

    @property
    def ignored(self) -> bool: ...

    @property
    def message(self) -> unicode: ...

    @property
    def sourceFunctionName(self) -> unicode: ...

    @property
    def status(self) -> ghidra.features.bsim.gui.search.results.BSimResultStatus: ...

    @property
    def targetFunctionName(self) -> unicode: ...