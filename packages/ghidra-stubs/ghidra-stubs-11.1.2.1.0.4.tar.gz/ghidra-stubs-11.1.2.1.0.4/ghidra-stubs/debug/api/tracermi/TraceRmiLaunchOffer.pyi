from typing import List
from typing import overload
import ghidra.debug.api.tracermi
import ghidra.program.model.listing
import ghidra.trace.model
import ghidra.util
import ghidra.util.task
import java.lang
import java.util
import javax.swing


class TraceRmiLaunchOffer(object):





    class LaunchConfigurator(object):
        NOP: ghidra.debug.api.tracermi.TraceRmiLaunchOffer.LaunchConfigurator







        def configureLauncher(self, __a0: ghidra.debug.api.tracermi.TraceRmiLaunchOffer, __a1: java.util.Map, __a2: ghidra.debug.api.tracermi.TraceRmiLaunchOffer.RelPrompt) -> java.util.Map: ...

        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def getPromptMode(self) -> ghidra.debug.api.tracermi.TraceRmiLaunchOffer.PromptMode: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...

        @property
        def promptMode(self) -> ghidra.debug.api.tracermi.TraceRmiLaunchOffer.PromptMode: ...




    class RelPrompt(java.lang.Enum):
        AFTER: ghidra.debug.api.tracermi.TraceRmiLaunchOffer.RelPrompt
        BEFORE: ghidra.debug.api.tracermi.TraceRmiLaunchOffer.RelPrompt
        NONE: ghidra.debug.api.tracermi.TraceRmiLaunchOffer.RelPrompt







        @overload
        def compareTo(self, __a0: java.lang.Enum) -> int: ...

        @overload
        def compareTo(self, __a0: object) -> int: ...

        def describeConstable(self) -> java.util.Optional: ...

        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def getDeclaringClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def name(self) -> unicode: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def ordinal(self) -> int: ...

        def toString(self) -> unicode: ...

        @overload
        @staticmethod
        def valueOf(__a0: unicode) -> ghidra.debug.api.tracermi.TraceRmiLaunchOffer.RelPrompt: ...

        @overload
        @staticmethod
        def valueOf(__a0: java.lang.Class, __a1: unicode) -> java.lang.Enum: ...

        @staticmethod
        def values() -> List[ghidra.debug.api.tracermi.TraceRmiLaunchOffer.RelPrompt]: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class PromptMode(java.lang.Enum):
        ALWAYS: ghidra.debug.api.tracermi.TraceRmiLaunchOffer.PromptMode
        NEVER: ghidra.debug.api.tracermi.TraceRmiLaunchOffer.PromptMode
        ON_ERROR: ghidra.debug.api.tracermi.TraceRmiLaunchOffer.PromptMode







        @overload
        def compareTo(self, __a0: java.lang.Enum) -> int: ...

        @overload
        def compareTo(self, __a0: object) -> int: ...

        def describeConstable(self) -> java.util.Optional: ...

        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def getDeclaringClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def name(self) -> unicode: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def ordinal(self) -> int: ...

        def toString(self) -> unicode: ...

        @overload
        @staticmethod
        def valueOf(__a0: unicode) -> ghidra.debug.api.tracermi.TraceRmiLaunchOffer.PromptMode: ...

        @overload
        @staticmethod
        def valueOf(__a0: java.lang.Class, __a1: unicode) -> java.lang.Enum: ...

        @staticmethod
        def values() -> List[ghidra.debug.api.tracermi.TraceRmiLaunchOffer.PromptMode]: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class LaunchResult(java.lang.Record, java.lang.AutoCloseable):




        def __init__(self, __a0: ghidra.program.model.listing.Program, __a1: java.util.Map, __a2: ghidra.debug.api.tracermi.TraceRmiAcceptor, __a3: ghidra.debug.api.tracermi.TraceRmiConnection, __a4: ghidra.trace.model.Trace, __a5: java.lang.Throwable): ...



        def acceptor(self) -> ghidra.debug.api.tracermi.TraceRmiAcceptor: ...

        def close(self) -> None: ...

        def connection(self) -> ghidra.debug.api.tracermi.TraceRmiConnection: ...

        def equals(self, __a0: object) -> bool: ...

        def exception(self) -> java.lang.Throwable: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def program(self) -> ghidra.program.model.listing.Program: ...

        def sessions(self) -> java.util.Map: ...

        def showTerminals(self) -> None: ...

        def toString(self) -> unicode: ...

        def trace(self) -> ghidra.trace.model.Trace: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...







    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getConfigName(self) -> unicode: ...

    def getDescription(self) -> unicode: ...

    def getHelpLocation(self) -> ghidra.util.HelpLocation: ...

    def getIcon(self) -> javax.swing.Icon: ...

    def getMenuGroup(self) -> unicode: ...

    def getMenuOrder(self) -> unicode: ...

    def getMenuPath(self) -> List[object]: ...

    def getParameters(self) -> java.util.Map: ...

    def getTitle(self) -> unicode: ...

    def hashCode(self) -> int: ...

    @overload
    def launchProgram(self, __a0: ghidra.util.task.TaskMonitor) -> ghidra.debug.api.tracermi.TraceRmiLaunchOffer.LaunchResult: ...

    @overload
    def launchProgram(self, __a0: ghidra.util.task.TaskMonitor, __a1: ghidra.debug.api.tracermi.TraceRmiLaunchOffer.LaunchConfigurator) -> ghidra.debug.api.tracermi.TraceRmiLaunchOffer.LaunchResult: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def requiresImage(self) -> bool: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def configName(self) -> unicode: ...

    @property
    def description(self) -> unicode: ...

    @property
    def helpLocation(self) -> ghidra.util.HelpLocation: ...

    @property
    def icon(self) -> javax.swing.Icon: ...

    @property
    def menuGroup(self) -> unicode: ...

    @property
    def menuOrder(self) -> unicode: ...

    @property
    def menuPath(self) -> List[object]: ...

    @property
    def parameters(self) -> java.util.Map: ...

    @property
    def title(self) -> unicode: ...