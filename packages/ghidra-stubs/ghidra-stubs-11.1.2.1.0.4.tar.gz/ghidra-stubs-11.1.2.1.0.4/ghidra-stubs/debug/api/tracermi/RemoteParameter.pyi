from typing import overload
import ghidra.dbg.target.schema
import java.lang


class RemoteParameter(object):








    def description(self) -> unicode: ...

    def display(self) -> unicode: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getDefaultValue(self) -> object: ...

    def hashCode(self) -> int: ...

    def name(self) -> unicode: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def required(self) -> bool: ...

    def toString(self) -> unicode: ...

    def type(self) -> ghidra.dbg.target.schema.TargetObjectSchema.SchemaName: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def defaultValue(self) -> object: ...