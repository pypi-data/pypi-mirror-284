from typing import overload
import ghidra.dbg
import ghidra.framework.options
import ghidra.program.model.listing
import java.lang
import java.util
import java.util.concurrent


class JdiDebuggerModelFactory(object, ghidra.dbg.DebuggerModelFactory):




    def __init__(self): ...



    def build(self) -> java.util.concurrent.CompletableFuture: ...

    def equals(self, __a0: object) -> bool: ...

    def getBrief(self) -> unicode: ...

    def getClass(self) -> java.lang.Class: ...

    def getHtmlDetails(self) -> unicode: ...

    def getOptions(self) -> java.util.Map: ...

    def getPriority(self, __a0: ghidra.program.model.listing.Program) -> int: ...

    def hashCode(self) -> int: ...

    def isCompatible(self, __a0: ghidra.program.model.listing.Program) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def readConfigState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def writeConfigState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    @property
    def brief(self) -> unicode: ...

    @property
    def htmlDetails(self) -> unicode: ...

    @property
    def options(self) -> java.util.Map: ...