from typing import overload
import ghidra.dbg.target.schema
import java.lang
import java.util


class AnnotatedSchemaContext(ghidra.dbg.target.schema.DefaultSchemaContext):





    class AnnotatedAttributeSchema(ghidra.dbg.target.schema.DefaultTargetObjectSchema.DefaultAttributeSchema):




        def __init__(self, __a0: unicode, __a1: ghidra.dbg.target.schema.TargetObjectSchema.SchemaName, __a2: bool, __a3: bool, __a4: bool, __a5: java.lang.Class): ...



        @overload
        def compareTo(self, __a0: ghidra.dbg.target.schema.DefaultTargetObjectSchema.DefaultAttributeSchema) -> int: ...

        @overload
        def compareTo(self, __a0: object) -> int: ...

        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def getName(self) -> unicode: ...

        def getSchema(self) -> ghidra.dbg.target.schema.TargetObjectSchema.SchemaName: ...

        def hashCode(self) -> int: ...

        def isFixed(self) -> bool: ...

        def isHidden(self) -> bool: ...

        def isRequired(self) -> bool: ...

        def lower(self, __a0: ghidra.dbg.target.schema.AnnotatedSchemaContext.AnnotatedAttributeSchema) -> ghidra.dbg.target.schema.AnnotatedSchemaContext.AnnotatedAttributeSchema: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...



    def __init__(self): ...



    def builder(self, __a0: ghidra.dbg.target.schema.TargetObjectSchema.SchemaName) -> ghidra.dbg.target.schema.SchemaBuilder: ...

    @overload
    def builderForClass(self, __a0: java.lang.Class) -> ghidra.dbg.target.schema.SchemaBuilder: ...

    @overload
    def builderForClass(self, __a0: java.lang.Class, __a1: ghidra.dbg.target.schema.TargetObjectSchema.SchemaName) -> ghidra.dbg.target.schema.SchemaBuilder: ...

    def equals(self, __a0: object) -> bool: ...

    def getAllSchemas(self) -> java.util.Set: ...

    def getClass(self) -> java.lang.Class: ...

    def getSchema(self, __a0: ghidra.dbg.target.schema.TargetObjectSchema.SchemaName) -> ghidra.dbg.target.schema.TargetObjectSchema: ...

    def getSchemaForClass(self, __a0: java.lang.Class) -> ghidra.dbg.target.schema.TargetObjectSchema: ...

    def getSchemaOrNull(self, __a0: ghidra.dbg.target.schema.TargetObjectSchema.SchemaName) -> ghidra.dbg.target.schema.TargetObjectSchema: ...

    def hashCode(self) -> int: ...

    def nameFromAnnotatedClass(self, __a0: java.lang.Class) -> ghidra.dbg.target.schema.TargetObjectSchema.SchemaName: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def putSchema(self, __a0: ghidra.dbg.target.schema.TargetObjectSchema) -> None: ...

    def replaceSchema(self, __a0: ghidra.dbg.target.schema.TargetObjectSchema) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

