from typing import List
from typing import overload
import ghidra.dbg
import ghidra.dbg.attributes
import ghidra.dbg.gadp.client
import ghidra.dbg.gadp.protocol
import ghidra.dbg.target
import ghidra.dbg.util
import ghidra.program.model.address
import java.lang
import java.util


class GadpValueUtils(java.lang.Enum):








    @overload
    def compareTo(self, __a0: java.lang.Enum) -> int: ...

    @overload
    def compareTo(self, __a0: object) -> int: ...

    def describeConstable(self) -> java.util.Optional: ...

    def equals(self, __a0: object) -> bool: ...

    @staticmethod
    def getAddress(__a0: ghidra.dbg.DebuggerObjectModel, __a1: ghidra.dbg.gadp.protocol.Gadp.Address) -> ghidra.program.model.address.Address: ...

    @staticmethod
    def getAddressRange(__a0: ghidra.dbg.DebuggerObjectModel, __a1: ghidra.dbg.gadp.protocol.Gadp.AddressRange) -> ghidra.program.model.address.AddressRange: ...

    @staticmethod
    def getArguments(__a0: ghidra.dbg.DebuggerObjectModel, __a1: List[object]) -> java.util.Map: ...

    @staticmethod
    def getAttachKind(__a0: ghidra.dbg.gadp.protocol.Gadp.AttachKind) -> ghidra.dbg.target.TargetAttacher.TargetAttachKind: ...

    @staticmethod
    def getAttachKindSet(__a0: ghidra.dbg.gadp.protocol.Gadp.AttachKindSet) -> ghidra.dbg.target.TargetAttacher.TargetAttachKindSet: ...

    @staticmethod
    def getAttributeMap(__a0: ghidra.dbg.gadp.client.GadpClientTargetObject, __a1: List[object]) -> java.util.Map: ...

    @staticmethod
    def getAttributeValue(__a0: ghidra.dbg.target.TargetObject, __a1: ghidra.dbg.gadp.protocol.Gadp.NamedValue) -> object: ...

    @staticmethod
    def getBreakKind(__a0: ghidra.dbg.gadp.protocol.Gadp.BreakKind) -> ghidra.dbg.target.TargetBreakpointSpec.TargetBreakpointKind: ...

    @staticmethod
    def getBreakKindSet(__a0: ghidra.dbg.gadp.protocol.Gadp.BreakKindsSet) -> ghidra.dbg.target.TargetBreakpointSpecContainer.TargetBreakpointKindSet: ...

    def getClass(self) -> java.lang.Class: ...

    def getDeclaringClass(self) -> java.lang.Class: ...

    @staticmethod
    def getElementMap(__a0: ghidra.dbg.gadp.client.GadpClientTargetObject, __a1: List[object]) -> java.util.Map: ...

    @staticmethod
    def getElementValue(__a0: ghidra.dbg.target.TargetObject, __a1: ghidra.dbg.gadp.protocol.Gadp.NamedValue) -> ghidra.dbg.gadp.client.GadpClientTargetObject: ...

    @staticmethod
    def getExecutionState(__a0: ghidra.dbg.gadp.protocol.Gadp.ExecutionState) -> ghidra.dbg.target.TargetExecutionStateful.TargetExecutionState: ...

    @staticmethod
    def getObjList(__a0: ghidra.dbg.DebuggerObjectModel, __a1: ghidra.dbg.gadp.protocol.Gadp.PathList) -> ghidra.dbg.attributes.TargetObjectList: ...

    @staticmethod
    def getParameterDescription(__a0: ghidra.dbg.DebuggerObjectModel, __a1: ghidra.dbg.gadp.protocol.Gadp.Parameter) -> ghidra.dbg.target.TargetMethod.ParameterDescription: ...

    @staticmethod
    def getParameters(__a0: ghidra.dbg.DebuggerObjectModel, __a1: ghidra.dbg.gadp.protocol.Gadp.ParameterList) -> java.util.Map: ...

    @staticmethod
    def getRegisterValueMap(__a0: java.util.Collection) -> java.util.Map: ...

    @staticmethod
    def getStepKind(__a0: ghidra.dbg.gadp.protocol.Gadp.StepKind) -> ghidra.dbg.target.TargetSteppable.TargetStepKind: ...

    @staticmethod
    def getStepKindSet(__a0: ghidra.dbg.gadp.protocol.Gadp.StepKindsSet) -> ghidra.dbg.target.TargetSteppable.TargetStepKindSet: ...

    @staticmethod
    def getStringList(__a0: ghidra.dbg.gadp.protocol.Gadp.StringList) -> ghidra.dbg.attributes.TargetStringList: ...

    @staticmethod
    def getTargetEventType(__a0: ghidra.dbg.gadp.protocol.Gadp.TargetEventType) -> ghidra.dbg.target.TargetEventScope.TargetEventType: ...

    @staticmethod
    def getTargetObjectNonLink(__a0: List[object], __a1: object) -> ghidra.dbg.target.TargetObject: ...

    @staticmethod
    def getValue(__a0: ghidra.dbg.DebuggerObjectModel, __a1: List[object], __a2: ghidra.dbg.gadp.protocol.Gadp.Value) -> object: ...

    @staticmethod
    def getValueType(__a0: ghidra.dbg.gadp.protocol.Gadp.ValueType) -> java.lang.Class: ...

    @staticmethod
    def getValues(__a0: ghidra.dbg.DebuggerObjectModel, __a1: List[object]) -> List[object]: ...

    def hashCode(self) -> int: ...

    @staticmethod
    def makeAddress(__a0: ghidra.program.model.address.Address) -> ghidra.dbg.gadp.protocol.Gadp.Address: ...

    @staticmethod
    def makeArguments(__a0: java.util.Map) -> List[object]: ...

    @staticmethod
    def makeAttachKind(__a0: ghidra.dbg.target.TargetAttacher.TargetAttachKind) -> ghidra.dbg.gadp.protocol.Gadp.AttachKind: ...

    @staticmethod
    def makeAttachKindSet(__a0: java.util.Set) -> ghidra.dbg.gadp.protocol.Gadp.AttachKindSet: ...

    @staticmethod
    def makeAttributeDelta(__a0: List[object], __a1: ghidra.dbg.util.CollectionUtils.Delta) -> ghidra.dbg.gadp.protocol.Gadp.ModelObjectDelta: ...

    @staticmethod
    def makeBreakKind(__a0: ghidra.dbg.target.TargetBreakpointSpec.TargetBreakpointKind) -> ghidra.dbg.gadp.protocol.Gadp.BreakKind: ...

    @staticmethod
    def makeBreakKindSet(__a0: java.util.Set) -> ghidra.dbg.gadp.protocol.Gadp.BreakKindsSet: ...

    @staticmethod
    def makeElementDelta(__a0: List[object], __a1: ghidra.dbg.util.CollectionUtils.Delta) -> ghidra.dbg.gadp.protocol.Gadp.ModelObjectDelta: ...

    @staticmethod
    def makeExecutionState(__a0: ghidra.dbg.target.TargetExecutionStateful.TargetExecutionState) -> ghidra.dbg.gadp.protocol.Gadp.ExecutionState: ...

    @staticmethod
    def makeIndexedValue(__a0: List[object], __a1: java.util.Map.Entry) -> ghidra.dbg.gadp.protocol.Gadp.NamedValue: ...

    @overload
    @staticmethod
    def makeNamedValue(__a0: java.util.Map.Entry) -> ghidra.dbg.gadp.protocol.Gadp.NamedValue: ...

    @overload
    @staticmethod
    def makeNamedValue(__a0: List[object], __a1: java.util.Map.Entry) -> ghidra.dbg.gadp.protocol.Gadp.NamedValue: ...

    @staticmethod
    def makeParameter(__a0: ghidra.dbg.target.TargetMethod.ParameterDescription) -> ghidra.dbg.gadp.protocol.Gadp.Parameter: ...

    @staticmethod
    def makeParameterList(__a0: ghidra.dbg.target.TargetMethod.TargetParameterMap) -> ghidra.dbg.gadp.protocol.Gadp.ParameterList: ...

    @overload
    @staticmethod
    def makePath(__a0: ghidra.dbg.target.TargetObject) -> ghidra.dbg.gadp.protocol.Gadp.Path: ...

    @overload
    @staticmethod
    def makePath(__a0: List[object]) -> ghidra.dbg.gadp.protocol.Gadp.Path: ...

    @staticmethod
    def makePathList(__a0: ghidra.dbg.attributes.TargetObjectList) -> ghidra.dbg.gadp.protocol.Gadp.PathList: ...

    @staticmethod
    def makeRange(__a0: ghidra.program.model.address.AddressRange) -> ghidra.dbg.gadp.protocol.Gadp.AddressRange: ...

    @staticmethod
    def makeRegisterValue(__a0: java.util.Map.Entry) -> ghidra.dbg.gadp.protocol.Gadp.RegisterValue: ...

    @staticmethod
    def makeRegisterValues(__a0: java.util.Map) -> java.util.Collection: ...

    @staticmethod
    def makeStepKind(__a0: ghidra.dbg.target.TargetSteppable.TargetStepKind) -> ghidra.dbg.gadp.protocol.Gadp.StepKind: ...

    @staticmethod
    def makeStepKindSet(__a0: java.util.Set) -> ghidra.dbg.gadp.protocol.Gadp.StepKindsSet: ...

    @staticmethod
    def makeStringList(__a0: java.util.Collection) -> ghidra.dbg.gadp.protocol.Gadp.StringList: ...

    @staticmethod
    def makeTargetEventType(__a0: ghidra.dbg.target.TargetEventScope.TargetEventType) -> ghidra.dbg.gadp.protocol.Gadp.TargetEventType: ...

    @staticmethod
    def makeValue(__a0: List[object], __a1: object) -> ghidra.dbg.gadp.protocol.Gadp.Value: ...

    @staticmethod
    def makeValueType(__a0: java.lang.Class) -> ghidra.dbg.gadp.protocol.Gadp.ValueType: ...

    @staticmethod
    def makeValues(__a0: java.util.Collection) -> List[object]: ...

    def name(self) -> unicode: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def ordinal(self) -> int: ...

    def toString(self) -> unicode: ...

    @overload
    @staticmethod
    def valueOf(__a0: unicode) -> ghidra.dbg.gadp.client.GadpValueUtils: ...

    @overload
    @staticmethod
    def valueOf(__a0: java.lang.Class, __a1: unicode) -> java.lang.Enum: ...

    @staticmethod
    def values() -> List[ghidra.dbg.gadp.client.GadpValueUtils]: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

