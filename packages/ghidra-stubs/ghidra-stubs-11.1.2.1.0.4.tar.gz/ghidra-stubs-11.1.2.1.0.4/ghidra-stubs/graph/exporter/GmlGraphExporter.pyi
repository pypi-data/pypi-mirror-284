from typing import overload
import ghidra.graph.exporter
import ghidra.service.graph
import java.io
import java.lang


class GmlGraphExporter(ghidra.graph.exporter.AbstractAttributedGraphExporter):




    def __init__(self): ...



    def equals(self, __a0: object) -> bool: ...

    def exportGraph(self, __a0: ghidra.service.graph.AttributedGraph, __a1: java.io.File) -> None: ...

    def getClass(self) -> java.lang.Class: ...

    def getDesciption(self) -> unicode: ...

    def getFileExtension(self) -> unicode: ...

    def getName(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def desciption(self) -> unicode: ...

    @property
    def fileExtension(self) -> unicode: ...

    @property
    def name(self) -> unicode: ...