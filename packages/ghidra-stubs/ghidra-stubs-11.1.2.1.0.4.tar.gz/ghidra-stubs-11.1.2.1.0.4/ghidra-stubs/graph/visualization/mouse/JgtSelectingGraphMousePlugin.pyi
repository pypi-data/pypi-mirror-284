from typing import overload
import java.awt
import java.awt.event
import java.lang
import org.jungrapht.visualization.control


class JgtSelectingGraphMousePlugin(org.jungrapht.visualization.control.SelectingGraphMousePlugin):




    def __init__(self, __a0: int, __a1: int): ...



    @staticmethod
    def builder() -> org.jungrapht.visualization.control.SelectingGraphMousePlugin.Builder: ...

    def checkModifiers(self, __a0: java.awt.event.MouseEvent) -> bool: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getCursor(self) -> java.awt.Cursor: ...

    def getLensColor(self) -> java.awt.Color: ...

    def getModifiersEx(self) -> int: ...

    def hashCode(self) -> int: ...

    def isLocked(self) -> bool: ...

    def mouseClicked(self, __a0: java.awt.event.MouseEvent) -> None: ...

    def mouseDragged(self, __a0: java.awt.event.MouseEvent) -> None: ...

    def mouseEntered(self, __a0: java.awt.event.MouseEvent) -> None: ...

    def mouseExited(self, __a0: java.awt.event.MouseEvent) -> None: ...

    def mouseMoved(self, __a0: java.awt.event.MouseEvent) -> None: ...

    def mousePressed(self, __a0: java.awt.event.MouseEvent) -> None: ...

    def mouseReleased(self, __a0: java.awt.event.MouseEvent) -> None: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setCursor(self, __a0: java.awt.Cursor) -> None: ...

    def setLensColor(self, __a0: java.awt.Color) -> None: ...

    def setLocked(self, __a0: bool) -> None: ...

    def setModifiers(self, __a0: int) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

