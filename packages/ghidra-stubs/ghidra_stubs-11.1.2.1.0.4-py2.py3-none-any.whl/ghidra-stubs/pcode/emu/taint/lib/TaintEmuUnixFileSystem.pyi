from typing import List
from typing import overload
import ghidra.pcode.emu.sys
import ghidra.pcode.emu.unix
import ghidra.pcode.exec
import ghidra.taint.model
import java.lang
import java.util


class TaintEmuUnixFileSystem(ghidra.pcode.emu.unix.AbstractEmuUnixFileSystem):





    class ReadOnlyTaintArrayFileContents(object, ghidra.pcode.emu.sys.EmuFileContents):




        def __init__(self, __a0: unicode): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        @overload
        def read(self, __a0: long, __a1: ghidra.taint.model.TaintVec, __a2: long) -> long: ...

        @overload
        def read(self, __a0: long, __a1: object, __a2: long) -> long: ...

        def toString(self) -> unicode: ...

        def truncate(self) -> None: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...

        @overload
        def write(self, __a0: long, __a1: ghidra.taint.model.TaintVec, __a2: long) -> long: ...

        @overload
        def write(self, __a0: long, __a1: object, __a2: long) -> long: ...






    class UntaintedFileContents(object, ghidra.pcode.emu.sys.EmuFileContents):




        def __init__(self): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        @overload
        def read(self, __a0: long, __a1: ghidra.taint.model.TaintVec, __a2: long) -> long: ...

        @overload
        def read(self, __a0: long, __a1: object, __a2: long) -> long: ...

        def toString(self) -> unicode: ...

        def truncate(self) -> None: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...

        @overload
        def write(self, __a0: long, __a1: ghidra.taint.model.TaintVec, __a2: long) -> long: ...

        @overload
        def write(self, __a0: long, __a1: object, __a2: long) -> long: ...






    class TaintEmuUnixFile(ghidra.pcode.emu.unix.AbstractEmuUnixFile):




        def __init__(self, __a0: unicode, __a1: int): ...



        def checkReadable(self, __a0: ghidra.pcode.emu.unix.EmuUnixUser) -> None: ...

        def checkWritable(self, __a0: ghidra.pcode.emu.unix.EmuUnixUser) -> None: ...

        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def getPathname(self) -> unicode: ...

        def getStat(self) -> ghidra.pcode.emu.unix.EmuUnixFileStat: ...

        def hashCode(self) -> int: ...

        def isReadable(self, __a0: ghidra.pcode.emu.unix.EmuUnixUser) -> bool: ...

        def isWritable(self, __a0: ghidra.pcode.emu.unix.EmuUnixUser) -> bool: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def read(self, __a0: ghidra.pcode.exec.PcodeArithmetic, __a1: object, __a2: object) -> object: ...

        def setTainted(self, __a0: bool) -> None: ...

        def toString(self) -> unicode: ...

        def truncate(self) -> None: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...

        def write(self, __a0: ghidra.pcode.exec.PcodeArithmetic, __a1: object, __a2: object) -> object: ...

        @property
        def tainted(self) -> None: ...  # No getter available.

        @tainted.setter
        def tainted(self, value: bool) -> None: ...

    def __init__(self): ...



    def createOrGetFile(self, __a0: unicode, __a1: int) -> ghidra.pcode.emu.unix.EmuUnixFile: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getFile(self, __a0: unicode) -> ghidra.pcode.emu.unix.EmuUnixFile: ...

    def hashCode(self) -> int: ...

    def newFile(self, __a0: unicode, __a1: int) -> ghidra.pcode.emu.unix.EmuUnixFile: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def open(self, __a0: unicode, __a1: java.util.Set, __a2: ghidra.pcode.emu.unix.EmuUnixUser, __a3: int) -> ghidra.pcode.emu.unix.EmuUnixFile: ...

    def putFile(self, __a0: unicode, __a1: ghidra.pcode.emu.unix.EmuUnixFile) -> None: ...

    def putTaintedFile(self, __a0: unicode, __a1: List[int]) -> None: ...

    def toString(self) -> unicode: ...

    def unlink(self, __a0: unicode, __a1: ghidra.pcode.emu.unix.EmuUnixUser) -> None: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

