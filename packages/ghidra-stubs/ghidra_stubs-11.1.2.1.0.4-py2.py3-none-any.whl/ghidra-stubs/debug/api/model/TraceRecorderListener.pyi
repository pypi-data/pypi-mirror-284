from typing import overload
import ghidra.debug.api.model
import java.lang


class TraceRecorderListener(object):








    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def processMemoryAccessibilityChanged(self, __a0: ghidra.debug.api.model.TraceRecorder) -> None: ...

    def recordingStopped(self, __a0: ghidra.debug.api.model.TraceRecorder) -> None: ...

    def registerAccessibilityChanged(self, __a0: ghidra.debug.api.model.TraceRecorder) -> None: ...

    def registerBankMapped(self, __a0: ghidra.debug.api.model.TraceRecorder) -> None: ...

    def snapAdvanced(self, __a0: ghidra.debug.api.model.TraceRecorder, __a1: long) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

