from typing import List
from typing import overload
import ghidra.debug.api.target
import ghidra.debug.api.tracermi
import java.lang
import java.net
import java.util


class TraceRmiServiceListener(object):





    class ConnectMode(java.lang.Enum):
        ACCEPT_ONE: ghidra.debug.api.tracermi.TraceRmiServiceListener.ConnectMode
        CONNECT: ghidra.debug.api.tracermi.TraceRmiServiceListener.ConnectMode
        SERVER: ghidra.debug.api.tracermi.TraceRmiServiceListener.ConnectMode







        @overload
        def compareTo(self, __a0: java.lang.Enum) -> int: ...

        @overload
        def compareTo(self, __a0: object) -> int: ...

        def describeConstable(self) -> java.util.Optional: ...

        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def getDeclaringClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def name(self) -> unicode: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def ordinal(self) -> int: ...

        def toString(self) -> unicode: ...

        @overload
        @staticmethod
        def valueOf(__a0: unicode) -> ghidra.debug.api.tracermi.TraceRmiServiceListener.ConnectMode: ...

        @overload
        @staticmethod
        def valueOf(__a0: java.lang.Class, __a1: unicode) -> java.lang.Enum: ...

        @staticmethod
        def values() -> List[ghidra.debug.api.tracermi.TraceRmiServiceListener.ConnectMode]: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...







    def acceptCancelled(self, __a0: ghidra.debug.api.tracermi.TraceRmiAcceptor) -> None: ...

    def acceptFailed(self, __a0: ghidra.debug.api.tracermi.TraceRmiAcceptor, __a1: java.lang.Exception) -> None: ...

    def connected(self, __a0: ghidra.debug.api.tracermi.TraceRmiConnection, __a1: ghidra.debug.api.tracermi.TraceRmiServiceListener.ConnectMode, __a2: ghidra.debug.api.tracermi.TraceRmiAcceptor) -> None: ...

    def disconnected(self, __a0: ghidra.debug.api.tracermi.TraceRmiConnection) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def serverStarted(self, __a0: java.net.SocketAddress) -> None: ...

    def serverStopped(self) -> None: ...

    def targetPublished(self, __a0: ghidra.debug.api.tracermi.TraceRmiConnection, __a1: ghidra.debug.api.target.Target) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def waitingAccept(self, __a0: ghidra.debug.api.tracermi.TraceRmiAcceptor) -> None: ...

