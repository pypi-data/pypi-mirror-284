from typing import overload
import ghidra.program.model.pcode
import ghidra.util.task
import java.lang
import java.util


class DecompileDataDiff(object):




    def __init__(self, __a0: ghidra.app.decompiler.component.DecompileData, __a1: ghidra.app.decompiler.component.DecompileData): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getLeftHighFunction(self) -> ghidra.program.model.pcode.HighFunction: ...

    def getLeftHighlightTokenSet(self, __a0: bool, __a1: ghidra.util.task.TaskMonitor) -> java.util.HashSet: ...

    def getRightHighFunction(self) -> ghidra.program.model.pcode.HighFunction: ...

    def getRightHighlightTokenSet(self, __a0: bool, __a1: ghidra.util.task.TaskMonitor) -> java.util.HashSet: ...

    def getTokenMap(self, __a0: bool, __a1: ghidra.util.task.TaskMonitor) -> java.util.ArrayList: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def leftHighFunction(self) -> ghidra.program.model.pcode.HighFunction: ...

    @property
    def rightHighFunction(self) -> ghidra.program.model.pcode.HighFunction: ...