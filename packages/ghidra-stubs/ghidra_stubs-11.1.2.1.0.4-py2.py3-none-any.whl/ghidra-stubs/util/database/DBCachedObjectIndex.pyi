from typing import overload
import ghidra.util.database
import java.lang
import java.util


class DBCachedObjectIndex(object):








    def ceilingEntry(self, __a0: object) -> java.util.Map.Entry: ...

    def ceilingKey(self, __a0: object) -> object: ...

    def ceilingValue(self, __a0: object) -> ghidra.util.database.DBAnnotatedObject: ...

    def containsKey(self, __a0: object) -> bool: ...

    def containsValue(self, __a0: ghidra.util.database.DBAnnotatedObject) -> bool: ...

    def countKey(self, __a0: object) -> int: ...

    def descending(self) -> ghidra.util.database.DBCachedObjectIndex: ...

    def entries(self) -> java.lang.Iterable: ...

    def equals(self, __a0: object) -> bool: ...

    def firstEntry(self) -> java.util.Map.Entry: ...

    def firstKey(self) -> object: ...

    def firstValue(self) -> ghidra.util.database.DBAnnotatedObject: ...

    def floorEntry(self, __a0: object) -> java.util.Map.Entry: ...

    def floorKey(self, __a0: object) -> object: ...

    def floorValue(self, __a0: object) -> ghidra.util.database.DBAnnotatedObject: ...

    def get(self, __a0: object) -> java.util.Collection: ...

    def getClass(self) -> java.lang.Class: ...

    def getLazily(self, __a0: object) -> java.util.Collection: ...

    def getOne(self, __a0: object) -> ghidra.util.database.DBAnnotatedObject: ...

    def hashCode(self) -> int: ...

    def head(self, __a0: object, __a1: bool) -> ghidra.util.database.DBCachedObjectIndex: ...

    def higherEntry(self, __a0: object) -> java.util.Map.Entry: ...

    def higherKey(self, __a0: object) -> object: ...

    def higherValue(self, __a0: object) -> ghidra.util.database.DBAnnotatedObject: ...

    def isEmpty(self) -> bool: ...

    def keys(self) -> java.lang.Iterable: ...

    def lastEntry(self) -> java.util.Map.Entry: ...

    def lastKey(self) -> object: ...

    def lastValue(self) -> ghidra.util.database.DBAnnotatedObject: ...

    def lowerEntry(self, __a0: object) -> java.util.Map.Entry: ...

    def lowerKey(self, __a0: object) -> object: ...

    def lowerValue(self, __a0: object) -> ghidra.util.database.DBAnnotatedObject: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def sub(self, __a0: object, __a1: bool, __a2: object, __a3: bool) -> ghidra.util.database.DBCachedObjectIndex: ...

    def tail(self, __a0: object, __a1: bool) -> ghidra.util.database.DBCachedObjectIndex: ...

    def toString(self) -> unicode: ...

    def values(self) -> java.lang.Iterable: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def empty(self) -> bool: ...