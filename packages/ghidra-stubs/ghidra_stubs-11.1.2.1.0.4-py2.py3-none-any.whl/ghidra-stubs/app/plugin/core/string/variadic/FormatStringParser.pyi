from typing import List
from typing import overload
import ghidra.program.model.data
import java.lang


class FormatStringParser(object):
    INTMAX_T_NAME: unicode = u'intmax_t'
    PTRDIFF_T_NAME: unicode = u'ptrdiff_t'
    SIZE_T_NAME: unicode = u'size_t'
    UINTMAX_T_NAME: unicode = u'uintmax_t'



    def __init__(self, __a0: ghidra.program.model.listing.Program): ...



    def analyzeFormatStringWithParameters(self, __a0: unicode) -> List[object]: ...

    def convertToFormatArgumentList(self, __a0: unicode, __a1: bool) -> List[object]: ...

    def convertToInputDataTypes(self, __a0: List[object]) -> List[ghidra.program.model.data.DataType]: ...

    def convertToOutputDataTypes(self, __a0: List[object]) -> List[ghidra.program.model.data.DataType]: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def skipToNextWhitespace(self, __a0: unicode, __a1: int) -> int: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

