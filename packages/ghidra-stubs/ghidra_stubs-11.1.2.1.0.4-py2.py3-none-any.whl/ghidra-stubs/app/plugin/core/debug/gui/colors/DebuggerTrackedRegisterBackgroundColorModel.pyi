from typing import overload
import docking.widgets.fieldpanel.support
import java.awt
import java.lang


class DebuggerTrackedRegisterBackgroundColorModel(object, docking.widgets.fieldpanel.support.BackgroundColorModel):




    def __init__(self): ...



    def equals(self, __a0: object) -> bool: ...

    def getBackgroundColor(self, __a0: long) -> java.awt.Color: ...

    def getClass(self) -> java.lang.Class: ...

    def getDefaultBackgroundColor(self) -> java.awt.Color: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setDefaultBackgroundColor(self, __a0: java.awt.Color) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def defaultBackgroundColor(self) -> java.awt.Color: ...

    @defaultBackgroundColor.setter
    def defaultBackgroundColor(self, value: java.awt.Color) -> None: ...