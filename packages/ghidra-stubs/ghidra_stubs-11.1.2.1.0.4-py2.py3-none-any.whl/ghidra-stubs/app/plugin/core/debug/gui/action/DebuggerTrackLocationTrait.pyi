from typing import List
from typing import overload
import docking.menu
import docking.widgets.fieldpanel.support
import ghidra.app.plugin.core.debug.gui.colors
import ghidra.app.util.viewer.listingpanel
import ghidra.debug.api.action
import ghidra.debug.api.tracemgr
import ghidra.framework.options
import ghidra.program.util
import java.lang


class DebuggerTrackLocationTrait(object):




    def __init__(self, __a0: ghidra.framework.plugintool.PluginTool, __a1: ghidra.framework.plugintool.Plugin, __a2: docking.ComponentProvider): ...



    def computeLabelText(self) -> unicode: ...

    def createListingBackgroundColorModel(self, __a0: ghidra.app.util.viewer.listingpanel.ListingPanel) -> ghidra.app.util.viewer.listingpanel.ListingBackgroundColorModel: ...

    def equals(self, __a0: object) -> bool: ...

    def getBackgroundColorModel(self) -> docking.widgets.fieldpanel.support.BackgroundColorModel: ...

    def getClass(self) -> java.lang.Class: ...

    def getDefaultGoToInput(self, __a0: ghidra.program.util.ProgramLocation) -> ghidra.debug.api.action.GoToInput: ...

    def getSelectionGenerator(self) -> ghidra.app.plugin.core.debug.gui.colors.SelectionGenerator: ...

    def getSpec(self) -> ghidra.debug.api.action.LocationTrackingSpec: ...

    def getStates(self) -> List[object]: ...

    def getTrackedLocation(self) -> ghidra.program.util.ProgramLocation: ...

    def goToCoordinates(self, __a0: ghidra.debug.api.tracemgr.DebuggerCoordinates) -> None: ...

    def hashCode(self) -> int: ...

    def installAction(self) -> docking.menu.MultiStateDockingAction: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def readConfigState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    def setSpec(self, __a0: ghidra.debug.api.action.LocationTrackingSpec) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def writeConfigState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    @property
    def backgroundColorModel(self) -> docking.widgets.fieldpanel.support.BackgroundColorModel: ...

    @property
    def selectionGenerator(self) -> ghidra.app.plugin.core.debug.gui.colors.SelectionGenerator: ...

    @property
    def spec(self) -> ghidra.debug.api.action.LocationTrackingSpec: ...

    @spec.setter
    def spec(self, value: ghidra.debug.api.action.LocationTrackingSpec) -> None: ...

    @property
    def states(self) -> List[object]: ...

    @property
    def trackedLocation(self) -> ghidra.program.util.ProgramLocation: ...