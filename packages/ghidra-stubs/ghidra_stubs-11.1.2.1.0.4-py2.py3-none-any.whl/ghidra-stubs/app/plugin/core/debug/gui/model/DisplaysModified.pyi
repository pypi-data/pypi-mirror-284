from typing import overload
import ghidra.trace.model
import ghidra.trace.model.target
import java.lang


class DisplaysModified(object):








    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getDiffSnap(self) -> long: ...

    def getDiffTrace(self) -> ghidra.trace.model.Trace: ...

    def getSnap(self) -> long: ...

    def getTrace(self) -> ghidra.trace.model.Trace: ...

    def hashCode(self) -> int: ...

    def isEdgesDiffer(self, __a0: ghidra.trace.model.target.TraceObjectValue, __a1: ghidra.trace.model.target.TraceObjectValue) -> bool: ...

    def isObjectsDiffer(self, __a0: ghidra.trace.model.target.TraceObject, __a1: ghidra.trace.model.target.TraceObject) -> bool: ...

    def isValueModified(self, __a0: ghidra.trace.model.target.TraceObjectValue) -> bool: ...

    def isValuesDiffer(self, __a0: object, __a1: object) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def diffSnap(self) -> long: ...

    @property
    def diffTrace(self) -> ghidra.trace.model.Trace: ...

    @property
    def snap(self) -> long: ...

    @property
    def trace(self) -> ghidra.trace.model.Trace: ...