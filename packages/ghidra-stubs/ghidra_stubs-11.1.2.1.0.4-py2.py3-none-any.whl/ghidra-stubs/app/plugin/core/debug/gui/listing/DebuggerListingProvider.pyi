from typing import List
from typing import overload
import docking
import docking.action
import docking.widgets
import ghidra.app.nav
import ghidra.app.plugin.core.codebrowser
import ghidra.app.plugin.core.debug.gui.action
import ghidra.app.services
import ghidra.app.util
import ghidra.app.util.viewer.listingpanel
import ghidra.debug.api.action
import ghidra.debug.api.tracemgr
import ghidra.framework.options
import ghidra.program.model.address
import ghidra.program.model.listing
import ghidra.program.util
import ghidra.trace.model
import ghidra.util
import java.awt
import java.awt.datatransfer
import java.awt.dnd
import java.awt.event
import java.lang
import java.util
import javax.swing
import javax.swing.event


class DebuggerListingProvider(ghidra.app.plugin.core.codebrowser.CodeViewerProvider):




    def __init__(self, __a0: ghidra.app.plugin.core.debug.gui.listing.DebuggerListingPlugin, __a1: ghidra.app.util.viewer.format.FormatManager, __a2: bool): ...



    def add(self, __a0: object, __a1: java.awt.dnd.DropTargetDropEvent, __a2: java.awt.datatransfer.DataFlavor) -> None: ...

    def addDisplayListener(self, __a0: ghidra.app.util.viewer.listingpanel.AddressSetDisplayListener) -> None: ...

    def addLocalAction(self, __a0: docking.action.DockingActionIf) -> None: ...

    def addMarginProvider(self, __a0: ghidra.app.util.viewer.listingpanel.MarginProvider) -> None: ...

    def addNavigatableListener(self, __a0: ghidra.app.nav.NavigatableRemovalListener) -> None: ...

    def addOverviewProvider(self, __a0: ghidra.app.util.viewer.listingpanel.OverviewProvider) -> None: ...

    def addToTool(self) -> None: ...

    def addTrackingSpecChangeListener(self, __a0: ghidra.app.services.DebuggerListingService.LocationTrackingSpecChangeListener) -> None: ...

    def adjustFontSize(self, __a0: bool) -> None: ...

    def canBeParent(self) -> bool: ...

    def clearPanel(self) -> None: ...

    def cloneWindow(self) -> None: ...

    def closeComponent(self) -> None: ...

    def componentActivated(self) -> None: ...

    def componentDeactived(self) -> None: ...

    def componentHidden(self) -> None: ...

    def componentShown(self) -> None: ...

    def contextChanged(self) -> None: ...

    def coordinatesActivated(self, __a0: ghidra.debug.api.tracemgr.DebuggerCoordinates) -> None: ...

    def dispose(self) -> None: ...

    def doAutoSyncCursorIntoStatic(self, __a0: ghidra.program.util.ProgramLocation) -> None: ...

    def dragCanceled(self, __a0: java.awt.dnd.DragSourceDropEvent) -> None: ...

    def dragUnderFeedback(self, __a0: bool, __a1: java.awt.dnd.DropTargetDragEvent) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getActionContext(self, __a0: java.awt.event.MouseEvent) -> docking.ActionContext: ...

    def getAutoReadMemorySpec(self) -> ghidra.app.plugin.core.debug.gui.action.AutoReadMemorySpec: ...

    def getClass(self) -> java.lang.Class: ...

    def getComponent(self) -> javax.swing.JComponent: ...

    def getContextType(self) -> java.lang.Class: ...

    def getDefaultWindowPosition(self) -> docking.WindowPosition: ...

    def getDragAction(self) -> int: ...

    def getDragSourceListener(self) -> java.awt.dnd.DragSourceListener: ...

    def getHelpInfo(self) -> unicode: ...

    def getHelpLocation(self) -> ghidra.util.HelpLocation: ...

    def getHelpObject(self) -> object: ...

    def getHighlight(self) -> ghidra.program.util.ProgramSelection: ...

    def getIcon(self) -> javax.swing.Icon: ...

    def getInstanceID(self) -> long: ...

    def getIntraGroupPosition(self) -> docking.WindowPosition: ...

    def getListingPanel(self) -> ghidra.app.util.viewer.listingpanel.ListingPanel: ...

    def getLocalActions(self) -> java.util.Set: ...

    def getLocation(self) -> ghidra.program.util.ProgramLocation: ...

    @staticmethod
    def getMappedName(__a0: unicode, __a1: unicode) -> unicode: ...

    @staticmethod
    def getMappedOwner(__a0: unicode, __a1: unicode) -> unicode: ...

    def getMemento(self) -> ghidra.app.nav.LocationMemento: ...

    def getName(self) -> unicode: ...

    def getNavigatableIcon(self) -> javax.swing.Icon: ...

    def getOtherPanel(self) -> ghidra.app.util.viewer.listingpanel.ListingPanel: ...

    def getOwner(self) -> unicode: ...

    def getPopupActions(self, __a0: docking.Tool, __a1: docking.ActionContext) -> List[object]: ...

    def getProgram(self) -> ghidra.program.model.listing.Program: ...

    def getSelection(self) -> ghidra.program.util.ProgramSelection: ...

    def getStringSelection(self) -> unicode: ...

    def getSubTitle(self) -> unicode: ...

    def getTabText(self) -> unicode: ...

    def getTextSelection(self) -> unicode: ...

    def getTitle(self) -> unicode: ...

    def getTool(self) -> docking.Tool: ...

    def getTrackingSpec(self) -> ghidra.debug.api.action.LocationTrackingSpec: ...

    def getTransferable(self, __a0: java.awt.Point) -> java.awt.datatransfer.Transferable: ...

    def getWindowGroup(self) -> unicode: ...

    def getWindowSubMenuName(self) -> unicode: ...

    def goTo(self, __a0: ghidra.program.model.listing.Program, __a1: ghidra.program.util.ProgramLocation) -> bool: ...

    def goToCoordinates(self, __a0: ghidra.debug.api.tracemgr.DebuggerCoordinates) -> None: ...

    def hashCode(self) -> int: ...

    def isActive(self) -> bool: ...

    def isAutoDisassemble(self) -> bool: ...

    def isConnected(self) -> bool: ...

    def isDisposed(self) -> bool: ...

    def isDropOk(self, __a0: java.awt.dnd.DropTargetDragEvent) -> bool: ...

    def isDynamic(self) -> bool: ...

    def isFocusedProvider(self) -> bool: ...

    def isFollowsCurrentThread(self) -> bool: ...

    def isInTool(self) -> bool: ...

    def isMainListing(self) -> bool: ...

    def isReadOnly(self) -> bool: ...

    def isSnapshot(self) -> bool: ...

    def isStartDragOk(self, __a0: java.awt.dnd.DragGestureEvent) -> bool: ...

    def isTransient(self) -> bool: ...

    def isVisible(self) -> bool: ...

    def move(self) -> None: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def programClosed(self, __a0: ghidra.program.model.listing.Program) -> None: ...

    def programLocationChanged(self, __a0: ghidra.program.util.ProgramLocation, __a1: docking.widgets.EventTrigger) -> None: ...

    def programOpened(self, __a0: ghidra.program.model.listing.Program) -> None: ...

    def programSelectionChanged(self, __a0: ghidra.program.util.ProgramSelection, __a1: docking.widgets.EventTrigger) -> None: ...

    def readDataState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    @staticmethod
    def registerProviderNameOwnerChange(__a0: unicode, __a1: unicode, __a2: unicode, __a3: unicode) -> None: ...

    def removeDisplayListener(self, __a0: ghidra.app.util.viewer.listingpanel.AddressSetDisplayListener) -> None: ...

    def removeFromTool(self) -> None: ...

    def removeHighlightProvider(self, __a0: ghidra.app.util.ListingHighlightProvider, __a1: ghidra.program.model.listing.Program) -> None: ...

    def removeMarginProvider(self, __a0: ghidra.app.util.viewer.listingpanel.MarginProvider) -> None: ...

    def removeNavigatableListener(self, __a0: ghidra.app.nav.NavigatableRemovalListener) -> None: ...

    def removeOverviewProvider(self, __a0: ghidra.app.util.viewer.listingpanel.OverviewProvider) -> None: ...

    def removeTrackingSpecChangeListener(self, __a0: ghidra.app.services.DebuggerListingService.LocationTrackingSpecChangeListener) -> None: ...

    def requestFocus(self) -> None: ...

    def resetFontSize(self) -> None: ...

    def selectAll(self) -> None: ...

    def selectComplement(self) -> None: ...

    def setAutoDisassemble(self, __a0: bool) -> None: ...

    def setAutoReadMemorySpec(self, __a0: ghidra.app.plugin.core.debug.gui.action.AutoReadMemorySpec) -> None: ...

    def setAutoSyncCursorWithStaticListing(self, __a0: bool) -> None: ...

    def setAutoSyncSelectionWithStaticListing(self, __a0: bool) -> None: ...

    def setClipboardService(self, __a0: ghidra.app.services.ClipboardService) -> None: ...

    def setCoordinatedListingPanelListener(self, __a0: ghidra.app.services.CoordinatedListingPanelListener) -> None: ...

    def setFollowsCurrentThread(self, __a0: bool) -> None: ...

    def setHelpLocation(self, __a0: ghidra.util.HelpLocation) -> None: ...

    def setHighlight(self, __a0: ghidra.program.util.ProgramSelection) -> None: ...

    def setHighlightProvider(self, __a0: ghidra.app.util.ListingHighlightProvider, __a1: ghidra.program.model.listing.Program) -> None: ...

    def setIntraGroupPosition(self, __a0: docking.WindowPosition) -> None: ...

    def setMemento(self, __a0: ghidra.app.nav.LocationMemento) -> None: ...

    def setNorthComponent(self, __a0: javax.swing.JComponent) -> None: ...

    def setPanel(self, __a0: ghidra.app.util.viewer.listingpanel.ListingPanel) -> None: ...

    def setSelection(self, __a0: ghidra.program.util.ProgramSelection) -> None: ...

    def setStringSelection(self, __a0: unicode) -> None: ...

    def setSubTitle(self, __a0: unicode) -> None: ...

    def setTabText(self, __a0: unicode) -> None: ...

    def setTitle(self, __a0: unicode) -> None: ...

    def setTrackingSpec(self, __a0: ghidra.debug.api.action.LocationTrackingSpec) -> None: ...

    def setView(self, __a0: ghidra.program.model.address.AddressSetView) -> None: ...

    def setVisible(self, __a0: bool) -> None: ...

    def stateChanged(self, __a0: javax.swing.event.ChangeEvent) -> None: ...

    def staticProgramActivated(self, __a0: ghidra.program.model.listing.Program) -> None: ...

    def staticProgramLocationChanged(self, __a0: ghidra.program.util.ProgramLocation) -> None: ...

    def staticProgramSelectionChanged(self, __a0: ghidra.program.model.listing.Program, __a1: ghidra.program.util.ProgramSelection) -> None: ...

    def supportsHighlight(self) -> bool: ...

    def supportsMarkers(self) -> bool: ...

    def toFront(self) -> None: ...

    def toString(self) -> unicode: ...

    def traceClosed(self, __a0: ghidra.trace.model.Trace) -> None: ...

    def undoDragUnderFeedback(self) -> None: ...

    def updateHighlightProvider(self) -> None: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def writeDataState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    @property
    def autoDisassemble(self) -> bool: ...

    @autoDisassemble.setter
    def autoDisassemble(self, value: bool) -> None: ...

    @property
    def autoReadMemorySpec(self) -> ghidra.app.plugin.core.debug.gui.action.AutoReadMemorySpec: ...

    @autoReadMemorySpec.setter
    def autoReadMemorySpec(self, value: ghidra.app.plugin.core.debug.gui.action.AutoReadMemorySpec) -> None: ...

    @property
    def autoSyncCursorWithStaticListing(self) -> None: ...  # No getter available.

    @autoSyncCursorWithStaticListing.setter
    def autoSyncCursorWithStaticListing(self, value: bool) -> None: ...

    @property
    def autoSyncSelectionWithStaticListing(self) -> None: ...  # No getter available.

    @autoSyncSelectionWithStaticListing.setter
    def autoSyncSelectionWithStaticListing(self, value: bool) -> None: ...

    @property
    def connected(self) -> bool: ...

    @property
    def dynamic(self) -> bool: ...

    @property
    def followsCurrentThread(self) -> bool: ...

    @followsCurrentThread.setter
    def followsCurrentThread(self, value: bool) -> None: ...

    @property
    def icon(self) -> javax.swing.Icon: ...

    @property
    def mainListing(self) -> bool: ...

    @property
    def readOnly(self) -> bool: ...

    @property
    def trackingSpec(self) -> ghidra.debug.api.action.LocationTrackingSpec: ...

    @trackingSpec.setter
    def trackingSpec(self, value: ghidra.debug.api.action.LocationTrackingSpec) -> None: ...

    @property
    def windowGroup(self) -> unicode: ...