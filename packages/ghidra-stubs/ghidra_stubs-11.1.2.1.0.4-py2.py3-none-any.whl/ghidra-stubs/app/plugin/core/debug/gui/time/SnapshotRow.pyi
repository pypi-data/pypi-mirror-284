from typing import overload
import ghidra.trace.model.time
import java.lang


class SnapshotRow(object):




    def __init__(self, __a0: ghidra.trace.model.Trace, __a1: ghidra.trace.model.time.TraceSnapshot): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getDescription(self) -> unicode: ...

    def getEventThreadName(self) -> unicode: ...

    def getSchedule(self) -> unicode: ...

    def getSnap(self) -> long: ...

    def getSnapshot(self) -> ghidra.trace.model.time.TraceSnapshot: ...

    def getTimeStamp(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setDescription(self, __a0: unicode) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def description(self) -> unicode: ...

    @description.setter
    def description(self, value: unicode) -> None: ...

    @property
    def eventThreadName(self) -> unicode: ...

    @property
    def schedule(self) -> unicode: ...

    @property
    def snap(self) -> long: ...

    @property
    def snapshot(self) -> ghidra.trace.model.time.TraceSnapshot: ...

    @property
    def timeStamp(self) -> unicode: ...