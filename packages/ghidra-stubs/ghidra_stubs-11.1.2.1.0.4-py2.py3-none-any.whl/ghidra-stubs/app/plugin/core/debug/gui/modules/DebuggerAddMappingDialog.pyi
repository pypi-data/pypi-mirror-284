from typing import overload
import docking
import docking.action
import ghidra.app.services
import ghidra.program.model.address
import ghidra.program.model.listing
import ghidra.trace.model
import ghidra.util
import ghidra.util.task
import java.awt
import java.awt.event
import java.lang
import java.util
import javax.swing


class DebuggerAddMappingDialog(docking.ReusableDialogComponentProvider):




    def __init__(self): ...



    def addAction(self, __a0: docking.action.DockingActionIf) -> None: ...

    def clearStatusText(self) -> None: ...

    def close(self) -> None: ...

    def dispose(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getActionContext(self, __a0: java.awt.event.MouseEvent) -> docking.ActionContext: ...

    def getActions(self) -> java.util.Set: ...

    def getBackground(self) -> java.awt.Color: ...

    def getClass(self) -> java.lang.Class: ...

    def getComponent(self) -> javax.swing.JComponent: ...

    def getDefaultButton(self) -> javax.swing.JButton: ...

    def getDefaultSize(self) -> java.awt.Dimension: ...

    def getFocusComponent(self) -> java.awt.Component: ...

    def getHelpLocation(self) -> ghidra.util.HelpLocation: ...

    def getId(self) -> int: ...

    def getInitialLocation(self) -> java.awt.Point: ...

    def getLength(self) -> long: ...

    def getPreferredSize(self) -> java.awt.Dimension: ...

    def getRememberLocation(self) -> bool: ...

    def getRememberSize(self) -> bool: ...

    def getStatusText(self) -> unicode: ...

    def getTitle(self) -> unicode: ...

    def getUseSharedLocation(self) -> bool: ...

    def hashCode(self) -> int: ...

    def hideTaskMonitorComponent(self) -> None: ...

    def isModal(self) -> bool: ...

    def isResizeable(self) -> bool: ...

    def isRunningTask(self) -> bool: ...

    def isShowing(self) -> bool: ...

    def isTransient(self) -> bool: ...

    def isVisible(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def removeAction(self, __a0: docking.action.DockingActionIf) -> None: ...

    def setAccessibleDescription(self, __a0: unicode) -> None: ...

    def setBackground(self, __a0: java.awt.Color) -> None: ...

    def setCursor(self, __a0: java.awt.Cursor) -> None: ...

    def setDefaultButton(self, __a0: javax.swing.JButton) -> None: ...

    def setDefaultSize(self, __a0: int, __a1: int) -> None: ...

    def setFocusComponent(self, __a0: java.awt.Component) -> None: ...

    def setHelpLocation(self, __a0: ghidra.util.HelpLocation) -> None: ...

    def setInitialLocation(self, __a0: int, __a1: int) -> None: ...

    def setMappingService(self, __a0: ghidra.app.services.DebuggerStaticMappingService) -> None: ...

    @overload
    def setMinimumSize(self, __a0: java.awt.Dimension) -> None: ...

    @overload
    def setMinimumSize(self, __a0: int, __a1: int) -> None: ...

    def setPreferredSize(self, __a0: int, __a1: int) -> None: ...

    def setProgram(self, __a0: ghidra.program.model.listing.Program) -> None: ...

    def setRememberLocation(self, __a0: bool) -> None: ...

    def setRememberSize(self, __a0: bool) -> None: ...

    def setResizable(self, __a0: bool) -> None: ...

    def setStatusJustification(self, __a0: int) -> None: ...

    @overload
    def setStatusText(self, __a0: unicode) -> None: ...

    @overload
    def setStatusText(self, __a0: unicode, __a1: ghidra.util.MessageType) -> None: ...

    @overload
    def setStatusText(self, __a0: unicode, __a1: ghidra.util.MessageType, __a2: bool) -> None: ...

    def setTitle(self, __a0: unicode) -> None: ...

    def setTrace(self, __a0: ghidra.trace.model.Trace) -> None: ...

    def setTransient(self, __a0: bool) -> None: ...

    def setUseSharedLocation(self, __a0: bool) -> None: ...

    def setValues(self, __a0: ghidra.program.model.listing.Program, __a1: ghidra.trace.model.Trace, __a2: ghidra.program.model.address.Address, __a3: ghidra.program.model.address.Address, __a4: long, __a5: ghidra.trace.model.Lifespan) -> None: ...

    def showTaskMonitorComponent(self, __a0: unicode, __a1: bool, __a2: bool) -> ghidra.util.task.TaskMonitor: ...

    def taskCancelled(self, __a0: ghidra.util.task.Task) -> None: ...

    def taskCompleted(self, __a0: ghidra.util.task.Task) -> None: ...

    def toFront(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def waitForCurrentTask(self) -> None: ...

    @property
    def length(self) -> long: ...

    @property
    def mappingService(self) -> None: ...  # No getter available.

    @mappingService.setter
    def mappingService(self, value: ghidra.app.services.DebuggerStaticMappingService) -> None: ...

    @property
    def program(self) -> None: ...  # No getter available.

    @program.setter
    def program(self, value: ghidra.program.model.listing.Program) -> None: ...

    @property
    def trace(self) -> None: ...  # No getter available.

    @trace.setter
    def trace(self, value: ghidra.trace.model.Trace) -> None: ...