from typing import List
from typing import overload
import ghidra.dbg.target
import ghidra.debug.api.model
import ghidra.program.model.lang
import java.lang
import java.util


class DefaultDebuggerRegisterMapper(object, ghidra.debug.api.model.DebuggerRegisterMapper):




    def __init__(self, __a0: ghidra.program.model.lang.CompilerSpec, __a1: ghidra.dbg.target.TargetRegisterContainer, __a2: bool): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getRegistersOnTarget(self) -> java.util.Set: ...

    def getTargetRegister(self, __a0: unicode) -> ghidra.dbg.target.TargetRegister: ...

    def getTraceRegister(self, __a0: unicode) -> ghidra.program.model.lang.Register: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def targetRegisterAdded(self, __a0: ghidra.dbg.target.TargetRegister) -> None: ...

    def targetRegisterRemoved(self, __a0: ghidra.dbg.target.TargetRegister) -> None: ...

    @overload
    def targetToTrace(self, __a0: ghidra.dbg.target.TargetRegister) -> ghidra.program.model.lang.Register: ...

    @overload
    def targetToTrace(self, __a0: java.util.Map) -> java.util.Map: ...

    @overload
    def targetToTrace(self, __a0: unicode, __a1: List[int]) -> ghidra.program.model.lang.RegisterValue: ...

    @overload
    def targetToTrace(self, __a0: ghidra.dbg.target.TargetRegister, __a1: List[int]) -> ghidra.program.model.lang.RegisterValue: ...

    def toString(self) -> unicode: ...

    @overload
    def traceToTarget(self, __a0: ghidra.program.model.lang.Register) -> ghidra.dbg.target.TargetRegister: ...

    @overload
    def traceToTarget(self, __a0: ghidra.program.model.lang.RegisterValue) -> java.util.Map.Entry: ...

    @overload
    def traceToTarget(self, __a0: java.util.Collection) -> java.util.Map: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def registersOnTarget(self) -> java.util.Set: ...