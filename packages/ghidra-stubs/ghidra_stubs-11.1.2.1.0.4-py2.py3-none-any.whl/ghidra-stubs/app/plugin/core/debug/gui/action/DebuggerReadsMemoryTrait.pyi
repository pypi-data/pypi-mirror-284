from typing import overload
import docking.action
import docking.menu
import ghidra.app.plugin.core.debug.gui.action
import ghidra.app.util.viewer.listingpanel
import ghidra.debug.api.tracemgr
import ghidra.framework.options
import ghidra.program.model.address
import java.lang


class DebuggerReadsMemoryTrait(object):




    def __init__(self, __a0: ghidra.framework.plugintool.PluginTool, __a1: ghidra.framework.plugintool.Plugin, __a2: docking.ComponentProvider): ...



    def equals(self, __a0: object) -> bool: ...

    def getAutoSpec(self) -> ghidra.app.plugin.core.debug.gui.action.AutoReadMemorySpec: ...

    def getClass(self) -> java.lang.Class: ...

    def getDisplayListener(self) -> ghidra.app.util.viewer.listingpanel.AddressSetDisplayListener: ...

    def getVisible(self) -> ghidra.program.model.address.AddressSetView: ...

    def goToCoordinates(self, __a0: ghidra.debug.api.tracemgr.DebuggerCoordinates) -> None: ...

    def hashCode(self) -> int: ...

    def installAutoReadAction(self) -> docking.menu.MultiStateDockingAction: ...

    def installRefreshSelectedAction(self) -> docking.action.DockingAction: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def readConfigState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    def setAutoSpec(self, __a0: ghidra.app.plugin.core.debug.gui.action.AutoReadMemorySpec) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def writeConfigState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    @property
    def autoSpec(self) -> ghidra.app.plugin.core.debug.gui.action.AutoReadMemorySpec: ...

    @autoSpec.setter
    def autoSpec(self, value: ghidra.app.plugin.core.debug.gui.action.AutoReadMemorySpec) -> None: ...

    @property
    def displayListener(self) -> ghidra.app.util.viewer.listingpanel.AddressSetDisplayListener: ...

    @property
    def visible(self) -> ghidra.program.model.address.AddressSetView: ...