from typing import List
from typing import overload
import ghidra.app.services
import ghidra.program.model.listing
import java.lang
import java.util
import javax.swing


class MemviewTable(object):
    ICON_TABLE: javax.swing.Icon



    def __init__(self, __a0: ghidra.app.plugin.core.debug.gui.memview.MemviewProvider): ...



    def addBoxes(self, __a0: java.util.Collection) -> None: ...

    def applyFilter(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getBoxes(self) -> List[object]: ...

    def getClass(self) -> java.lang.Class: ...

    def getComponent(self) -> javax.swing.JComponent: ...

    def getPrincipalComponent(self) -> javax.swing.JComponent: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def reset(self) -> None: ...

    def setBoxes(self, __a0: java.util.Collection) -> None: ...

    def setListingService(self, __a0: ghidra.app.services.DebuggerListingService) -> None: ...

    def setProgram(self, __a0: ghidra.program.model.listing.Program) -> None: ...

    def setSelection(self, __a0: java.util.Set) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def boxes(self) -> List[object]: ...

    @property
    def component(self) -> javax.swing.JComponent: ...

    @property
    def listingService(self) -> None: ...  # No getter available.

    @listingService.setter
    def listingService(self, value: ghidra.app.services.DebuggerListingService) -> None: ...

    @property
    def principalComponent(self) -> javax.swing.JComponent: ...

    @property
    def program(self) -> None: ...  # No getter available.

    @program.setter
    def program(self, value: ghidra.program.model.listing.Program) -> None: ...

    @property
    def selection(self) -> None: ...  # No getter available.

    @selection.setter
    def selection(self, value: java.util.Set) -> None: ...