from typing import List
from typing import overload
import ghidra.app.plugin.core.interpreter
import ghidra.dbg.target
import ghidra.debug.api.interpreter
import java.io
import java.lang
import javax.swing


class AbstractDebuggerWrappedConsoleConnection(object, ghidra.debug.api.interpreter.DebuggerInterpreterConnection):




    def __init__(self, __a0: ghidra.app.plugin.core.debug.gui.interpreters.DebuggerInterpreterPlugin, __a1: ghidra.dbg.target.TargetObject): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    @overload
    def getCompletions(self, __a0: unicode) -> List[object]: ...

    @overload
    def getCompletions(self, __a0: unicode, __a1: int) -> List[object]: ...

    def getIcon(self) -> javax.swing.Icon: ...

    def getInterpreterConsole(self) -> ghidra.app.plugin.core.interpreter.InterpreterConsole: ...

    def getTargetConsole(self) -> ghidra.dbg.target.TargetObject: ...

    def getTitle(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def isPinned(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def runInBackground(self) -> None: ...

    def setConsole(self, __a0: ghidra.app.plugin.core.interpreter.InterpreterConsole) -> None: ...

    def setPinned(self, __a0: bool) -> None: ...

    def setStdErr(self, __a0: java.io.OutputStream) -> None: ...

    def setStdIn(self, __a0: java.io.InputStream) -> None: ...

    def setStdOut(self, __a0: java.io.OutputStream) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def console(self) -> None: ...  # No getter available.

    @console.setter
    def console(self, value: ghidra.app.plugin.core.interpreter.InterpreterConsole) -> None: ...

    @property
    def icon(self) -> javax.swing.Icon: ...

    @property
    def interpreterConsole(self) -> ghidra.app.plugin.core.interpreter.InterpreterConsole: ...

    @property
    def pinned(self) -> bool: ...

    @pinned.setter
    def pinned(self, value: bool) -> None: ...

    @property
    def stdErr(self) -> None: ...  # No getter available.

    @stdErr.setter
    def stdErr(self, value: java.io.OutputStream) -> None: ...

    @property
    def stdIn(self) -> None: ...  # No getter available.

    @stdIn.setter
    def stdIn(self, value: java.io.InputStream) -> None: ...

    @property
    def stdOut(self) -> None: ...  # No getter available.

    @stdOut.setter
    def stdOut(self, value: java.io.OutputStream) -> None: ...

    @property
    def targetConsole(self) -> ghidra.dbg.target.TargetObject: ...

    @property
    def title(self) -> unicode: ...