from typing import overload
import ghidra.app.plugin.core.debug.gui.model
import java.awt
import java.lang
import javax.swing
import javax.swing.tree


class ColorsModified(object):





    class InTree(ghidra.app.plugin.core.debug.gui.model.ColorsModified, javax.swing.tree.TreeCellRenderer, object):








        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def getDiffForeground(self, __a0: javax.swing.JComponent) -> java.awt.Color: ...

        def getDiffSelForeground(self, __a0: javax.swing.JComponent) -> java.awt.Color: ...

        @overload
        def getForeground(self, __a0: javax.swing.JTree) -> java.awt.Color: ...

        @overload
        def getForeground(self, __a0: javax.swing.JComponent) -> java.awt.Color: ...

        def getForegroundFor(self, __a0: javax.swing.JComponent, __a1: bool, __a2: bool) -> java.awt.Color: ...

        @overload
        def getSelForeground(self, __a0: javax.swing.JTree) -> java.awt.Color: ...

        @overload
        def getSelForeground(self, __a0: javax.swing.JComponent) -> java.awt.Color: ...

        def getTextNonSelectionColor(self) -> java.awt.Color: ...

        def getTextSelectionColor(self) -> java.awt.Color: ...

        def getTreeCellRendererComponent(self, __a0: javax.swing.JTree, __a1: object, __a2: bool, __a3: bool, __a4: bool, __a5: int, __a6: bool) -> java.awt.Component: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...

        @property
        def textNonSelectionColor(self) -> java.awt.Color: ...

        @property
        def textSelectionColor(self) -> java.awt.Color: ...




    class InTable(ghidra.app.plugin.core.debug.gui.model.ColorsModified, object):








        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def getDiffForeground(self, __a0: javax.swing.JComponent) -> java.awt.Color: ...

        def getDiffSelForeground(self, __a0: javax.swing.JComponent) -> java.awt.Color: ...

        @overload
        def getForeground(self, __a0: javax.swing.JTable) -> java.awt.Color: ...

        @overload
        def getForeground(self, __a0: javax.swing.JComponent) -> java.awt.Color: ...

        def getForegroundFor(self, __a0: javax.swing.JComponent, __a1: bool, __a2: bool) -> java.awt.Color: ...

        @overload
        def getSelForeground(self, __a0: javax.swing.JTable) -> java.awt.Color: ...

        @overload
        def getSelForeground(self, __a0: javax.swing.JComponent) -> java.awt.Color: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...







    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getDiffForeground(self, __a0: javax.swing.JComponent) -> java.awt.Color: ...

    def getDiffSelForeground(self, __a0: javax.swing.JComponent) -> java.awt.Color: ...

    def getForeground(self, __a0: javax.swing.JComponent) -> java.awt.Color: ...

    def getForegroundFor(self, __a0: javax.swing.JComponent, __a1: bool, __a2: bool) -> java.awt.Color: ...

    def getSelForeground(self, __a0: javax.swing.JComponent) -> java.awt.Color: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

