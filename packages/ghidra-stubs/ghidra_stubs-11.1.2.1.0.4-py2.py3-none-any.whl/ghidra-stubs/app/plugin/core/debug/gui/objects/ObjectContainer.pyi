from typing import List
from typing import overload
import ghidra.app.plugin.core.debug.gui.objects
import ghidra.dbg
import ghidra.dbg.target
import java.lang
import java.util
import java.util.concurrent
import org.jdom


class ObjectContainer(object, java.lang.Comparable):
    linkKey: unicode



    def __init__(self, __a0: ghidra.dbg.target.TargetObject, __a1: unicode): ...



    def augmentAttributes(self, __a0: java.util.Collection, __a1: java.util.Map) -> None: ...

    def augmentElements(self, __a0: java.util.Collection, __a1: java.util.Map) -> None: ...

    @staticmethod
    def clone(__a0: ghidra.app.plugin.core.debug.gui.objects.ObjectContainer) -> ghidra.app.plugin.core.debug.gui.objects.ObjectContainer: ...

    @overload
    def compareTo(self, __a0: ghidra.app.plugin.core.debug.gui.objects.ObjectContainer) -> int: ...

    @overload
    def compareTo(self, __a0: object) -> int: ...

    def equals(self, __a0: object) -> bool: ...

    def getAttributeMap(self) -> java.util.Map: ...

    def getClass(self) -> java.lang.Class: ...

    def getCurrentChildren(self) -> java.util.Set: ...

    def getDecoratedName(self) -> unicode: ...

    def getElementMap(self) -> java.util.Map: ...

    def getName(self) -> unicode: ...

    def getOffspring(self, __a0: ghidra.dbg.DebuggerObjectModel.RefreshBehavior) -> java.util.concurrent.CompletableFuture: ...

    def getOrder(self) -> unicode: ...

    def getParent(self) -> ghidra.app.plugin.core.debug.gui.objects.ObjectContainer: ...

    def getPrefixedName(self) -> unicode: ...

    def getProvider(self) -> ghidra.app.plugin.core.debug.gui.objects.DebuggerObjectsProvider: ...

    def getShortName(self) -> unicode: ...

    def getSubContainer(self, __a0: ghidra.dbg.target.TargetObject) -> ghidra.app.plugin.core.debug.gui.objects.ObjectContainer: ...

    def getTargetObject(self) -> ghidra.dbg.target.TargetObject: ...

    def getTreePath(self) -> unicode: ...

    def hasElements(self) -> bool: ...

    def hashCode(self) -> int: ...

    def isFocused(self) -> bool: ...

    def isImmutable(self) -> bool: ...

    def isLink(self) -> bool: ...

    def isModified(self) -> bool: ...

    def isSubscribed(self) -> bool: ...

    def isVisible(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def propagateProvider(self, __a0: ghidra.app.plugin.core.debug.gui.objects.DebuggerObjectsProvider) -> None: ...

    def rebuildContainers(self, __a0: java.util.Map, __a1: java.util.Map) -> None: ...

    def setCurrentChildren(self, __a0: java.util.Set) -> None: ...

    def setImmutable(self, __a0: bool) -> None: ...

    def setTargetObject(self, __a0: ghidra.dbg.target.TargetObject) -> None: ...

    def setTreePath(self, __a0: unicode) -> None: ...

    def setUseSort(self, __a0: bool) -> None: ...

    def setVisible(self, __a0: bool) -> None: ...

    def subscribe(self) -> None: ...

    def toString(self) -> unicode: ...

    def toXml(self) -> org.jdom.Element: ...

    def unsubscribe(self) -> None: ...

    def updateMap(self, __a0: java.util.Map, __a1: List[object], __a2: java.util.Map) -> java.util.Map: ...

    def updateUsing(self, __a0: ghidra.app.plugin.core.debug.gui.objects.ObjectContainer) -> None: ...

    def useSort(self) -> bool: ...

    @staticmethod
    def visibleByDefault(__a0: unicode) -> bool: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def attributeMap(self) -> java.util.Map: ...

    @property
    def currentChildren(self) -> java.util.Set: ...

    @currentChildren.setter
    def currentChildren(self, value: java.util.Set) -> None: ...

    @property
    def decoratedName(self) -> unicode: ...

    @property
    def elementMap(self) -> java.util.Map: ...

    @property
    def focused(self) -> bool: ...

    @property
    def immutable(self) -> bool: ...

    @immutable.setter
    def immutable(self, value: bool) -> None: ...

    @property
    def link(self) -> bool: ...

    @property
    def modified(self) -> bool: ...

    @property
    def name(self) -> unicode: ...

    @property
    def order(self) -> unicode: ...

    @property
    def parent(self) -> ghidra.app.plugin.core.debug.gui.objects.ObjectContainer: ...

    @property
    def prefixedName(self) -> unicode: ...

    @property
    def provider(self) -> ghidra.app.plugin.core.debug.gui.objects.DebuggerObjectsProvider: ...

    @property
    def shortName(self) -> unicode: ...

    @property
    def subscribed(self) -> bool: ...

    @property
    def targetObject(self) -> ghidra.dbg.target.TargetObject: ...

    @targetObject.setter
    def targetObject(self, value: ghidra.dbg.target.TargetObject) -> None: ...

    @property
    def treePath(self) -> unicode: ...

    @treePath.setter
    def treePath(self, value: unicode) -> None: ...

    @property
    def visible(self) -> bool: ...

    @visible.setter
    def visible(self, value: bool) -> None: ...