from typing import List
from typing import overload
import docking
import docking.action
import docking.widgets.table
import ghidra.app.plugin.core.debug.mapping
import ghidra.docking.settings
import ghidra.program.model.lang
import ghidra.util
import ghidra.util.task
import java.awt
import java.awt.dnd
import java.awt.event
import java.awt.im
import java.awt.image
import java.beans
import java.io
import java.lang
import java.util
import java.util.function
import javax.accessibility
import javax.swing
import javax.swing.border
import javax.swing.event
import javax.swing.plaf
import javax.swing.table


class DebuggerSelectPlatformOfferDialog(docking.DialogComponentProvider):





    class OfferTableModel(docking.widgets.table.DefaultEnumeratedColumnTableModel):




        def __init__(self, __a0: ghidra.framework.plugintool.PluginTool): ...



        def add(self, __a0: object) -> None: ...

        def addAll(self, __a0: java.util.Collection) -> None: ...

        def addSortListener(self, __a0: docking.widgets.table.SortListener) -> None: ...

        def addTableModelListener(self, __a0: javax.swing.event.TableModelListener) -> None: ...

        def clear(self) -> None: ...

        def defaultSortOrder(self) -> List[object]: ...

        def delete(self, __a0: object) -> None: ...

        def deleteWith(self, __a0: java.util.function.Predicate) -> List[object]: ...

        def dispose(self) -> None: ...

        def equals(self, __a0: object) -> bool: ...

        def findColumn(self, __a0: unicode) -> int: ...

        def findFirst(self, __a0: java.util.function.Predicate) -> object: ...

        def fireTableCellUpdated(self, __a0: int, __a1: int) -> None: ...

        def fireTableChanged(self, __a0: javax.swing.event.TableModelEvent) -> None: ...

        def fireTableDataChanged(self) -> None: ...

        def fireTableRowsDeleted(self, __a0: int, __a1: int) -> None: ...

        def fireTableRowsInserted(self, __a0: int, __a1: int) -> None: ...

        def fireTableRowsUpdated(self, __a0: int, __a1: int) -> None: ...

        def fireTableStructureChanged(self) -> None: ...

        @staticmethod
        def from(__a0: javax.swing.table.TableModel) -> docking.widgets.table.VariableColumnTableModel: ...

        def getClass(self) -> java.lang.Class: ...

        def getColumn(self, __a0: int) -> docking.widgets.table.DynamicTableColumn: ...

        def getColumnClass(self, __a0: int) -> java.lang.Class: ...

        def getColumnCount(self) -> int: ...

        def getColumnDescription(self, __a0: int) -> unicode: ...

        def getColumnDisplayName(self, __a0: int) -> unicode: ...

        @overload
        def getColumnIndex(self, __a0: docking.widgets.table.DynamicTableColumn) -> int: ...

        @overload
        def getColumnIndex(self, __a0: java.lang.Class) -> int: ...

        def getColumnName(self, __a0: int) -> unicode: ...

        def getColumnSettings(self, __a0: int) -> ghidra.docking.settings.Settings: ...

        def getColumnSettingsDefinitions(self, __a0: int) -> List[ghidra.docking.settings.SettingsDefinition]: ...

        def getColumnValueForRow(self, __a0: object, __a1: int) -> object: ...

        def getDataSource(self) -> object: ...

        def getDefaultColumnCount(self) -> int: ...

        def getHeaderRenderer(self, __a0: int) -> javax.swing.table.TableCellRenderer: ...

        def getLastSelectedObjects(self) -> List[object]: ...

        def getListeners(self, __a0: java.lang.Class) -> List[java.util.EventListener]: ...

        def getMaxLines(self, __a0: int) -> int: ...

        def getModelData(self) -> List[object]: ...

        def getName(self) -> unicode: ...

        def getPendingSortState(self) -> docking.widgets.table.TableSortState: ...

        def getPreferredColumnWidth(self, __a0: int) -> int: ...

        def getPrimarySortColumnIndex(self) -> int: ...

        def getRenderer(self, __a0: int) -> javax.swing.table.TableCellRenderer: ...

        def getRowCount(self) -> int: ...

        def getRowIndex(self, __a0: object) -> int: ...

        def getRowObject(self, __a0: int) -> object: ...

        def getTableModelListeners(self) -> List[javax.swing.event.TableModelListener]: ...

        def getTableSortState(self) -> docking.widgets.table.TableSortState: ...

        def getUniqueIdentifier(self, __a0: int) -> unicode: ...

        def getValueAt(self, __a0: int, __a1: int) -> object: ...

        def hashCode(self) -> int: ...

        def isCellEditable(self, __a0: int, __a1: int) -> bool: ...

        def isDefaultColumn(self, __a0: int) -> bool: ...

        def isDisposed(self) -> bool: ...

        def isSortPending(self) -> bool: ...

        def isSortable(self, __a0: int) -> bool: ...

        def isSorted(self) -> bool: ...

        def isVisibleByDefault(self, __a0: int) -> bool: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def notifyUpdated(self, __a0: object) -> None: ...

        def notifyUpdatedWith(self, __a0: java.util.function.Predicate) -> List[object]: ...

        def refresh(self) -> None: ...

        def removeTableModelListener(self, __a0: javax.swing.event.TableModelListener) -> None: ...

        def setAllColumnSettings(self, __a0: List[ghidra.docking.settings.Settings]) -> None: ...

        def setLastSelectedObjects(self, __a0: List[object]) -> None: ...

        def setTableSortState(self, __a0: docking.widgets.table.TableSortState) -> None: ...

        def setValueAt(self, __a0: object, __a1: int, __a2: int) -> None: ...

        def stateChanged(self, __a0: javax.swing.event.ChangeEvent) -> None: ...

        def toString(self) -> unicode: ...

        @staticmethod
        def unwrap(__a0: javax.swing.table.TableModel) -> javax.swing.table.TableModel: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class OfferPanel(javax.swing.JPanel):








        def action(self, __a0: java.awt.Event, __a1: object) -> bool: ...

        @overload
        def add(self, __a0: java.awt.Component) -> java.awt.Component: ...

        @overload
        def add(self, __a0: java.awt.PopupMenu) -> None: ...

        @overload
        def add(self, __a0: java.awt.Component, __a1: int) -> java.awt.Component: ...

        @overload
        def add(self, __a0: unicode, __a1: java.awt.Component) -> java.awt.Component: ...

        @overload
        def add(self, __a0: java.awt.Component, __a1: object) -> None: ...

        @overload
        def add(self, __a0: java.awt.Component, __a1: object, __a2: int) -> None: ...

        def addAncestorListener(self, __a0: javax.swing.event.AncestorListener) -> None: ...

        def addComponentListener(self, __a0: java.awt.event.ComponentListener) -> None: ...

        def addContainerListener(self, __a0: java.awt.event.ContainerListener) -> None: ...

        def addFocusListener(self, __a0: java.awt.event.FocusListener) -> None: ...

        def addHierarchyBoundsListener(self, __a0: java.awt.event.HierarchyBoundsListener) -> None: ...

        def addHierarchyListener(self, __a0: java.awt.event.HierarchyListener) -> None: ...

        def addInputMethodListener(self, __a0: java.awt.event.InputMethodListener) -> None: ...

        def addKeyListener(self, __a0: java.awt.event.KeyListener) -> None: ...

        def addMouseListener(self, __a0: java.awt.event.MouseListener) -> None: ...

        def addMouseMotionListener(self, __a0: java.awt.event.MouseMotionListener) -> None: ...

        def addMouseWheelListener(self, __a0: java.awt.event.MouseWheelListener) -> None: ...

        def addNotify(self) -> None: ...

        @overload
        def addPropertyChangeListener(self, __a0: java.beans.PropertyChangeListener) -> None: ...

        @overload
        def addPropertyChangeListener(self, __a0: unicode, __a1: java.beans.PropertyChangeListener) -> None: ...

        def addVetoableChangeListener(self, __a0: java.beans.VetoableChangeListener) -> None: ...

        def applyComponentOrientation(self, __a0: java.awt.ComponentOrientation) -> None: ...

        def areFocusTraversalKeysSet(self, __a0: int) -> bool: ...

        @overload
        def checkImage(self, __a0: java.awt.Image, __a1: java.awt.image.ImageObserver) -> int: ...

        @overload
        def checkImage(self, __a0: java.awt.Image, __a1: int, __a2: int, __a3: java.awt.image.ImageObserver) -> int: ...

        def computeVisibleRect(self, __a0: java.awt.Rectangle) -> None: ...

        @overload
        def contains(self, __a0: java.awt.Point) -> bool: ...

        @overload
        def contains(self, __a0: int, __a1: int) -> bool: ...

        def countComponents(self) -> int: ...

        @overload
        def createImage(self, __a0: java.awt.image.ImageProducer) -> java.awt.Image: ...

        @overload
        def createImage(self, __a0: int, __a1: int) -> java.awt.Image: ...

        def createToolTip(self) -> javax.swing.JToolTip: ...

        @overload
        def createVolatileImage(self, __a0: int, __a1: int) -> java.awt.image.VolatileImage: ...

        @overload
        def createVolatileImage(self, __a0: int, __a1: int, __a2: java.awt.ImageCapabilities) -> java.awt.image.VolatileImage: ...

        def deliverEvent(self, __a0: java.awt.Event) -> None: ...

        def disable(self) -> None: ...

        def dispatchEvent(self, __a0: java.awt.AWTEvent) -> None: ...

        def doLayout(self) -> None: ...

        @overload
        def enable(self) -> None: ...

        @overload
        def enable(self, __a0: bool) -> None: ...

        def enableInputMethods(self, __a0: bool) -> None: ...

        def equals(self, __a0: object) -> bool: ...

        @overload
        def findComponentAt(self, __a0: java.awt.Point) -> java.awt.Component: ...

        @overload
        def findComponentAt(self, __a0: int, __a1: int) -> java.awt.Component: ...

        @overload
        def firePropertyChange(self, __a0: unicode, __a1: long, __a2: long) -> None: ...

        @overload
        def firePropertyChange(self, __a0: unicode, __a1: int, __a2: int) -> None: ...

        @overload
        def firePropertyChange(self, __a0: unicode, __a1: int, __a2: int) -> None: ...

        @overload
        def firePropertyChange(self, __a0: unicode, __a1: int, __a2: int) -> None: ...

        @overload
        def firePropertyChange(self, __a0: unicode, __a1: int, __a2: int) -> None: ...

        @overload
        def firePropertyChange(self, __a0: unicode, __a1: float, __a2: float) -> None: ...

        @overload
        def firePropertyChange(self, __a0: unicode, __a1: float, __a2: float) -> None: ...

        @overload
        def firePropertyChange(self, __a0: unicode, __a1: bool, __a2: bool) -> None: ...

        def getAccessibleContext(self) -> javax.accessibility.AccessibleContext: ...

        def getActionForKeyStroke(self, __a0: javax.swing.KeyStroke) -> java.awt.event.ActionListener: ...

        def getActionMap(self) -> javax.swing.ActionMap: ...

        def getAlignmentX(self) -> float: ...

        def getAlignmentY(self) -> float: ...

        def getAncestorListeners(self) -> List[javax.swing.event.AncestorListener]: ...

        def getAutoscrolls(self) -> bool: ...

        def getBackground(self) -> java.awt.Color: ...

        def getBaseline(self, __a0: int, __a1: int) -> int: ...

        def getBaselineResizeBehavior(self) -> java.awt.Component.BaselineResizeBehavior: ...

        def getBorder(self) -> javax.swing.border.Border: ...

        @overload
        def getBounds(self) -> java.awt.Rectangle: ...

        @overload
        def getBounds(self, __a0: java.awt.Rectangle) -> java.awt.Rectangle: ...

        def getClass(self) -> java.lang.Class: ...

        def getClientProperty(self, __a0: object) -> object: ...

        def getColorModel(self) -> java.awt.image.ColorModel: ...

        def getComponent(self, __a0: int) -> java.awt.Component: ...

        @overload
        def getComponentAt(self, __a0: java.awt.Point) -> java.awt.Component: ...

        @overload
        def getComponentAt(self, __a0: int, __a1: int) -> java.awt.Component: ...

        def getComponentCount(self) -> int: ...

        def getComponentListeners(self) -> List[java.awt.event.ComponentListener]: ...

        def getComponentOrientation(self) -> java.awt.ComponentOrientation: ...

        def getComponentPopupMenu(self) -> javax.swing.JPopupMenu: ...

        def getComponentZOrder(self, __a0: java.awt.Component) -> int: ...

        def getComponents(self) -> List[java.awt.Component]: ...

        def getConditionForKeyStroke(self, __a0: javax.swing.KeyStroke) -> int: ...

        def getContainerListeners(self) -> List[java.awt.event.ContainerListener]: ...

        def getCursor(self) -> java.awt.Cursor: ...

        def getDebugGraphicsOptions(self) -> int: ...

        @staticmethod
        def getDefaultLocale() -> java.util.Locale: ...

        def getDisplayedOffers(self) -> List[object]: ...

        def getDropTarget(self) -> java.awt.dnd.DropTarget: ...

        def getFocusCycleRootAncestor(self) -> java.awt.Container: ...

        def getFocusListeners(self) -> List[java.awt.event.FocusListener]: ...

        def getFocusTraversalKeys(self, __a0: int) -> java.util.Set: ...

        def getFocusTraversalKeysEnabled(self) -> bool: ...

        def getFocusTraversalPolicy(self) -> java.awt.FocusTraversalPolicy: ...

        def getFont(self) -> java.awt.Font: ...

        def getFontMetrics(self, __a0: java.awt.Font) -> java.awt.FontMetrics: ...

        def getForeground(self) -> java.awt.Color: ...

        def getGraphics(self) -> java.awt.Graphics: ...

        def getGraphicsConfiguration(self) -> java.awt.GraphicsConfiguration: ...

        def getHeight(self) -> int: ...

        def getHierarchyBoundsListeners(self) -> List[java.awt.event.HierarchyBoundsListener]: ...

        def getHierarchyListeners(self) -> List[java.awt.event.HierarchyListener]: ...

        def getIgnoreRepaint(self) -> bool: ...

        def getInheritsPopupMenu(self) -> bool: ...

        def getInputContext(self) -> java.awt.im.InputContext: ...

        @overload
        def getInputMap(self) -> javax.swing.InputMap: ...

        @overload
        def getInputMap(self, __a0: int) -> javax.swing.InputMap: ...

        def getInputMethodListeners(self) -> List[java.awt.event.InputMethodListener]: ...

        def getInputMethodRequests(self) -> java.awt.im.InputMethodRequests: ...

        def getInputVerifier(self) -> javax.swing.InputVerifier: ...

        @overload
        def getInsets(self) -> java.awt.Insets: ...

        @overload
        def getInsets(self, __a0: java.awt.Insets) -> java.awt.Insets: ...

        def getKeyListeners(self) -> List[java.awt.event.KeyListener]: ...

        def getLayout(self) -> java.awt.LayoutManager: ...

        def getListeners(self, __a0: java.lang.Class) -> List[java.util.EventListener]: ...

        def getLocale(self) -> java.util.Locale: ...

        @overload
        def getLocation(self) -> java.awt.Point: ...

        @overload
        def getLocation(self, __a0: java.awt.Point) -> java.awt.Point: ...

        def getLocationOnScreen(self) -> java.awt.Point: ...

        def getMaximumSize(self) -> java.awt.Dimension: ...

        def getMinimumSize(self) -> java.awt.Dimension: ...

        def getMouseListeners(self) -> List[java.awt.event.MouseListener]: ...

        def getMouseMotionListeners(self) -> List[java.awt.event.MouseMotionListener]: ...

        @overload
        def getMousePosition(self) -> java.awt.Point: ...

        @overload
        def getMousePosition(self, __a0: bool) -> java.awt.Point: ...

        def getMouseWheelListeners(self) -> List[java.awt.event.MouseWheelListener]: ...

        def getName(self) -> unicode: ...

        def getNextFocusableComponent(self) -> java.awt.Component: ...

        def getParent(self) -> java.awt.Container: ...

        def getPopupLocation(self, __a0: java.awt.event.MouseEvent) -> java.awt.Point: ...

        def getPreferredSize(self) -> java.awt.Dimension: ...

        @overload
        def getPropertyChangeListeners(self) -> List[java.beans.PropertyChangeListener]: ...

        @overload
        def getPropertyChangeListeners(self, __a0: unicode) -> List[java.beans.PropertyChangeListener]: ...

        def getRegisteredKeyStrokes(self) -> List[javax.swing.KeyStroke]: ...

        def getRootPane(self) -> javax.swing.JRootPane: ...

        def getSelectedOffer(self) -> ghidra.app.plugin.core.debug.mapping.DebuggerPlatformOffer: ...

        @overload
        def getSize(self) -> java.awt.Dimension: ...

        @overload
        def getSize(self, __a0: java.awt.Dimension) -> java.awt.Dimension: ...

        def getToolTipLocation(self, __a0: java.awt.event.MouseEvent) -> java.awt.Point: ...

        @overload
        def getToolTipText(self) -> unicode: ...

        @overload
        def getToolTipText(self, __a0: java.awt.event.MouseEvent) -> unicode: ...

        def getToolkit(self) -> java.awt.Toolkit: ...

        def getTopLevelAncestor(self) -> java.awt.Container: ...

        def getTransferHandler(self) -> javax.swing.TransferHandler: ...

        def getTreeLock(self) -> object: ...

        def getUI(self) -> javax.swing.plaf.ComponentUI: ...

        def getUIClassID(self) -> unicode: ...

        def getVerifyInputWhenFocusTarget(self) -> bool: ...

        def getVetoableChangeListeners(self) -> List[java.beans.VetoableChangeListener]: ...

        def getVisibleRect(self) -> java.awt.Rectangle: ...

        def getWidth(self) -> int: ...

        def getX(self) -> int: ...

        def getY(self) -> int: ...

        def gotFocus(self, __a0: java.awt.Event, __a1: object) -> bool: ...

        def grabFocus(self) -> None: ...

        def handleEvent(self, __a0: java.awt.Event) -> bool: ...

        def hasFocus(self) -> bool: ...

        def hashCode(self) -> int: ...

        def hide(self) -> None: ...

        def imageUpdate(self, __a0: java.awt.Image, __a1: int, __a2: int, __a3: int, __a4: int, __a5: int) -> bool: ...

        def inside(self, __a0: int, __a1: int) -> bool: ...

        def invalidate(self) -> None: ...

        def isAncestorOf(self, __a0: java.awt.Component) -> bool: ...

        def isBackgroundSet(self) -> bool: ...

        def isCursorSet(self) -> bool: ...

        def isDisplayable(self) -> bool: ...

        def isDoubleBuffered(self) -> bool: ...

        def isEnabled(self) -> bool: ...

        @overload
        def isFocusCycleRoot(self) -> bool: ...

        @overload
        def isFocusCycleRoot(self, __a0: java.awt.Container) -> bool: ...

        def isFocusOwner(self) -> bool: ...

        def isFocusTraversable(self) -> bool: ...

        def isFocusTraversalPolicyProvider(self) -> bool: ...

        def isFocusTraversalPolicySet(self) -> bool: ...

        def isFocusable(self) -> bool: ...

        def isFontSet(self) -> bool: ...

        def isForegroundSet(self) -> bool: ...

        def isLightweight(self) -> bool: ...

        @staticmethod
        def isLightweightComponent(__a0: java.awt.Component) -> bool: ...

        def isManagingFocus(self) -> bool: ...

        def isMaximumSizeSet(self) -> bool: ...

        def isMinimumSizeSet(self) -> bool: ...

        def isOpaque(self) -> bool: ...

        def isOptimizedDrawingEnabled(self) -> bool: ...

        def isPaintingForPrint(self) -> bool: ...

        def isPaintingTile(self) -> bool: ...

        def isPreferredSizeSet(self) -> bool: ...

        def isRequestFocusEnabled(self) -> bool: ...

        def isShowing(self) -> bool: ...

        def isValid(self) -> bool: ...

        def isValidateRoot(self) -> bool: ...

        def isVisible(self) -> bool: ...

        def keyDown(self, __a0: java.awt.Event, __a1: int) -> bool: ...

        def keyUp(self, __a0: java.awt.Event, __a1: int) -> bool: ...

        @overload
        def list(self) -> None: ...

        @overload
        def list(self, __a0: java.io.PrintStream) -> None: ...

        @overload
        def list(self, __a0: java.io.PrintWriter) -> None: ...

        @overload
        def list(self, __a0: java.io.PrintStream, __a1: int) -> None: ...

        @overload
        def list(self, __a0: java.io.PrintWriter, __a1: int) -> None: ...

        def locate(self, __a0: int, __a1: int) -> java.awt.Component: ...

        def location(self) -> java.awt.Point: ...

        def lostFocus(self, __a0: java.awt.Event, __a1: object) -> bool: ...

        def mouseDown(self, __a0: java.awt.Event, __a1: int, __a2: int) -> bool: ...

        def mouseDrag(self, __a0: java.awt.Event, __a1: int, __a2: int) -> bool: ...

        def mouseEnter(self, __a0: java.awt.Event, __a1: int, __a2: int) -> bool: ...

        def mouseExit(self, __a0: java.awt.Event, __a1: int, __a2: int) -> bool: ...

        def mouseMove(self, __a0: java.awt.Event, __a1: int, __a2: int) -> bool: ...

        def mouseUp(self, __a0: java.awt.Event, __a1: int, __a2: int) -> bool: ...

        def move(self, __a0: int, __a1: int) -> None: ...

        def nextFocus(self) -> None: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def paint(self, __a0: java.awt.Graphics) -> None: ...

        def paintAll(self, __a0: java.awt.Graphics) -> None: ...

        def paintComponents(self, __a0: java.awt.Graphics) -> None: ...

        @overload
        def paintImmediately(self, __a0: java.awt.Rectangle) -> None: ...

        @overload
        def paintImmediately(self, __a0: int, __a1: int, __a2: int, __a3: int) -> None: ...

        def postEvent(self, __a0: java.awt.Event) -> bool: ...

        @overload
        def prepareImage(self, __a0: java.awt.Image, __a1: java.awt.image.ImageObserver) -> bool: ...

        @overload
        def prepareImage(self, __a0: java.awt.Image, __a1: int, __a2: int, __a3: java.awt.image.ImageObserver) -> bool: ...

        def print(self, __a0: java.awt.Graphics) -> None: ...

        def printAll(self, __a0: java.awt.Graphics) -> None: ...

        def printComponents(self, __a0: java.awt.Graphics) -> None: ...

        def putClientProperty(self, __a0: object, __a1: object) -> None: ...

        @overload
        def registerKeyboardAction(self, __a0: java.awt.event.ActionListener, __a1: javax.swing.KeyStroke, __a2: int) -> None: ...

        @overload
        def registerKeyboardAction(self, __a0: java.awt.event.ActionListener, __a1: unicode, __a2: javax.swing.KeyStroke, __a3: int) -> None: ...

        @overload
        def remove(self, __a0: int) -> None: ...

        @overload
        def remove(self, __a0: java.awt.Component) -> None: ...

        @overload
        def remove(self, __a0: java.awt.MenuComponent) -> None: ...

        def removeAll(self) -> None: ...

        def removeAncestorListener(self, __a0: javax.swing.event.AncestorListener) -> None: ...

        def removeComponentListener(self, __a0: java.awt.event.ComponentListener) -> None: ...

        def removeContainerListener(self, __a0: java.awt.event.ContainerListener) -> None: ...

        def removeFocusListener(self, __a0: java.awt.event.FocusListener) -> None: ...

        def removeHierarchyBoundsListener(self, __a0: java.awt.event.HierarchyBoundsListener) -> None: ...

        def removeHierarchyListener(self, __a0: java.awt.event.HierarchyListener) -> None: ...

        def removeInputMethodListener(self, __a0: java.awt.event.InputMethodListener) -> None: ...

        def removeKeyListener(self, __a0: java.awt.event.KeyListener) -> None: ...

        def removeMouseListener(self, __a0: java.awt.event.MouseListener) -> None: ...

        def removeMouseMotionListener(self, __a0: java.awt.event.MouseMotionListener) -> None: ...

        def removeMouseWheelListener(self, __a0: java.awt.event.MouseWheelListener) -> None: ...

        def removeNotify(self) -> None: ...

        @overload
        def removePropertyChangeListener(self, __a0: java.beans.PropertyChangeListener) -> None: ...

        @overload
        def removePropertyChangeListener(self, __a0: unicode, __a1: java.beans.PropertyChangeListener) -> None: ...

        def removeVetoableChangeListener(self, __a0: java.beans.VetoableChangeListener) -> None: ...

        @overload
        def repaint(self) -> None: ...

        @overload
        def repaint(self, __a0: long) -> None: ...

        @overload
        def repaint(self, __a0: java.awt.Rectangle) -> None: ...

        @overload
        def repaint(self, __a0: int, __a1: int, __a2: int, __a3: int) -> None: ...

        @overload
        def repaint(self, __a0: long, __a1: int, __a2: int, __a3: int, __a4: int) -> None: ...

        def requestDefaultFocus(self) -> bool: ...

        @overload
        def requestFocus(self) -> None: ...

        @overload
        def requestFocus(self, __a0: bool) -> bool: ...

        @overload
        def requestFocus(self, __a0: java.awt.event.FocusEvent.Cause) -> None: ...

        @overload
        def requestFocusInWindow(self) -> bool: ...

        @overload
        def requestFocusInWindow(self, __a0: java.awt.event.FocusEvent.Cause) -> bool: ...

        def resetKeyboardActions(self) -> None: ...

        def reshape(self, __a0: int, __a1: int, __a2: int, __a3: int) -> None: ...

        @overload
        def resize(self, __a0: java.awt.Dimension) -> None: ...

        @overload
        def resize(self, __a0: int, __a1: int) -> None: ...

        def revalidate(self) -> None: ...

        def scrollRectToVisible(self, __a0: java.awt.Rectangle) -> None: ...

        def setActionMap(self, __a0: javax.swing.ActionMap) -> None: ...

        def setAlignmentX(self, __a0: float) -> None: ...

        def setAlignmentY(self, __a0: float) -> None: ...

        def setAutoscrolls(self, __a0: bool) -> None: ...

        def setBackground(self, __a0: java.awt.Color) -> None: ...

        def setBorder(self, __a0: javax.swing.border.Border) -> None: ...

        @overload
        def setBounds(self, __a0: java.awt.Rectangle) -> None: ...

        @overload
        def setBounds(self, __a0: int, __a1: int, __a2: int, __a3: int) -> None: ...

        def setComponentOrientation(self, __a0: java.awt.ComponentOrientation) -> None: ...

        def setComponentPopupMenu(self, __a0: javax.swing.JPopupMenu) -> None: ...

        def setComponentZOrder(self, __a0: java.awt.Component, __a1: int) -> None: ...

        def setCursor(self, __a0: java.awt.Cursor) -> None: ...

        def setDebugGraphicsOptions(self, __a0: int) -> None: ...

        @staticmethod
        def setDefaultLocale(__a0: java.util.Locale) -> None: ...

        def setDoubleBuffered(self, __a0: bool) -> None: ...

        def setDropTarget(self, __a0: java.awt.dnd.DropTarget) -> None: ...

        def setEnabled(self, __a0: bool) -> None: ...

        def setFilterRecommended(self, __a0: bool) -> None: ...

        def setFocusCycleRoot(self, __a0: bool) -> None: ...

        def setFocusTraversalKeys(self, __a0: int, __a1: java.util.Set) -> None: ...

        def setFocusTraversalKeysEnabled(self, __a0: bool) -> None: ...

        def setFocusTraversalPolicy(self, __a0: java.awt.FocusTraversalPolicy) -> None: ...

        def setFocusTraversalPolicyProvider(self, __a0: bool) -> None: ...

        def setFocusable(self, __a0: bool) -> None: ...

        def setFont(self, __a0: java.awt.Font) -> None: ...

        def setForeground(self, __a0: java.awt.Color) -> None: ...

        def setIgnoreRepaint(self, __a0: bool) -> None: ...

        def setInheritsPopupMenu(self, __a0: bool) -> None: ...

        def setInputMap(self, __a0: int, __a1: javax.swing.InputMap) -> None: ...

        def setInputVerifier(self, __a0: javax.swing.InputVerifier) -> None: ...

        def setLayout(self, __a0: java.awt.LayoutManager) -> None: ...

        def setLocale(self, __a0: java.util.Locale) -> None: ...

        @overload
        def setLocation(self, __a0: java.awt.Point) -> None: ...

        @overload
        def setLocation(self, __a0: int, __a1: int) -> None: ...

        def setMaximumSize(self, __a0: java.awt.Dimension) -> None: ...

        def setMinimumSize(self, __a0: java.awt.Dimension) -> None: ...

        def setMixingCutoutShape(self, __a0: java.awt.Shape) -> None: ...

        def setName(self, __a0: unicode) -> None: ...

        def setNextFocusableComponent(self, __a0: java.awt.Component) -> None: ...

        def setOffers(self, __a0: java.util.Collection) -> None: ...

        def setOpaque(self, __a0: bool) -> None: ...

        def setPreferredIDs(self, __a0: ghidra.program.model.lang.LanguageID, __a1: ghidra.program.model.lang.CompilerSpecID) -> None: ...

        def setPreferredSize(self, __a0: java.awt.Dimension) -> None: ...

        def setRequestFocusEnabled(self, __a0: bool) -> None: ...

        def setSelectedOffer(self, __a0: ghidra.app.plugin.core.debug.mapping.DebuggerPlatformOffer) -> None: ...

        @overload
        def setSize(self, __a0: java.awt.Dimension) -> None: ...

        @overload
        def setSize(self, __a0: int, __a1: int) -> None: ...

        def setToolTipText(self, __a0: unicode) -> None: ...

        def setTransferHandler(self, __a0: javax.swing.TransferHandler) -> None: ...

        def setUI(self, __a0: javax.swing.plaf.PanelUI) -> None: ...

        def setVerifyInputWhenFocusTarget(self, __a0: bool) -> None: ...

        def setVisible(self, __a0: bool) -> None: ...

        @overload
        def show(self) -> None: ...

        @overload
        def show(self, __a0: bool) -> None: ...

        def toString(self) -> unicode: ...

        def transferFocus(self) -> None: ...

        def transferFocusBackward(self) -> None: ...

        def transferFocusDownCycle(self) -> None: ...

        def transferFocusUpCycle(self) -> None: ...

        def unregisterKeyboardAction(self, __a0: javax.swing.KeyStroke) -> None: ...

        def update(self, __a0: java.awt.Graphics) -> None: ...

        def updateUI(self) -> None: ...

        def validate(self) -> None: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...

        @property
        def displayedOffers(self) -> List[object]: ...

        @property
        def filterRecommended(self) -> None: ...  # No getter available.

        @filterRecommended.setter
        def filterRecommended(self, value: bool) -> None: ...

        @property
        def offers(self) -> None: ...  # No getter available.

        @offers.setter
        def offers(self, value: java.util.Collection) -> None: ...

        @property
        def selectedOffer(self) -> ghidra.app.plugin.core.debug.mapping.DebuggerPlatformOffer: ...

        @selectedOffer.setter
        def selectedOffer(self, value: ghidra.app.plugin.core.debug.mapping.DebuggerPlatformOffer) -> None: ...





    def addAction(self, __a0: docking.action.DockingActionIf) -> None: ...

    def clearStatusText(self) -> None: ...

    def close(self) -> None: ...

    def dispose(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getActionContext(self, __a0: java.awt.event.MouseEvent) -> docking.ActionContext: ...

    def getActions(self) -> java.util.Set: ...

    def getBackground(self) -> java.awt.Color: ...

    def getClass(self) -> java.lang.Class: ...

    def getComponent(self) -> javax.swing.JComponent: ...

    def getDefaultButton(self) -> javax.swing.JButton: ...

    def getDefaultSize(self) -> java.awt.Dimension: ...

    def getFocusComponent(self) -> java.awt.Component: ...

    def getHelpLocation(self) -> ghidra.util.HelpLocation: ...

    def getId(self) -> int: ...

    def getInitialLocation(self) -> java.awt.Point: ...

    def getPreferredSize(self) -> java.awt.Dimension: ...

    def getRememberLocation(self) -> bool: ...

    def getRememberSize(self) -> bool: ...

    def getSelectedOffer(self) -> ghidra.app.plugin.core.debug.mapping.DebuggerPlatformOffer: ...

    def getStatusText(self) -> unicode: ...

    def getTitle(self) -> unicode: ...

    def getUseSharedLocation(self) -> bool: ...

    def hashCode(self) -> int: ...

    def hideTaskMonitorComponent(self) -> None: ...

    def isCancelled(self) -> bool: ...

    def isModal(self) -> bool: ...

    def isResizeable(self) -> bool: ...

    def isRunningTask(self) -> bool: ...

    def isShowing(self) -> bool: ...

    def isTransient(self) -> bool: ...

    def isVisible(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def removeAction(self, __a0: docking.action.DockingActionIf) -> None: ...

    def setAccessibleDescription(self, __a0: unicode) -> None: ...

    def setBackground(self, __a0: java.awt.Color) -> None: ...

    def setCursor(self, __a0: java.awt.Cursor) -> None: ...

    def setDefaultButton(self, __a0: javax.swing.JButton) -> None: ...

    def setDefaultSize(self, __a0: int, __a1: int) -> None: ...

    def setFocusComponent(self, __a0: java.awt.Component) -> None: ...

    def setHelpLocation(self, __a0: ghidra.util.HelpLocation) -> None: ...

    def setInitialLocation(self, __a0: int, __a1: int) -> None: ...

    @overload
    def setMinimumSize(self, __a0: java.awt.Dimension) -> None: ...

    @overload
    def setMinimumSize(self, __a0: int, __a1: int) -> None: ...

    def setOffers(self, __a0: java.util.Collection) -> None: ...

    def setPreferredIDs(self, __a0: ghidra.program.model.lang.LanguageID, __a1: ghidra.program.model.lang.CompilerSpecID) -> None: ...

    def setPreferredSize(self, __a0: int, __a1: int) -> None: ...

    def setRememberLocation(self, __a0: bool) -> None: ...

    def setRememberSize(self, __a0: bool) -> None: ...

    def setResizable(self, __a0: bool) -> None: ...

    def setSelectedOffer(self, __a0: ghidra.app.plugin.core.debug.mapping.DebuggerPlatformOffer) -> None: ...

    def setStatusJustification(self, __a0: int) -> None: ...

    @overload
    def setStatusText(self, __a0: unicode) -> None: ...

    @overload
    def setStatusText(self, __a0: unicode, __a1: ghidra.util.MessageType) -> None: ...

    @overload
    def setStatusText(self, __a0: unicode, __a1: ghidra.util.MessageType, __a2: bool) -> None: ...

    def setTitle(self, __a0: unicode) -> None: ...

    def setTransient(self, __a0: bool) -> None: ...

    def setUseSharedLocation(self, __a0: bool) -> None: ...

    def showTaskMonitorComponent(self, __a0: unicode, __a1: bool, __a2: bool) -> ghidra.util.task.TaskMonitor: ...

    def taskCancelled(self, __a0: ghidra.util.task.Task) -> None: ...

    def taskCompleted(self, __a0: ghidra.util.task.Task) -> None: ...

    def toFront(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def waitForCurrentTask(self) -> None: ...

    @property
    def cancelled(self) -> bool: ...

    @property
    def offers(self) -> None: ...  # No getter available.

    @offers.setter
    def offers(self, value: java.util.Collection) -> None: ...

    @property
    def selectedOffer(self) -> ghidra.app.plugin.core.debug.mapping.DebuggerPlatformOffer: ...

    @selectedOffer.setter
    def selectedOffer(self, value: ghidra.app.plugin.core.debug.mapping.DebuggerPlatformOffer) -> None: ...