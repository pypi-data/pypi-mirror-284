from typing import List
from typing import overload
import docking.widgets.tree
import docking.widgets.tree.support
import ghidra.app.plugin.core.debug.gui.objects
import ghidra.app.plugin.core.debug.gui.objects.components
import ghidra.dbg.target
import ghidra.util.task
import java.lang
import java.util
import java.util.function
import java.util.stream
import javax.swing
import javax.swing.tree


class ObjectNode(docking.widgets.tree.GTreeSlowLoadingNode):




    def __init__(self, __a0: ghidra.app.plugin.core.debug.gui.objects.components.ObjectTree, __a1: ghidra.app.plugin.core.debug.gui.objects.ObjectContainer, __a2: ghidra.app.plugin.core.debug.gui.objects.ObjectContainer): ...



    @overload
    def addNode(self, __a0: docking.widgets.tree.GTreeNode) -> None: ...

    @overload
    def addNode(self, __a0: int, __a1: docking.widgets.tree.GTreeNode) -> None: ...

    def addNodes(self, __a0: List[object]) -> None: ...

    def callModified(self) -> None: ...

    def callUpdate(self) -> None: ...

    def cleanUpOldChildren(self, __a0: List[object]) -> None: ...

    def clone(self) -> object: ...

    def collapse(self) -> None: ...

    @overload
    def compareTo(self, __a0: docking.widgets.tree.GTreeNode) -> int: ...

    @overload
    def compareTo(self, __a0: object) -> int: ...

    def dispose(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def expand(self) -> None: ...

    def filter(self, __a0: docking.widgets.tree.support.GTreeFilter, __a1: ghidra.util.task.TaskMonitor) -> docking.widgets.tree.GTreeNode: ...

    def fireNodeChanged(self) -> None: ...

    def fireNodeStructureChanged(self) -> None: ...

    def generateChildren(self, __a0: ghidra.util.task.TaskMonitor) -> List[object]: ...

    @overload
    def getChild(self, __a0: int) -> docking.widgets.tree.GTreeNode: ...

    @overload
    def getChild(self, __a0: unicode) -> docking.widgets.tree.GTreeNode: ...

    @overload
    def getChild(self, __a0: unicode, __a1: java.util.function.Predicate) -> docking.widgets.tree.GTreeNode: ...

    def getChildCount(self) -> int: ...

    def getChildren(self) -> List[object]: ...

    def getClass(self) -> java.lang.Class: ...

    def getContainer(self) -> ghidra.app.plugin.core.debug.gui.objects.ObjectContainer: ...

    def getDisplayText(self) -> unicode: ...

    def getIcon(self, __a0: bool) -> javax.swing.Icon: ...

    def getIndexInParent(self) -> int: ...

    def getIndexOfChild(self, __a0: docking.widgets.tree.GTreeNode) -> int: ...

    def getLeafCount(self) -> int: ...

    def getName(self) -> unicode: ...

    def getNodeCount(self) -> int: ...

    def getParent(self) -> docking.widgets.tree.GTreeNode: ...

    def getProvider(self) -> ghidra.app.plugin.core.debug.gui.objects.DebuggerObjectsProvider: ...

    def getRoot(self) -> docking.widgets.tree.GTreeNode: ...

    def getTargetObject(self) -> ghidra.dbg.target.TargetObject: ...

    def getToolTip(self) -> unicode: ...

    def getTree(self) -> docking.widgets.tree.GTree: ...

    def getTreePath(self) -> javax.swing.tree.TreePath: ...

    def hashCode(self) -> int: ...

    def isAncestor(self, __a0: docking.widgets.tree.GTreeNode) -> bool: ...

    def isAutoExpandPermitted(self) -> bool: ...

    def isEditable(self) -> bool: ...

    def isExpanded(self) -> bool: ...

    def isInProgress(self) -> bool: ...

    def isLeaf(self) -> bool: ...

    def isLoaded(self) -> bool: ...

    def isRestructured(self) -> bool: ...

    def isRoot(self) -> bool: ...

    def isVisible(self) -> bool: ...

    def iterator(self, __a0: bool) -> java.util.Iterator: ...

    def loadAll(self, __a0: ghidra.util.task.TaskMonitor) -> int: ...

    def markCollapsed(self) -> None: ...

    def markExpanded(self) -> None: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def removeAll(self) -> None: ...

    def removeNode(self, __a0: docking.widgets.tree.GTreeNode) -> None: ...

    def setChildren(self, __a0: List[object]) -> None: ...

    def setContainer(self, __a0: ghidra.app.plugin.core.debug.gui.objects.components.ObjectTree, __a1: ghidra.app.plugin.core.debug.gui.objects.ObjectContainer, __a2: ghidra.app.plugin.core.debug.gui.objects.ObjectContainer) -> None: ...

    def setRestructured(self, __a0: bool) -> None: ...

    def stream(self, __a0: bool) -> java.util.stream.Stream: ...

    def toString(self) -> unicode: ...

    def unloadChildren(self) -> None: ...

    def valueChanged(self, __a0: object) -> None: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def container(self) -> ghidra.app.plugin.core.debug.gui.objects.ObjectContainer: ...

    @property
    def displayText(self) -> unicode: ...

    @property
    def leaf(self) -> bool: ...

    @property
    def name(self) -> unicode: ...

    @property
    def provider(self) -> ghidra.app.plugin.core.debug.gui.objects.DebuggerObjectsProvider: ...

    @property
    def restructured(self) -> bool: ...

    @restructured.setter
    def restructured(self, value: bool) -> None: ...

    @property
    def targetObject(self) -> ghidra.dbg.target.TargetObject: ...

    @property
    def toolTip(self) -> unicode: ...

    @property
    def visible(self) -> bool: ...