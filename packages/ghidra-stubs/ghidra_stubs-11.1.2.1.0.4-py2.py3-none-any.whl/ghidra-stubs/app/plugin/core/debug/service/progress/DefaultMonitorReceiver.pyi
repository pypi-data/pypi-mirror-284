from typing import overload
import ghidra.debug.api.progress
import java.lang


class DefaultMonitorReceiver(object, ghidra.debug.api.progress.MonitorReceiver):




    def __init__(self, __a0: ghidra.app.plugin.core.debug.service.progress.ProgressServicePlugin): ...



    def cancel(self) -> None: ...

    def clean(self) -> None: ...

    def close(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getMaximum(self) -> long: ...

    def getMessage(self) -> unicode: ...

    def getProgress(self) -> long: ...

    def hashCode(self) -> int: ...

    def isCancelEnabled(self) -> bool: ...

    def isCancelled(self) -> bool: ...

    def isIndeterminate(self) -> bool: ...

    def isShowProgressValue(self) -> bool: ...

    def isValid(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def cancelEnabled(self) -> bool: ...

    @property
    def cancelled(self) -> bool: ...

    @property
    def indeterminate(self) -> bool: ...

    @property
    def maximum(self) -> long: ...

    @property
    def message(self) -> unicode: ...

    @property
    def progress(self) -> long: ...

    @property
    def showProgressValue(self) -> bool: ...

    @property
    def valid(self) -> bool: ...