from typing import List
from typing import overload
import docking.widgets.table
import ghidra.app.plugin.core.debug.gui.objects.components
import java.lang
import java.util
import java.util.function
import javax.swing.event
import javax.swing.table


class ObjectEnumeratedColumnTableModel(docking.widgets.table.AbstractSortedTableModel, docking.widgets.table.EnumeratedColumnTableModel):





    class ObjectsEnumeratedTableColumn(object):








        def defaultSortDirection(self) -> docking.widgets.table.ColumnSortState.SortDirection: ...

        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def getHeader(self) -> unicode: ...

        def getValueOf(self, __a0: object) -> object: ...

        def hashCode(self) -> int: ...

        def isEditable(self, __a0: object) -> bool: ...

        def isSortable(self) -> bool: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def setValueOf(self, __a0: object, __a1: object) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...

        @property
        def header(self) -> unicode: ...

        @property
        def sortable(self) -> bool: ...

    def __init__(self, __a0: unicode, __a1: List[ghidra.app.plugin.core.debug.gui.objects.components.ObjectEnumeratedColumnTableModel.ObjectsEnumeratedTableColumn]): ...



    def add(self, __a0: object) -> None: ...

    def addAll(self, __a0: java.util.Collection) -> None: ...

    def addSortListener(self, __a0: docking.widgets.table.SortListener) -> None: ...

    def addTableModelListener(self, __a0: javax.swing.event.TableModelListener) -> None: ...

    def clear(self) -> None: ...

    def defaultSortOrder(self) -> List[object]: ...

    def delete(self, __a0: object) -> None: ...

    def deleteWith(self, __a0: java.util.function.Predicate) -> List[object]: ...

    def dispose(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def findColumn(self, __a0: unicode) -> int: ...

    def findFirst(self, __a0: java.util.function.Predicate) -> object: ...

    def fireTableCellUpdated(self, __a0: int, __a1: int) -> None: ...

    def fireTableChanged(self, __a0: javax.swing.event.TableModelEvent) -> None: ...

    def fireTableDataChanged(self) -> None: ...

    def fireTableRowsDeleted(self, __a0: int, __a1: int) -> None: ...

    def fireTableRowsInserted(self, __a0: int, __a1: int) -> None: ...

    def fireTableRowsUpdated(self, __a0: int, __a1: int) -> None: ...

    def fireTableStructureChanged(self) -> None: ...

    def getClass(self) -> java.lang.Class: ...

    def getColumnClass(self, __a0: int) -> java.lang.Class: ...

    def getColumnCount(self) -> int: ...

    def getColumnName(self, __a0: int) -> unicode: ...

    def getColumnValueForRow(self, __a0: object, __a1: int) -> object: ...

    def getLastSelectedObjects(self) -> List[object]: ...

    def getListeners(self, __a0: java.lang.Class) -> List[java.util.EventListener]: ...

    def getModelData(self) -> List[object]: ...

    def getName(self) -> unicode: ...

    def getPendingSortState(self) -> docking.widgets.table.TableSortState: ...

    def getPreferredColumnWidth(self, __a0: int) -> int: ...

    def getPrimarySortColumnIndex(self) -> int: ...

    def getRow(self, __a0: int) -> object: ...

    def getRowCount(self) -> int: ...

    def getRowIndex(self, __a0: object) -> int: ...

    def getRowObject(self, __a0: int) -> object: ...

    def getTableModelListeners(self) -> List[javax.swing.event.TableModelListener]: ...

    def getTableSortState(self) -> docking.widgets.table.TableSortState: ...

    def getValueAt(self, __a0: int, __a1: int) -> object: ...

    def hashCode(self) -> int: ...

    def isCellEditable(self, __a0: int, __a1: int) -> bool: ...

    def isDisposed(self) -> bool: ...

    def isSortPending(self) -> bool: ...

    def isSortable(self, __a0: int) -> bool: ...

    def isSorted(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def notifyUpdated(self, __a0: object) -> None: ...

    def notifyUpdatedWith(self, __a0: java.util.function.Predicate) -> List[object]: ...

    def refresh(self) -> None: ...

    def removeTableModelListener(self, __a0: javax.swing.event.TableModelListener) -> None: ...

    def setColumns(self, __a0: List[ghidra.app.plugin.core.debug.gui.objects.components.ObjectEnumeratedColumnTableModel.ObjectsEnumeratedTableColumn]) -> None: ...

    def setLastSelectedObjects(self, __a0: List[object]) -> None: ...

    def setTableSortState(self, __a0: docking.widgets.table.TableSortState) -> None: ...

    def setValueAt(self, __a0: object, __a1: int, __a2: int) -> None: ...

    def toString(self) -> unicode: ...

    @staticmethod
    def unwrap(__a0: javax.swing.table.TableModel) -> javax.swing.table.TableModel: ...

    def updateColumns(self, __a0: ghidra.app.plugin.core.debug.gui.objects.components.ObjectElementRow) -> None: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def columnCount(self) -> int: ...

    @property
    def columns(self) -> None: ...  # No getter available.

    @columns.setter
    def columns(self, value: List[ghidra.app.plugin.core.debug.gui.objects.components.ObjectEnumeratedColumnTableModel.ObjectsEnumeratedTableColumn]) -> None: ...

    @property
    def modelData(self) -> List[object]: ...

    @property
    def name(self) -> unicode: ...

    @property
    def rowCount(self) -> int: ...