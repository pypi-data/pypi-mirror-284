from typing import overload
import ghidra.app.plugin.core.debug.stack
import ghidra.program.model.address
import ghidra.program.model.lang
import java.lang


class SymStateSpace(object):




    def __init__(self): ...



    def clear(self) -> None: ...

    def dump(self, __a0: unicode, __a1: ghidra.program.model.lang.Language) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def fork(self) -> ghidra.app.plugin.core.debug.stack.SymStateSpace: ...

    def get(self, __a0: ghidra.program.model.address.Address, __a1: int, __a2: ghidra.app.plugin.core.debug.stack.SymPcodeArithmetic, __a3: ghidra.program.model.lang.Language) -> ghidra.app.plugin.core.debug.stack.Sym: ...

    def getClass(self) -> java.lang.Class: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def set(self, __a0: ghidra.program.model.address.Address, __a1: int, __a2: ghidra.app.plugin.core.debug.stack.Sym) -> None: ...

    @overload
    def toString(self) -> unicode: ...

    @overload
    def toString(self, __a0: unicode, __a1: ghidra.program.model.lang.Language) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

