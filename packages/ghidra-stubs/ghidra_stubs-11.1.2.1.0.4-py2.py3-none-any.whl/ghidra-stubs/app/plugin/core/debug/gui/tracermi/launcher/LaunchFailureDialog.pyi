from typing import List
from typing import overload
import docking
import docking.action
import docking.widgets
import ghidra.app.plugin.core.debug.gui.tracermi.launcher
import ghidra.debug.api.tracermi
import ghidra.util
import ghidra.util.task
import java.awt
import java.awt.event
import java.lang
import java.util
import javax.swing


class LaunchFailureDialog(docking.widgets.OptionDialog):





    class ErrPromptResponse(java.lang.Enum):
        KEEP: ghidra.app.plugin.core.debug.gui.tracermi.launcher.LaunchFailureDialog.ErrPromptResponse
        RETRY: ghidra.app.plugin.core.debug.gui.tracermi.launcher.LaunchFailureDialog.ErrPromptResponse
        TERMINATE: ghidra.app.plugin.core.debug.gui.tracermi.launcher.LaunchFailureDialog.ErrPromptResponse







        @overload
        def compareTo(self, __a0: java.lang.Enum) -> int: ...

        @overload
        def compareTo(self, __a0: object) -> int: ...

        def describeConstable(self) -> java.util.Optional: ...

        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def getDeclaringClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def name(self) -> unicode: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def ordinal(self) -> int: ...

        def toString(self) -> unicode: ...

        @overload
        @staticmethod
        def valueOf(__a0: unicode) -> ghidra.app.plugin.core.debug.gui.tracermi.launcher.LaunchFailureDialog.ErrPromptResponse: ...

        @overload
        @staticmethod
        def valueOf(__a0: java.lang.Class, __a1: unicode) -> java.lang.Enum: ...

        @staticmethod
        def values() -> List[ghidra.app.plugin.core.debug.gui.tracermi.launcher.LaunchFailureDialog.ErrPromptResponse]: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...







    def addAction(self, __a0: docking.action.DockingActionIf) -> None: ...

    def clearStatusText(self) -> None: ...

    def close(self) -> None: ...

    @staticmethod
    def createBuilder(__a0: unicode, __a1: unicode) -> docking.widgets.OptionDialogBuilder: ...

    def dispose(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getActionContext(self, __a0: java.awt.event.MouseEvent) -> docking.ActionContext: ...

    def getActions(self) -> java.util.Set: ...

    def getBackground(self) -> java.awt.Color: ...

    def getClass(self) -> java.lang.Class: ...

    def getComponent(self) -> javax.swing.JComponent: ...

    def getDefaultButton(self) -> javax.swing.JButton: ...

    def getDefaultSize(self) -> java.awt.Dimension: ...

    def getFocusComponent(self) -> java.awt.Component: ...

    def getHelpLocation(self) -> ghidra.util.HelpLocation: ...

    @staticmethod
    def getIconForMessageType(__a0: int) -> javax.swing.Icon: ...

    def getId(self) -> int: ...

    def getInitialLocation(self) -> java.awt.Point: ...

    def getMessage(self) -> unicode: ...

    def getPreferredSize(self) -> java.awt.Dimension: ...

    def getRememberLocation(self) -> bool: ...

    def getRememberSize(self) -> bool: ...

    def getResult(self) -> int: ...

    def getStatusText(self) -> unicode: ...

    def getTitle(self) -> unicode: ...

    def getUseSharedLocation(self) -> bool: ...

    def hashCode(self) -> int: ...

    def hideTaskMonitorComponent(self) -> None: ...

    def isModal(self) -> bool: ...

    def isResizeable(self) -> bool: ...

    def isRunningTask(self) -> bool: ...

    def isShowing(self) -> bool: ...

    def isTransient(self) -> bool: ...

    def isVisible(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def removeAction(self, __a0: docking.action.DockingActionIf) -> None: ...

    def setAccessibleDescription(self, __a0: unicode) -> None: ...

    def setBackground(self, __a0: java.awt.Color) -> None: ...

    def setCursor(self, __a0: java.awt.Cursor) -> None: ...

    def setDefaultButton(self, __a0: javax.swing.JButton) -> None: ...

    def setDefaultSize(self, __a0: int, __a1: int) -> None: ...

    def setFocusComponent(self, __a0: java.awt.Component) -> None: ...

    def setHelpLocation(self, __a0: ghidra.util.HelpLocation) -> None: ...

    def setInitialLocation(self, __a0: int, __a1: int) -> None: ...

    @overload
    def setMinimumSize(self, __a0: java.awt.Dimension) -> None: ...

    @overload
    def setMinimumSize(self, __a0: int, __a1: int) -> None: ...

    def setPreferredSize(self, __a0: int, __a1: int) -> None: ...

    def setRememberLocation(self, __a0: bool) -> None: ...

    def setRememberSize(self, __a0: bool) -> None: ...

    def setResizable(self, __a0: bool) -> None: ...

    def setStatusJustification(self, __a0: int) -> None: ...

    @overload
    def setStatusText(self, __a0: unicode) -> None: ...

    @overload
    def setStatusText(self, __a0: unicode, __a1: ghidra.util.MessageType) -> None: ...

    @overload
    def setStatusText(self, __a0: unicode, __a1: ghidra.util.MessageType, __a2: bool) -> None: ...

    def setTitle(self, __a0: unicode) -> None: ...

    def setTransient(self, __a0: bool) -> None: ...

    def setUseSharedLocation(self, __a0: bool) -> None: ...

    @overload
    def show(self) -> int: ...

    @overload
    def show(self, __a0: java.awt.Component) -> int: ...

    @overload
    @staticmethod
    def show(__a0: ghidra.debug.api.tracermi.TraceRmiLaunchOffer.LaunchResult, __a1: ghidra.util.HelpLocation) -> ghidra.app.plugin.core.debug.gui.tracermi.launcher.LaunchFailureDialog.ErrPromptResponse: ...

    @staticmethod
    def showEditableInputChoiceDialog(__a0: java.awt.Component, __a1: unicode, __a2: unicode, __a3: List[unicode], __a4: unicode, __a5: int) -> unicode: ...

    @staticmethod
    def showInputChoiceDialog(__a0: java.awt.Component, __a1: unicode, __a2: unicode, __a3: List[unicode], __a4: unicode, __a5: int) -> unicode: ...

    @staticmethod
    def showInputMultilineDialog(__a0: java.awt.Component, __a1: unicode, __a2: unicode, __a3: unicode) -> unicode: ...

    @staticmethod
    def showInputSingleLineDialog(__a0: java.awt.Component, __a1: unicode, __a2: unicode, __a3: unicode) -> unicode: ...

    @overload
    @staticmethod
    def showOptionDialog(__a0: java.awt.Component, __a1: unicode, __a2: unicode, __a3: unicode) -> int: ...

    @overload
    @staticmethod
    def showOptionDialog(__a0: java.awt.Component, __a1: unicode, __a2: unicode, __a3: unicode, __a4: int) -> int: ...

    @overload
    @staticmethod
    def showOptionDialog(__a0: java.awt.Component, __a1: unicode, __a2: unicode, __a3: unicode, __a4: unicode) -> int: ...

    @overload
    @staticmethod
    def showOptionDialog(__a0: java.awt.Component, __a1: unicode, __a2: unicode, __a3: unicode, __a4: javax.swing.Icon) -> int: ...

    @overload
    @staticmethod
    def showOptionDialog(__a0: java.awt.Component, __a1: unicode, __a2: unicode, __a3: unicode, __a4: unicode, __a5: int) -> int: ...

    @overload
    @staticmethod
    def showOptionDialog(__a0: java.awt.Component, __a1: unicode, __a2: unicode, __a3: unicode, __a4: int, __a5: unicode) -> int: ...

    @overload
    @staticmethod
    def showOptionDialog(__a0: java.awt.Component, __a1: unicode, __a2: unicode, __a3: unicode, __a4: unicode, __a5: javax.swing.Icon) -> int: ...

    @overload
    @staticmethod
    def showOptionDialog(__a0: java.awt.Component, __a1: unicode, __a2: unicode, __a3: unicode, __a4: unicode, __a5: unicode, __a6: int) -> int: ...

    @overload
    @staticmethod
    def showOptionDialogWithCancelAsDefaultButton(__a0: java.awt.Component, __a1: unicode, __a2: unicode, __a3: unicode) -> int: ...

    @overload
    @staticmethod
    def showOptionDialogWithCancelAsDefaultButton(__a0: java.awt.Component, __a1: unicode, __a2: unicode, __a3: unicode, __a4: int) -> int: ...

    @overload
    @staticmethod
    def showOptionNoCancelDialog(__a0: java.awt.Component, __a1: unicode, __a2: unicode, __a3: unicode, __a4: unicode, __a5: int) -> int: ...

    @overload
    @staticmethod
    def showOptionNoCancelDialog(__a0: java.awt.Component, __a1: unicode, __a2: unicode, __a3: unicode, __a4: unicode, __a5: javax.swing.Icon) -> int: ...

    @overload
    @staticmethod
    def showOptionNoCancelDialog(__a0: java.awt.Component, __a1: unicode, __a2: unicode, __a3: unicode, __a4: unicode, __a5: unicode, __a6: int) -> int: ...

    @overload
    @staticmethod
    def showOptionNoCancelDialog(__a0: java.awt.Component, __a1: unicode, __a2: unicode, __a3: unicode, __a4: unicode, __a5: unicode, __a6: int, __a7: ghidra.util.HelpLocation) -> int: ...

    def showTaskMonitorComponent(self, __a0: unicode, __a1: bool, __a2: bool) -> ghidra.util.task.TaskMonitor: ...

    @staticmethod
    def showYesNoCancelDialog(__a0: java.awt.Component, __a1: unicode, __a2: unicode) -> int: ...

    @staticmethod
    def showYesNoDialog(__a0: java.awt.Component, __a1: unicode, __a2: unicode) -> int: ...

    @staticmethod
    def showYesNoDialogWithNoAsDefaultButton(__a0: java.awt.Component, __a1: unicode, __a2: unicode) -> int: ...

    def taskCancelled(self, __a0: ghidra.util.task.Task) -> None: ...

    def taskCompleted(self, __a0: ghidra.util.task.Task) -> None: ...

    def toFront(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def waitForCurrentTask(self) -> None: ...

