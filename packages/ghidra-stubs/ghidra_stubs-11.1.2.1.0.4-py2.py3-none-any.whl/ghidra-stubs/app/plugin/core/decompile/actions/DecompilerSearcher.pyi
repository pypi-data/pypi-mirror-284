from typing import overload
import docking.widgets
import java.lang


class DecompilerSearcher(object, docking.widgets.FindDialogSearcher):




    def __init__(self, __a0: ghidra.app.decompiler.component.DecompilerPanel): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getCursorPosition(self) -> docking.widgets.CursorPosition: ...

    def getEnd(self) -> docking.widgets.CursorPosition: ...

    def getStart(self) -> docking.widgets.CursorPosition: ...

    def hashCode(self) -> int: ...

    def highlightSearchResults(self, __a0: docking.widgets.SearchLocation) -> None: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def search(self, __a0: unicode, __a1: docking.widgets.CursorPosition, __a2: bool, __a3: bool) -> docking.widgets.SearchLocation: ...

    def setCursorPosition(self, __a0: docking.widgets.CursorPosition) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def cursorPosition(self) -> docking.widgets.CursorPosition: ...

    @cursorPosition.setter
    def cursorPosition(self, value: docking.widgets.CursorPosition) -> None: ...

    @property
    def end(self) -> docking.widgets.CursorPosition: ...

    @property
    def start(self) -> docking.widgets.CursorPosition: ...