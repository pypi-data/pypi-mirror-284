from typing import overload
import generic.jar
import ghidra.app.plugin.core.osgi
import java.lang
import java.util
import java.util.function


class BundleMap(object):




    def __init__(self): ...



    def add(self, __a0: ghidra.app.plugin.core.osgi.GhidraBundle) -> None: ...

    def addAll(self, __a0: java.util.Collection) -> None: ...

    def computeAllIfAbsent(self, __a0: java.util.Collection, __a1: java.util.function.Function) -> java.util.Collection: ...

    def equals(self, __a0: object) -> bool: ...

    def get(self, __a0: generic.jar.ResourceFile) -> ghidra.app.plugin.core.osgi.GhidraBundle: ...

    def getBundleAtLocation(self, __a0: unicode) -> ghidra.app.plugin.core.osgi.GhidraBundle: ...

    def getBundleFiles(self) -> java.util.Collection: ...

    def getClass(self) -> java.lang.Class: ...

    def getGhidraBundles(self) -> java.util.Collection: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    @overload
    def remove(self, __a0: unicode) -> ghidra.app.plugin.core.osgi.GhidraBundle: ...

    @overload
    def remove(self, __a0: generic.jar.ResourceFile) -> ghidra.app.plugin.core.osgi.GhidraBundle: ...

    @overload
    def remove(self, __a0: ghidra.app.plugin.core.osgi.GhidraBundle) -> None: ...

    def removeAll(self, __a0: java.util.Collection) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def bundleFiles(self) -> java.util.Collection: ...

    @property
    def ghidraBundles(self) -> java.util.Collection: ...