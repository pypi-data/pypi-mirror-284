from typing import Iterator
from typing import List
from typing import overload
import docking.widgets.fieldpanel
import docking.widgets.fieldpanel.listener
import docking.widgets.fieldpanel.support
import ghidra.app.plugin.core.terminal
import ghidra.app.plugin.core.terminal.vt
import java.awt
import java.lang
import java.nio
import java.util
import java.util.function


class TerminalLayoutModel(object, docking.widgets.fieldpanel.LayoutModel, ghidra.app.plugin.core.terminal.vt.VtHandler):
    PAT_OSC_COLOR_QUERY: java.util.regex.Pattern
    PAT_OSC_WINDOW_TITLE: java.util.regex.Pattern
    Q1: List[int]
    Q1000: List[int]
    Q1004: List[int]
    Q1034: List[int]
    Q1047: List[int]
    Q1048: List[int]
    Q1049: List[int]
    Q12: List[int]
    Q2004: List[int]
    Q25: List[int]
    Q47: List[int]
    Q7: List[int]
    _4: List[int]



    def __init__(self, __a0: ghidra.app.plugin.core.terminal.TerminalPanel, __a1: java.nio.charset.Charset, __a2: java.awt.FontMetrics, __a3: ghidra.app.plugin.core.terminal.vt.AnsiColorResolver): ...

    def __iter__(self): ...

    def addLayoutModelListener(self, __a0: docking.widgets.fieldpanel.listener.LayoutModelListener) -> None: ...

    @staticmethod
    def ascii(__a0: unicode) -> List[int]: ...

    @staticmethod
    def bufEq(__a0: java.nio.ByteBuffer, __a1: List[int]) -> bool: ...

    @staticmethod
    def charInfo(__a0: int) -> unicode: ...

    def decode8BitColor(self, __a0: int) -> ghidra.app.plugin.core.terminal.vt.VtHandler.AnsiColor: ...

    def decodeColor(self, __a0: int, __a1: java.util.PrimitiveIterator.OfInt, __a2: ghidra.app.plugin.core.terminal.vt.VtHandler.Intensity) -> ghidra.app.plugin.core.terminal.vt.VtHandler.AnsiColor: ...

    def decodeExtendedColor(self, __a0: java.util.PrimitiveIterator.OfInt) -> ghidra.app.plugin.core.terminal.vt.VtHandler.AnsiColor: ...

    def equals(self, __a0: object) -> bool: ...

    def flushChanges(self) -> None: ...

    def forEach(self, __a0: java.util.function.Consumer) -> None: ...

    def getClass(self) -> java.lang.Class: ...

    def getCols(self) -> int: ...

    def getCursorColumn(self) -> int: ...

    def getCursorRow(self) -> int: ...

    def getIndexAfter(self, __a0: long) -> long: ...

    def getIndexBefore(self, __a0: long) -> long: ...

    def getLayout(self, __a0: long) -> ghidra.app.plugin.core.terminal.TerminalLayout: ...

    def getNumIndexes(self) -> long: ...

    def getPreferredViewSize(self) -> java.awt.Dimension: ...

    def getRows(self) -> int: ...

    def getScrollBackSize(self) -> int: ...

    def getSelectedText(self, __a0: docking.widgets.fieldpanel.support.FieldRange) -> unicode: ...

    def handleAltCharset(self, __a0: bool) -> None: ...

    def handleAltScreenBuffer(self, __a0: bool, __a1: bool) -> None: ...

    def handleAutoWrapMode(self, __a0: bool) -> None: ...

    def handleBackSpace(self) -> None: ...

    def handleBackgroundColor(self, __a0: ghidra.app.plugin.core.terminal.vt.VtHandler.AnsiColor) -> None: ...

    def handleBackwardTab(self, __a0: int) -> None: ...

    def handleBell(self) -> None: ...

    def handleBlink(self, __a0: ghidra.app.plugin.core.terminal.vt.VtHandler.Blink) -> None: ...

    def handleBlinkCursor(self, __a0: bool) -> None: ...

    def handleBracketedPasteMode(self, __a0: bool) -> None: ...

    def handleCarriageReturn(self) -> None: ...

    def handleChar(self, __a0: int) -> None: ...

    def handleCharExc(self, __a0: int) -> None: ...

    def handleCsi(self, __a0: java.nio.ByteBuffer, __a1: java.nio.ByteBuffer, __a2: int) -> None: ...

    def handleCsiExc(self, __a0: java.nio.ByteBuffer, __a1: java.nio.ByteBuffer, __a2: int) -> None: ...

    def handleCursorKeyMode(self, __a0: ghidra.app.plugin.core.terminal.vt.VtHandler.KeyMode) -> None: ...

    def handleDeleteCharacters(self, __a0: int) -> None: ...

    def handleDeleteLines(self, __a0: int) -> None: ...

    def handleErase(self, __a0: ghidra.app.plugin.core.terminal.vt.VtHandler.Erasure) -> None: ...

    def handleEraseCharacters(self, __a0: int) -> None: ...

    def handleFont(self, __a0: ghidra.app.plugin.core.terminal.vt.VtHandler.AnsiFont) -> None: ...

    def handleForegroundColor(self, __a0: ghidra.app.plugin.core.terminal.vt.VtHandler.AnsiColor) -> None: ...

    def handleFullReset(self) -> None: ...

    def handleHOrLStuff(self, __a0: java.nio.ByteBuffer, __a1: bool) -> None: ...

    def handleHidden(self, __a0: bool) -> None: ...

    def handleInsertCharacters(self, __a0: int) -> None: ...

    def handleInsertLines(self, __a0: int) -> None: ...

    def handleInsertMode(self, __a0: bool) -> None: ...

    def handleIntensity(self, __a0: ghidra.app.plugin.core.terminal.vt.VtHandler.Intensity) -> None: ...

    def handleKeypadMode(self, __a0: ghidra.app.plugin.core.terminal.vt.VtHandler.KeyMode) -> None: ...

    def handleLineFeed(self) -> None: ...

    def handleMetaKey(self, __a0: bool) -> None: ...

    @overload
    def handleMoveCursor(self, __a0: int, __a1: int) -> None: ...

    @overload
    def handleMoveCursor(self, __a0: ghidra.app.plugin.core.terminal.vt.VtHandler.Direction, __a1: int) -> None: ...

    def handleMoveCursorCol(self, __a0: int) -> None: ...

    def handleMoveCursorRow(self, __a0: int) -> None: ...

    def handleOsc(self, __a0: java.nio.ByteBuffer) -> None: ...

    def handleOscExc(self, __a0: java.nio.ByteBuffer) -> None: ...

    def handleProportionalSpacing(self, __a0: bool) -> None: ...

    def handleReportCursorPos(self) -> None: ...

    def handleReportFocus(self, __a0: bool) -> None: ...

    def handleReportMouseEvents(self, __a0: bool, __a1: bool) -> None: ...

    def handleResetAttributes(self) -> None: ...

    def handleRestoreCursorPos(self) -> None: ...

    def handleRestoreIconTitle(self) -> None: ...

    def handleRestoreWindowTitle(self) -> None: ...

    def handleReverseVideo(self, __a0: bool) -> None: ...

    def handleSaveCursorPos(self) -> None: ...

    def handleSaveIconTitle(self) -> None: ...

    def handleSaveWindowTitle(self) -> None: ...

    def handleScrollLinesDown(self, __a0: int) -> None: ...

    def handleScrollLinesUp(self, __a0: int, __a1: bool) -> None: ...

    def handleScrollViewportDown(self, __a0: int, __a1: bool) -> None: ...

    def handleScrollViewportUp(self, __a0: int) -> None: ...

    def handleSetCharset(self, __a0: ghidra.app.plugin.core.terminal.vt.VtCharset.G, __a1: ghidra.app.plugin.core.terminal.vt.VtCharset) -> None: ...

    def handleSetScrollRange(self, __a0: int, __a1: int) -> None: ...

    def handleSgrAttribute(self, __a0: java.util.PrimitiveIterator.OfInt) -> None: ...

    def handleShowCursor(self, __a0: bool) -> None: ...

    def handleStrikeThrough(self, __a0: bool) -> None: ...

    def handleTab(self) -> None: ...

    def handleUnderline(self, __a0: ghidra.app.plugin.core.terminal.vt.VtHandler.Underline) -> None: ...

    def handleWindowManipulation(self, __a0: java.nio.ByteBuffer) -> None: ...

    def handleWindowTitle(self, __a0: unicode) -> None: ...

    def hashCode(self) -> int: ...

    def isUniform(self) -> bool: ...

    @overload
    def iterator(self) -> java.util.Iterator: ...

    @overload
    def iterator(self, __a0: long) -> docking.widgets.fieldpanel.LayoutModelIterator: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    @staticmethod
    def parseCsiInts(__a0: java.nio.ByteBuffer) -> java.util.PrimitiveIterator.OfInt: ...

    def processInput(self, __a0: java.nio.ByteBuffer) -> None: ...

    def removeLayoutModelListener(self, __a0: docking.widgets.fieldpanel.listener.LayoutModelListener) -> None: ...

    def resetCursorBottom(self) -> int: ...

    def setFontMetrics(self, __a0: java.awt.FontMetrics) -> None: ...

    def setMaxScrollBackSize(self, __a0: int) -> None: ...

    def spliterator(self) -> java.util.Spliterator: ...

    @staticmethod
    def strBuf(__a0: java.nio.ByteBuffer) -> unicode: ...

    def toString(self) -> unicode: ...

    @staticmethod
    def truncateAtNull(__a0: unicode) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def cols(self) -> int: ...

    @property
    def cursorColumn(self) -> int: ...

    @property
    def cursorRow(self) -> int: ...

    @property
    def fontMetrics(self) -> None: ...  # No getter available.

    @fontMetrics.setter
    def fontMetrics(self, value: java.awt.FontMetrics) -> None: ...

    @property
    def maxScrollBackSize(self) -> None: ...  # No getter available.

    @maxScrollBackSize.setter
    def maxScrollBackSize(self, value: int) -> None: ...

    @property
    def numIndexes(self) -> long: ...

    @property
    def preferredViewSize(self) -> java.awt.Dimension: ...

    @property
    def rows(self) -> int: ...

    @property
    def scrollBackSize(self) -> int: ...

    @property
    def uniform(self) -> bool: ...