from typing import overload
import ghidra.app.plugin.core.go.ipc
import java.lang
import java.util.concurrent


class CheckForListenerRunnable(ghidra.app.plugin.core.go.ipc.CheckPeriodicallyRunnable):
    MAX_WAIT_FOR_LISTENER_MIN: int
    WAIT_FOR_LISTENER_DELAY_MS: int
    WAIT_FOR_LISTENER_PERIOD_MS: int



    def __init__(self, __a0: java.lang.Process, __a1: int, __a2: java.util.concurrent.TimeUnit, __a3: java.util.concurrent.Callable): ...



    def awaitTermination(self) -> None: ...

    def dispose(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def run(self) -> None: ...

    def startChecking(self, __a0: int, __a1: java.util.concurrent.TimeUnit) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

