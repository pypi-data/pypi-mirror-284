from typing import List
from typing import overload
import generic.jar
import ghidra.app.plugin.core.strings
import ghidra.app.services
import ghidra.framework.plugintool
import java.lang
import java.util


class TrigramStringValidator(object, ghidra.app.services.StringValidatorService):
    DUMMY: ghidra.app.services.StringValidatorService



    def __init__(self, __a0: java.util.Map, __a1: long, __a2: java.util.function.Function, __a3: List[float], __a4: generic.jar.ResourceFile): ...



    def dumpModel(self) -> java.util.Iterator: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    @staticmethod
    def getCurrentStringValidatorServices(__a0: ghidra.framework.plugintool.PluginTool) -> List[object]: ...

    def getSourceFile(self) -> generic.jar.ResourceFile: ...

    def getStringValidityScore(self, __a0: ghidra.app.services.StringValidatorQuery) -> ghidra.app.services.StringValidityScore: ...

    def getTotalNumTrigrams(self) -> long: ...

    def getValidatorServiceName(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    @staticmethod
    def read(__a0: generic.jar.ResourceFile) -> ghidra.app.plugin.core.strings.TrigramStringValidator: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def sourceFile(self) -> generic.jar.ResourceFile: ...

    @property
    def totalNumTrigrams(self) -> long: ...

    @property
    def validatorServiceName(self) -> unicode: ...