from typing import overload
import ghidra.app.util.bin.format.pdb
import ghidra.app.util.pdb.pdbapplicator
import java.lang


class DefaultPdbUniversalMember(ghidra.app.util.bin.format.pdb.PdbMember):








    def equals(self, __a0: object) -> bool: ...

    def getAttributes(self) -> ghidra.app.util.pdb.pdbapplicator.ClassFieldAttributes: ...

    def getClass(self) -> java.lang.Class: ...

    def getComment(self) -> unicode: ...

    def getDataTypeName(self) -> unicode: ...

    def getName(self) -> unicode: ...

    def getOffset(self) -> int: ...

    def hashCode(self) -> int: ...

    def isZeroLengthArray(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def attributes(self) -> ghidra.app.util.pdb.pdbapplicator.ClassFieldAttributes: ...

    @property
    def dataTypeName(self) -> unicode: ...

    @property
    def zeroLengthArray(self) -> bool: ...