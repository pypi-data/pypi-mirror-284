from typing import overload
import ghidra.app.util.bin.format.macho
import ghidra.app.util.bin.format.macho.relocation
import ghidra.program.model.reloc
import java.lang


class X86_32_MachoRelocationHandler(ghidra.app.util.bin.format.macho.relocation.MachoRelocationHandler):




    def __init__(self): ...



    def canRelocate(self, __a0: ghidra.app.util.bin.format.macho.MachHeader) -> bool: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def hashCode(self) -> int: ...

    def isPairedRelocation(self, __a0: ghidra.app.util.bin.format.macho.RelocationInfo) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    @staticmethod
    def read(__a0: ghidra.app.util.bin.format.macho.relocation.MachoRelocation) -> long: ...

    def relocate(self, __a0: ghidra.app.util.bin.format.macho.relocation.MachoRelocation) -> ghidra.program.model.reloc.RelocationResult: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @staticmethod
    def write(__a0: ghidra.app.util.bin.format.macho.relocation.MachoRelocation, __a1: long) -> int: ...

