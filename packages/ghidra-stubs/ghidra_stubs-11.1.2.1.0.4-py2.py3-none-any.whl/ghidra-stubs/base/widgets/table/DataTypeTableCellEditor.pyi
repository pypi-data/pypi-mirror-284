from typing import List
from typing import overload
import docking.widgets.table
import java.awt
import java.lang
import java.util
import javax.swing
import javax.swing.event
import javax.swing.table


class DataTypeTableCellEditor(javax.swing.AbstractCellEditor, javax.swing.table.TableCellEditor, docking.widgets.table.FocusableEditor):




    @overload
    def __init__(self, __a0: ghidra.app.services.DataTypeManagerService): ...

    @overload
    def __init__(self, __a0: ghidra.framework.plugintool.PluginTool): ...



    def addCellEditorListener(self, __a0: javax.swing.event.CellEditorListener) -> None: ...

    def cancelCellEditing(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def focusEditor(self) -> None: ...

    def getCellEditorListeners(self) -> List[javax.swing.event.CellEditorListener]: ...

    def getCellEditorValue(self) -> object: ...

    def getClass(self) -> java.lang.Class: ...

    def getTableCellEditorComponent(self, __a0: javax.swing.JTable, __a1: object, __a2: bool, __a3: int, __a4: int) -> java.awt.Component: ...

    def hashCode(self) -> int: ...

    def isCellEditable(self, __a0: java.util.EventObject) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def removeCellEditorListener(self, __a0: javax.swing.event.CellEditorListener) -> None: ...

    def shouldSelectCell(self, __a0: java.util.EventObject) -> bool: ...

    def stopCellEditing(self) -> bool: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def cellEditorValue(self) -> ghidra.program.model.data.DataType: ...