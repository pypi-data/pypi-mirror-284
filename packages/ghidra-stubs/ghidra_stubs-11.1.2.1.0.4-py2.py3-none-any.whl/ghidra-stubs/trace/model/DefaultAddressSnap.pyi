from typing import overload
import ghidra.program.model.address
import ghidra.trace.model
import java.lang


class DefaultAddressSnap(object, ghidra.trace.model.AddressSnap):




    def __init__(self, __a0: ghidra.program.model.address.Address, __a1: long): ...



    @overload
    def compareTo(self, __a0: ghidra.trace.model.AddressSnap) -> int: ...

    @overload
    def compareTo(self, __a0: object) -> int: ...

    def equals(self, __a0: object) -> bool: ...

    def getAddress(self) -> ghidra.program.model.address.Address: ...

    def getClass(self) -> java.lang.Class: ...

    def getSnap(self) -> long: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def address(self) -> ghidra.program.model.address.Address: ...

    @property
    def snap(self) -> long: ...