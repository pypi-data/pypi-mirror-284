from typing import overload
import ghidra.program.model.lang
import java.lang
import java.util


class TraceOptionsManager(object):








    def asMap(self) -> java.util.Map: ...

    def equals(self, __a0: object) -> bool: ...

    def getBaseLanguage(self) -> ghidra.program.model.lang.Language: ...

    def getBaseLanguageID(self) -> ghidra.program.model.lang.LanguageID: ...

    def getBaseLanguageIDName(self) -> unicode: ...

    def getClass(self) -> java.lang.Class: ...

    def getCreationDate(self) -> java.util.Date: ...

    def getExecutablePath(self) -> unicode: ...

    def getName(self) -> unicode: ...

    def getPlatform(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setExecutablePath(self, __a0: unicode) -> None: ...

    def setName(self, __a0: unicode) -> None: ...

    def setPlatform(self, __a0: unicode) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def baseLanguage(self) -> ghidra.program.model.lang.Language: ...

    @property
    def baseLanguageID(self) -> ghidra.program.model.lang.LanguageID: ...

    @property
    def baseLanguageIDName(self) -> unicode: ...

    @property
    def creationDate(self) -> java.util.Date: ...

    @property
    def executablePath(self) -> unicode: ...

    @executablePath.setter
    def executablePath(self, value: unicode) -> None: ...

    @property
    def name(self) -> unicode: ...

    @name.setter
    def name(self, value: unicode) -> None: ...

    @property
    def platform(self) -> unicode: ...

    @platform.setter
    def platform(self, value: unicode) -> None: ...