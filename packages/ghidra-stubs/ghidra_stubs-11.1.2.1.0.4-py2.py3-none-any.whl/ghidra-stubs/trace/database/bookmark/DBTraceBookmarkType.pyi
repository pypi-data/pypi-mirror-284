from typing import overload
import ghidra.trace.model.bookmark
import java.awt
import java.lang
import java.util
import javax.swing


class DBTraceBookmarkType(object, ghidra.trace.model.bookmark.TraceBookmarkType):
    ANALYSIS: unicode = u'Analysis'
    ERROR: unicode = u'Error'
    INFO: unicode = u'Info'
    NOTE: unicode = u'Note'
    WARNING: unicode = u'Warning'



    @overload
    def __init__(self, __a0: ghidra.trace.database.bookmark.DBTraceBookmarkManager, __a1: unicode): ...

    @overload
    def __init__(self, __a0: ghidra.trace.database.bookmark.DBTraceBookmarkManager, __a1: unicode, __a2: javax.swing.Icon, __a3: java.awt.Color, __a4: int): ...



    def countBookmarks(self) -> int: ...

    def equals(self, __a0: object) -> bool: ...

    def getBookmarks(self) -> java.util.Collection: ...

    def getCategories(self) -> java.util.Collection: ...

    def getClass(self) -> java.lang.Class: ...

    def getIcon(self) -> javax.swing.Icon: ...

    def getMarkerColor(self) -> java.awt.Color: ...

    def getMarkerPriority(self) -> int: ...

    def getTypeId(self) -> int: ...

    def getTypeString(self) -> unicode: ...

    def hasBookmarks(self) -> bool: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setIcon(self, __a0: javax.swing.ImageIcon) -> None: ...

    def setMarkerColor(self, __a0: java.awt.Color) -> None: ...

    def setMarkerPriority(self, __a0: int) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def bookmarks(self) -> java.util.Collection: ...

    @property
    def categories(self) -> java.util.Collection: ...

    @property
    def icon(self) -> javax.swing.Icon: ...

    @property
    def markerColor(self) -> java.awt.Color: ...

    @markerColor.setter
    def markerColor(self, value: java.awt.Color) -> None: ...

    @property
    def markerPriority(self) -> int: ...

    @markerPriority.setter
    def markerPriority(self, value: int) -> None: ...

    @property
    def typeId(self) -> int: ...

    @property
    def typeString(self) -> unicode: ...