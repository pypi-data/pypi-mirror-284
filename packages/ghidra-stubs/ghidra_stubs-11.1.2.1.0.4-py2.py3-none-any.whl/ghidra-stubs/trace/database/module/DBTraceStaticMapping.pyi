from typing import overload
import ghidra.program.model.address
import ghidra.trace.database.address
import ghidra.trace.model
import ghidra.trace.model.modules
import ghidra.util
import ghidra.util.database
import java.lang
import java.net


class DBTraceStaticMapping(ghidra.util.database.DBAnnotatedObject, ghidra.trace.model.modules.TraceStaticMapping, ghidra.trace.database.address.DBTraceOverlaySpaceAdapter.DecodesAddresses):
    TABLE_NAME: unicode = u'StaticMappings'



    def __init__(self, __a0: ghidra.trace.database.module.DBTraceStaticMappingManager, __a1: ghidra.util.database.DBCachedObjectStore, __a2: db.DBRecord): ...



    def conflictsWith(self, __a0: ghidra.program.model.address.AddressRange, __a1: ghidra.trace.model.Lifespan, __a2: java.net.URL, __a3: unicode) -> bool: ...

    def delete(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getEndSnap(self) -> long: ...

    def getKey(self) -> long: ...

    def getLength(self) -> long: ...

    def getLifespan(self) -> ghidra.trace.model.Lifespan: ...

    def getMaxTraceAddress(self) -> ghidra.program.model.address.Address: ...

    def getMinTraceAddress(self) -> ghidra.program.model.address.Address: ...

    def getObjectKey(self) -> ghidra.util.database.ObjectKey: ...

    def getOverlaySpaceAdapter(self) -> ghidra.trace.database.address.DBTraceOverlaySpaceAdapter: ...

    def getShift(self) -> long: ...

    def getStartSnap(self) -> long: ...

    def getStaticAddress(self) -> unicode: ...

    def getStaticProgramURL(self) -> java.net.URL: ...

    def getTableName(self) -> unicode: ...

    def getTrace(self) -> ghidra.trace.model.Trace: ...

    def getTraceAddressRange(self) -> ghidra.program.model.address.AddressRange: ...

    def hashCode(self) -> int: ...

    @overload
    def isDeleted(self) -> bool: ...

    @overload
    def isDeleted(self, __a0: ghidra.util.Lock) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setInvalid(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def endSnap(self) -> long: ...

    @property
    def length(self) -> long: ...

    @property
    def lifespan(self) -> ghidra.trace.model.Lifespan: ...

    @property
    def maxTraceAddress(self) -> ghidra.program.model.address.Address: ...

    @property
    def minTraceAddress(self) -> ghidra.program.model.address.Address: ...

    @property
    def overlaySpaceAdapter(self) -> ghidra.trace.database.address.DBTraceOverlaySpaceAdapter: ...

    @property
    def shift(self) -> long: ...

    @property
    def startSnap(self) -> long: ...

    @property
    def staticAddress(self) -> unicode: ...

    @property
    def staticProgramURL(self) -> java.net.URL: ...

    @property
    def trace(self) -> ghidra.trace.model.Trace: ...

    @property
    def traceAddressRange(self) -> ghidra.program.model.address.AddressRange: ...