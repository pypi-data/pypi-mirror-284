from typing import List
from typing import overload
import ghidra.program.model.address
import ghidra.program.model.symbol
import ghidra.util.task
import java.lang
import java.util


class DBTraceProgramViewEquateTable(object, ghidra.program.model.symbol.EquateTable):




    def __init__(self, __a0: ghidra.trace.database.program.DBTraceProgramView): ...



    def createEquate(self, __a0: unicode, __a1: long) -> ghidra.program.model.symbol.Equate: ...

    def deleteAddressRange(self, __a0: ghidra.program.model.address.Address, __a1: ghidra.program.model.address.Address, __a2: ghidra.util.task.TaskMonitor) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    @overload
    def getEquate(self, __a0: unicode) -> ghidra.program.model.symbol.Equate: ...

    @overload
    def getEquate(self, __a0: ghidra.program.model.address.Address, __a1: int, __a2: long) -> ghidra.program.model.symbol.Equate: ...

    @overload
    def getEquateAddresses(self) -> ghidra.program.model.address.AddressIterator: ...

    @overload
    def getEquateAddresses(self, __a0: ghidra.program.model.address.Address) -> ghidra.program.model.address.AddressIterator: ...

    @overload
    def getEquateAddresses(self, __a0: ghidra.program.model.address.AddressSetView) -> ghidra.program.model.address.AddressIterator: ...

    @overload
    def getEquates(self) -> java.util.Iterator: ...

    @overload
    def getEquates(self, __a0: long) -> List[object]: ...

    @overload
    def getEquates(self, __a0: ghidra.program.model.address.Address) -> List[object]: ...

    @overload
    def getEquates(self, __a0: ghidra.program.model.address.Address, __a1: int) -> List[object]: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def removeEquate(self, __a0: unicode) -> bool: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def equateAddresses(self) -> ghidra.program.model.address.AddressIterator: ...

    @property
    def equates(self) -> java.util.Iterator: ...