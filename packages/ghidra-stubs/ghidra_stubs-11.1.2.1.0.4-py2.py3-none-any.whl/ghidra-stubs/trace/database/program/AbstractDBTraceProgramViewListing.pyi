from typing import List
from typing import overload
import ghidra.program.model.address
import ghidra.program.model.data
import ghidra.program.model.lang
import ghidra.program.model.listing
import ghidra.program.model.mem
import ghidra.program.model.symbol
import ghidra.program.model.util
import ghidra.trace.model
import ghidra.trace.model.program
import ghidra.util.task
import java.lang
import java.util


class AbstractDBTraceProgramViewListing(object, ghidra.trace.model.program.TraceProgramViewListing):
    DEFAULT_TREE_NAME: unicode = u'Program Tree'
    EMPTY_STRING_ARRAY: List[unicode]
    TREE_NAME: unicode = u'Trace Tree'



    def __init__(self, __a0: ghidra.trace.database.program.DBTraceProgramView, __a1: ghidra.trace.model.listing.TraceCodeOperations): ...



    def addInstructions(self, __a0: ghidra.program.model.lang.InstructionSet, __a1: bool) -> ghidra.program.model.address.AddressSetView: ...

    def clearAll(self, __a0: bool, __a1: ghidra.util.task.TaskMonitor) -> None: ...

    @overload
    def clearCodeUnits(self, __a0: ghidra.program.model.address.Address, __a1: ghidra.program.model.address.Address, __a2: bool) -> None: ...

    @overload
    def clearCodeUnits(self, __a0: ghidra.program.model.address.Address, __a1: ghidra.program.model.address.Address, __a2: bool, __a3: ghidra.util.task.TaskMonitor) -> None: ...

    def clearComments(self, __a0: ghidra.program.model.address.Address, __a1: ghidra.program.model.address.Address) -> None: ...

    def clearProperties(self, __a0: ghidra.program.model.address.Address, __a1: ghidra.program.model.address.Address, __a2: ghidra.util.task.TaskMonitor) -> None: ...

    @overload
    def createData(self, __a0: ghidra.program.model.address.Address, __a1: ghidra.program.model.data.DataType) -> ghidra.program.model.listing.Data: ...

    @overload
    def createData(self, __a0: ghidra.program.model.address.Address, __a1: ghidra.program.model.data.DataType, __a2: int) -> ghidra.program.model.listing.Data: ...

    @overload
    def createFunction(self, __a0: unicode, __a1: ghidra.program.model.address.Address, __a2: ghidra.program.model.address.AddressSetView, __a3: ghidra.program.model.symbol.SourceType) -> ghidra.program.model.listing.Function: ...

    @overload
    def createFunction(self, __a0: unicode, __a1: ghidra.program.model.symbol.Namespace, __a2: ghidra.program.model.address.Address, __a3: ghidra.program.model.address.AddressSetView, __a4: ghidra.program.model.symbol.SourceType) -> ghidra.program.model.listing.Function: ...

    def createInstruction(self, __a0: ghidra.program.model.address.Address, __a1: ghidra.program.model.lang.InstructionPrototype, __a2: ghidra.program.model.mem.MemBuffer, __a3: ghidra.program.model.lang.ProcessorContextView, __a4: int) -> ghidra.program.model.listing.Instruction: ...

    def createRootModule(self, __a0: unicode) -> ghidra.program.model.listing.ProgramModule: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getCodeUnitAfter(self, __a0: ghidra.program.model.address.Address) -> ghidra.program.model.listing.CodeUnit: ...

    def getCodeUnitAt(self, __a0: ghidra.program.model.address.Address) -> ghidra.program.model.listing.CodeUnit: ...

    def getCodeUnitBefore(self, __a0: ghidra.program.model.address.Address) -> ghidra.program.model.listing.CodeUnit: ...

    def getCodeUnitContaining(self, __a0: ghidra.program.model.address.Address) -> ghidra.program.model.listing.CodeUnit: ...

    @overload
    def getCodeUnitIterator(self, __a0: unicode, __a1: bool) -> ghidra.program.model.listing.CodeUnitIterator: ...

    @overload
    def getCodeUnitIterator(self, __a0: unicode, __a1: ghidra.program.model.address.Address, __a2: bool) -> ghidra.program.model.listing.CodeUnitIterator: ...

    @overload
    def getCodeUnitIterator(self, __a0: unicode, __a1: ghidra.program.model.address.AddressSetView, __a2: bool) -> ghidra.program.model.listing.CodeUnitIterator: ...

    @overload
    def getCodeUnits(self, __a0: bool) -> ghidra.program.model.listing.CodeUnitIterator: ...

    @overload
    def getCodeUnits(self, __a0: ghidra.program.model.address.Address, __a1: bool) -> ghidra.program.model.listing.CodeUnitIterator: ...

    @overload
    def getCodeUnits(self, __a0: ghidra.program.model.address.AddressSetView, __a1: bool) -> ghidra.program.model.listing.CodeUnitIterator: ...

    def getComment(self, __a0: int, __a1: ghidra.program.model.address.Address) -> unicode: ...

    @overload
    def getCommentAddressIterator(self, __a0: ghidra.program.model.address.AddressSetView, __a1: bool) -> ghidra.program.model.address.AddressIterator: ...

    @overload
    def getCommentAddressIterator(self, __a0: int, __a1: ghidra.program.model.address.AddressSetView, __a2: bool) -> ghidra.program.model.address.AddressIterator: ...

    def getCommentCodeUnitIterator(self, __a0: int, __a1: ghidra.program.model.address.AddressSetView) -> ghidra.program.model.listing.CodeUnitIterator: ...

    def getCommentHistory(self, __a0: ghidra.program.model.address.Address, __a1: int) -> List[ghidra.program.model.listing.CommentHistory]: ...

    @overload
    def getCompositeData(self, __a0: bool) -> ghidra.program.model.listing.DataIterator: ...

    @overload
    def getCompositeData(self, __a0: ghidra.program.model.address.Address, __a1: bool) -> ghidra.program.model.listing.DataIterator: ...

    @overload
    def getCompositeData(self, __a0: ghidra.program.model.address.AddressSetView, __a1: bool) -> ghidra.program.model.listing.DataIterator: ...

    @overload
    def getData(self, __a0: bool) -> ghidra.program.model.listing.DataIterator: ...

    @overload
    def getData(self, __a0: ghidra.program.model.address.Address, __a1: bool) -> ghidra.program.model.listing.DataIterator: ...

    @overload
    def getData(self, __a0: ghidra.program.model.address.AddressSetView, __a1: bool) -> ghidra.program.model.listing.DataIterator: ...

    def getDataAfter(self, __a0: ghidra.program.model.address.Address) -> ghidra.program.model.listing.Data: ...

    def getDataAt(self, __a0: ghidra.program.model.address.Address) -> ghidra.program.model.listing.Data: ...

    def getDataBefore(self, __a0: ghidra.program.model.address.Address) -> ghidra.program.model.listing.Data: ...

    def getDataContaining(self, __a0: ghidra.program.model.address.Address) -> ghidra.program.model.listing.Data: ...

    def getDataTypeManager(self) -> ghidra.program.model.data.DataTypeManager: ...

    def getDefaultRootModule(self) -> ghidra.program.model.listing.ProgramModule: ...

    def getDefinedCodeUnitAfter(self, __a0: ghidra.program.model.address.Address) -> ghidra.program.model.listing.CodeUnit: ...

    def getDefinedCodeUnitBefore(self, __a0: ghidra.program.model.address.Address) -> ghidra.program.model.listing.CodeUnit: ...

    @overload
    def getDefinedData(self, __a0: bool) -> ghidra.program.model.listing.DataIterator: ...

    @overload
    def getDefinedData(self, __a0: ghidra.program.model.address.Address, __a1: bool) -> ghidra.program.model.listing.DataIterator: ...

    @overload
    def getDefinedData(self, __a0: ghidra.program.model.address.AddressSetView, __a1: bool) -> ghidra.program.model.listing.DataIterator: ...

    def getDefinedDataAfter(self, __a0: ghidra.program.model.address.Address) -> ghidra.program.model.listing.Data: ...

    def getDefinedDataAt(self, __a0: ghidra.program.model.address.Address) -> ghidra.program.model.listing.Data: ...

    def getDefinedDataBefore(self, __a0: ghidra.program.model.address.Address) -> ghidra.program.model.listing.Data: ...

    def getDefinedDataContaining(self, __a0: ghidra.program.model.address.Address) -> ghidra.program.model.listing.Data: ...

    def getExternalFunctions(self) -> ghidra.program.model.listing.FunctionIterator: ...

    def getFirstUndefinedData(self, __a0: ghidra.program.model.address.AddressSetView, __a1: ghidra.util.task.TaskMonitor) -> ghidra.program.model.listing.Data: ...

    @overload
    def getFragment(self, __a0: unicode, __a1: unicode) -> ghidra.program.model.listing.ProgramFragment: ...

    @overload
    def getFragment(self, __a0: unicode, __a1: ghidra.program.model.address.Address) -> ghidra.program.model.listing.ProgramFragment: ...

    def getFunctionAt(self, __a0: ghidra.program.model.address.Address) -> ghidra.program.model.listing.Function: ...

    def getFunctionContaining(self, __a0: ghidra.program.model.address.Address) -> ghidra.program.model.listing.Function: ...

    @overload
    def getFunctions(self, __a0: bool) -> ghidra.program.model.listing.FunctionIterator: ...

    @overload
    def getFunctions(self, __a0: ghidra.program.model.address.Address, __a1: bool) -> ghidra.program.model.listing.FunctionIterator: ...

    @overload
    def getFunctions(self, __a0: ghidra.program.model.address.AddressSetView, __a1: bool) -> ghidra.program.model.listing.FunctionIterator: ...

    @overload
    def getFunctions(self, __a0: unicode, __a1: unicode) -> List[object]: ...

    def getGlobalFunctions(self, __a0: unicode) -> List[object]: ...

    def getInstructionAfter(self, __a0: ghidra.program.model.address.Address) -> ghidra.program.model.listing.Instruction: ...

    def getInstructionAt(self, __a0: ghidra.program.model.address.Address) -> ghidra.program.model.listing.Instruction: ...

    def getInstructionBefore(self, __a0: ghidra.program.model.address.Address) -> ghidra.program.model.listing.Instruction: ...

    def getInstructionContaining(self, __a0: ghidra.program.model.address.Address) -> ghidra.program.model.listing.Instruction: ...

    @overload
    def getInstructions(self, __a0: bool) -> ghidra.program.model.listing.InstructionIterator: ...

    @overload
    def getInstructions(self, __a0: ghidra.program.model.address.Address, __a1: bool) -> ghidra.program.model.listing.InstructionIterator: ...

    @overload
    def getInstructions(self, __a0: ghidra.program.model.address.AddressSetView, __a1: bool) -> ghidra.program.model.listing.InstructionIterator: ...

    def getModule(self, __a0: unicode, __a1: unicode) -> ghidra.program.model.listing.ProgramModule: ...

    def getNumCodeUnits(self) -> long: ...

    def getNumDefinedData(self) -> long: ...

    def getNumInstructions(self) -> long: ...

    def getProgram(self) -> ghidra.trace.model.program.TraceProgramView: ...

    def getPropertyMap(self, __a0: unicode) -> ghidra.program.model.util.PropertyMap: ...

    @overload
    def getRootModule(self, __a0: long) -> ghidra.program.model.listing.ProgramModule: ...

    @overload
    def getRootModule(self, __a0: unicode) -> ghidra.program.model.listing.ProgramModule: ...

    def getSnap(self) -> long: ...

    def getTrace(self) -> ghidra.trace.model.Trace: ...

    def getTreeNames(self) -> List[unicode]: ...

    def getUndefinedDataAfter(self, __a0: ghidra.program.model.address.Address, __a1: ghidra.util.task.TaskMonitor) -> ghidra.program.model.listing.Data: ...

    def getUndefinedDataAt(self, __a0: ghidra.program.model.address.Address) -> ghidra.program.model.listing.Data: ...

    def getUndefinedDataBefore(self, __a0: ghidra.program.model.address.Address, __a1: ghidra.util.task.TaskMonitor) -> ghidra.program.model.listing.Data: ...

    def getUndefinedRanges(self, __a0: ghidra.program.model.address.AddressSetView, __a1: bool, __a2: ghidra.util.task.TaskMonitor) -> ghidra.program.model.address.AddressSetView: ...

    def getUserDefinedProperties(self) -> java.util.Iterator: ...

    def hashCode(self) -> int: ...

    def isInFunction(self, __a0: ghidra.program.model.address.Address) -> bool: ...

    def isUndefined(self, __a0: ghidra.program.model.address.Address, __a1: ghidra.program.model.address.Address) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def removeFunction(self, __a0: ghidra.program.model.address.Address) -> None: ...

    def removeTree(self, __a0: unicode) -> bool: ...

    def removeUserDefinedProperty(self, __a0: unicode) -> None: ...

    def renameTree(self, __a0: unicode, __a1: unicode) -> None: ...

    def setComment(self, __a0: ghidra.program.model.address.Address, __a1: int, __a2: unicode) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def dataTypeManager(self) -> ghidra.program.model.data.DataTypeManager: ...

    @property
    def defaultRootModule(self) -> ghidra.program.model.listing.ProgramModule: ...

    @property
    def externalFunctions(self) -> ghidra.program.model.listing.FunctionIterator: ...

    @property
    def numCodeUnits(self) -> long: ...

    @property
    def numDefinedData(self) -> long: ...

    @property
    def numInstructions(self) -> long: ...

    @property
    def program(self) -> ghidra.trace.model.program.TraceProgramView: ...

    @property
    def snap(self) -> long: ...

    @property
    def trace(self) -> ghidra.trace.model.Trace: ...

    @property
    def treeNames(self) -> List[unicode]: ...

    @property
    def userDefinedProperties(self) -> java.util.Iterator: ...