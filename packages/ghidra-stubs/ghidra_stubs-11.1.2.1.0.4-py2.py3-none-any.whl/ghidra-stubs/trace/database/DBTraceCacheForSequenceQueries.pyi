from typing import overload
import ghidra.program.model.address
import ghidra.trace.model
import java.lang


class DBTraceCacheForSequenceQueries(object):




    def __init__(self, __a0: int, __a1: int): ...



    def equals(self, __a0: object) -> bool: ...

    def getCeiling(self, __a0: long, __a1: ghidra.program.model.address.Address) -> object: ...

    def getClass(self) -> java.lang.Class: ...

    def getFloor(self, __a0: long, __a1: ghidra.program.model.address.Address) -> object: ...

    def hashCode(self) -> int: ...

    def invalidate(self) -> None: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def notifyEntryRemoved(self, __a0: ghidra.trace.model.Lifespan, __a1: ghidra.program.model.address.AddressRange, __a2: object) -> None: ...

    def notifyEntryShapeChanged(self, __a0: ghidra.trace.model.Lifespan, __a1: ghidra.program.model.address.AddressRange, __a2: object) -> None: ...

    def notifyNewEntry(self, __a0: ghidra.trace.model.Lifespan, __a1: ghidra.program.model.address.AddressRangeImpl, __a2: object) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

