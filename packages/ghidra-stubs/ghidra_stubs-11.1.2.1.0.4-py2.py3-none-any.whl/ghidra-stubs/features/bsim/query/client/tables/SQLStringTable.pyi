from typing import overload
import java.lang
import java.sql


class SQLStringTable(object):





    class StringRecord(object):
        id: long
        next: ghidra.features.bsim.query.client.tables.SQLStringTable.StringRecord
        prev: ghidra.features.bsim.query.client.tables.SQLStringTable.StringRecord
        value: unicode



        def __init__(self): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...



    def __init__(self, __a0: unicode, __a1: int): ...



    def close(self) -> None: ...

    def createTable(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getString(self, __a0: long) -> unicode: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def readStringId(self, __a0: unicode) -> long: ...

    def setConnection(self, __a0: java.sql.Connection) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def writeString(self, __a0: unicode) -> long: ...

    @property
    def connection(self) -> None: ...  # No getter available.

    @connection.setter
    def connection(self, value: java.sql.Connection) -> None: ...