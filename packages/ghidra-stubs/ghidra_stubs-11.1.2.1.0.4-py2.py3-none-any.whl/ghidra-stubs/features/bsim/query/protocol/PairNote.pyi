from typing import overload
import ghidra.xml
import java.io
import java.lang


class PairNote(object):




    @overload
    def __init__(self): ...

    @overload
    def __init__(self, __a0: ghidra.features.bsim.query.description.FunctionDescription, __a1: ghidra.features.bsim.query.description.FunctionDescription, __a2: float, __a3: float, __a4: float, __a5: int, __a6: int, __a7: int): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getDotProduct(self) -> float: ...

    def getFunc1HashCount(self) -> int: ...

    def getFunc2HashCount(self) -> int: ...

    def getIntersectionCount(self) -> int: ...

    def getSignificance(self) -> float: ...

    def getSimilarity(self) -> float: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def restoreXml(self, __a0: ghidra.xml.XmlPullParser) -> None: ...

    def saveXml(self, __a0: java.io.Writer) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def dotProduct(self) -> float: ...

    @property
    def func1HashCount(self) -> int: ...

    @property
    def func2HashCount(self) -> int: ...

    @property
    def intersectionCount(self) -> int: ...

    @property
    def significance(self) -> float: ...

    @property
    def similarity(self) -> float: ...