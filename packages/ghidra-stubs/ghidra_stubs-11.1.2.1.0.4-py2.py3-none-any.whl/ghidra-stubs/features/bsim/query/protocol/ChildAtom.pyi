from typing import overload
import ghidra.features.bsim.query.description
import ghidra.features.bsim.query.protocol
import ghidra.xml
import java.io
import java.lang


class ChildAtom(ghidra.features.bsim.query.protocol.FilterAtom):
    exename: unicode
    name: unicode
    type: ghidra.features.bsim.gui.filters.BSimFilterType
    value: unicode



    def __init__(self): ...



    def clone(self) -> object: ...

    def equals(self, __a0: object) -> bool: ...

    def evaluate(self, __a0: ghidra.features.bsim.query.description.ExecutableRecord) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getInfoString(self) -> unicode: ...

    def getValueString(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def isValid(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def restoreXml(self, __a0: ghidra.xml.XmlPullParser) -> None: ...

    def saveXml(self, __a0: java.io.Writer) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def infoString(self) -> unicode: ...

    @property
    def valueString(self) -> unicode: ...