from typing import overload
import ghidra.framework
import ghidra.util
import ghidra.util.task
import java.io
import java.lang


class HeadlessBSimApplicationConfiguration(ghidra.framework.ApplicationConfiguration):




    def __init__(self): ...



    def equals(self, __a0: object) -> bool: ...

    def getApplicationLogFile(self) -> java.io.File: ...

    def getClass(self) -> java.lang.Class: ...

    def getErrorDisplay(self) -> ghidra.util.ErrorDisplay: ...

    def getScriptLogFile(self) -> java.io.File: ...

    def getTaskMonitor(self) -> ghidra.util.task.TaskMonitor: ...

    def hashCode(self) -> int: ...

    def installStaticFactories(self) -> None: ...

    def isHeadless(self) -> bool: ...

    def isInitializeLogging(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setApplicationLogFile(self, __a0: java.io.File) -> None: ...

    def setInitializeLogging(self, __a0: bool) -> None: ...

    def setScriptLogFile(self, __a0: java.io.File) -> None: ...

    def setTaskMonitor(self, __a0: ghidra.util.task.TaskMonitor) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

