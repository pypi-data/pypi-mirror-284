from typing import overload
import ghidra.util.task
import java.io
import java.lang
import java.net


class BulkSignatures(object, java.lang.AutoCloseable):




    def __init__(self, __a0: ghidra.features.bsim.query.BSimServerInfo, __a1: unicode): ...



    def close(self) -> None: ...

    def createDatabase(self, __a0: unicode, __a1: unicode, __a2: unicode, __a3: unicode, __a4: bool) -> None: ...

    def deleteExecutable(self, __a0: unicode, __a1: unicode) -> None: ...

    def dropIndex(self) -> None: ...

    def dumpSigs(self, __a0: java.io.File, __a1: unicode, __a2: unicode) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getCount(self, __a0: unicode, __a1: unicode, __a2: unicode, __a3: unicode, __a4: bool) -> int: ...

    def hashCode(self) -> int: ...

    def installCategory(self, __a0: unicode, __a1: bool) -> None: ...

    def installTags(self, __a0: unicode) -> None: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def prewarm(self) -> None: ...

    def rebuildIndex(self) -> None: ...

    def signatureRepo(self, __a0: java.net.URL, __a1: unicode, __a2: bool, __a3: ghidra.util.task.TaskMonitor) -> None: ...

    def toString(self) -> unicode: ...

    def updateRepoSignatures(self, __a0: java.net.URL, __a1: unicode, __a2: bool, __a3: ghidra.util.task.TaskMonitor) -> None: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

