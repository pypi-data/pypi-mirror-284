from typing import overload
import ghidra.xml
import java.io
import java.lang


class ServerConfig(object):




    def __init__(self): ...



    def addKey(self, __a0: unicode, __a1: unicode) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getHostAuthentication(self) -> unicode: ...

    def getLocalAuthentication(self) -> unicode: ...

    def getValue(self, __a0: unicode) -> unicode: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def patchConfig(self, __a0: java.io.File, __a1: java.io.File) -> None: ...

    def patchConnect(self, __a0: java.io.File, __a1: java.io.File) -> None: ...

    @staticmethod
    def patchIdent(__a0: java.io.File, __a1: java.io.File, __a2: unicode, __a3: unicode, __a4: unicode, __a5: bool) -> None: ...

    def restoreXml(self, __a0: ghidra.xml.XmlPullParser) -> None: ...

    def scanConfig(self, __a0: java.io.File) -> None: ...

    def scanConnect(self, __a0: java.io.File) -> None: ...

    def setHostAuthentication(self, __a0: unicode, __a1: unicode) -> None: ...

    def setLocalAuthentication(self, __a0: unicode, __a1: unicode) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def hostAuthentication(self) -> unicode: ...

    @property
    def localAuthentication(self) -> unicode: ...