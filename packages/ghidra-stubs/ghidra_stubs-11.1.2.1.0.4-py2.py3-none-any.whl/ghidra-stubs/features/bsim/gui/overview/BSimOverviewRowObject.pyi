from typing import overload
import ghidra.program.model.address
import java.lang


class BSimOverviewRowObject(object):




    def __init__(self, __a0: ghidra.features.bsim.query.protocol.SimilarityVectorResult, __a1: ghidra.program.model.address.Address, __a2: generic.lsh.vector.LSHVectorFactory): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getFunctionEntryPoint(self) -> ghidra.program.model.address.Address: ...

    def getFunctionName(self) -> unicode: ...

    def getHitCount(self) -> int: ...

    def getSelfSignificance(self) -> float: ...

    def getVectorHash(self) -> long: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def functionEntryPoint(self) -> ghidra.program.model.address.Address: ...

    @property
    def functionName(self) -> unicode: ...

    @property
    def hitCount(self) -> int: ...

    @property
    def selfSignificance(self) -> float: ...

    @property
    def vectorHash(self) -> long: ...