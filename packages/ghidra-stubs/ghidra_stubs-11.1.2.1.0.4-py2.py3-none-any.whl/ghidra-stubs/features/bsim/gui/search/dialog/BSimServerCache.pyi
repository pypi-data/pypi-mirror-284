from typing import overload
import generic.lsh.vector
import ghidra.features.bsim.query
import ghidra.features.bsim.query.description
import java.lang


class BSimServerCache(object):




    def __init__(self, __a0: ghidra.features.bsim.query.BSimServerInfo): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getDatabaseInformation(self) -> ghidra.features.bsim.query.description.DatabaseInformation: ...

    def getLSHVectorFactory(self) -> generic.lsh.vector.LSHVectorFactory: ...

    def getServerInfo(self) -> ghidra.features.bsim.query.BSimServerInfo: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def LSHVectorFactory(self) -> generic.lsh.vector.LSHVectorFactory: ...

    @property
    def databaseInformation(self) -> ghidra.features.bsim.query.description.DatabaseInformation: ...

    @property
    def serverInfo(self) -> ghidra.features.bsim.query.BSimServerInfo: ...