from typing import overload
import ghidra.taint.model
import java.lang
import java.util


class TaintMark(object):




    def __init__(self, __a0: unicode, __a1: java.util.Set): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getName(self) -> unicode: ...

    def getTags(self) -> java.util.Set: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    @staticmethod
    def parse(__a0: unicode) -> ghidra.taint.model.TaintMark: ...

    def tagged(self, __a0: unicode) -> ghidra.taint.model.TaintMark: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def name(self) -> unicode: ...

    @property
    def tags(self) -> java.util.Set: ...