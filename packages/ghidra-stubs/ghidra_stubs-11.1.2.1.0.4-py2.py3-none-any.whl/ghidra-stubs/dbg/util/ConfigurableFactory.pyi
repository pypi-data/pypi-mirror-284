from typing import overload
import ghidra.dbg.util
import ghidra.framework.options
import java.lang
import java.lang.annotation
import java.util
import java.util.concurrent
import java.util.function


class ConfigurableFactory(object):





    class Property(object):








        def equals(self, __a0: object) -> bool: ...

        @staticmethod
        def fromAccessors(__a0: java.lang.Class, __a1: java.util.function.Supplier, __a2: java.util.function.Consumer) -> ghidra.dbg.util.ConfigurableFactory.Property: ...

        def getClass(self) -> java.lang.Class: ...

        def getValue(self) -> object: ...

        def getValueClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def isEnabled(self) -> bool: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def setEnabled(self, __a0: bool) -> None: ...

        def setValue(self, __a0: object) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...

        @property
        def enabled(self) -> bool: ...

        @enabled.setter
        def enabled(self, value: bool) -> None: ...

        @property
        def value(self) -> object: ...

        @value.setter
        def value(self, value: object) -> None: ...

        @property
        def valueClass(self) -> java.lang.Class: ...




    class FactoryDescription(java.lang.annotation.Annotation, object):








        def annotationType(self) -> java.lang.Class: ...

        def brief(self) -> unicode: ...

        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def htmlDetails(self) -> unicode: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class FactoryOption(java.lang.annotation.Annotation, object):








        def annotationType(self) -> java.lang.Class: ...

        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def toString(self) -> unicode: ...

        def value(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...







    def build(self) -> java.util.concurrent.CompletableFuture: ...

    def equals(self, __a0: object) -> bool: ...

    def getBrief(self) -> unicode: ...

    def getClass(self) -> java.lang.Class: ...

    def getHtmlDetails(self) -> unicode: ...

    def getOptions(self) -> java.util.Map: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def readConfigState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def writeConfigState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    @property
    def brief(self) -> unicode: ...

    @property
    def htmlDetails(self) -> unicode: ...

    @property
    def options(self) -> java.util.Map: ...