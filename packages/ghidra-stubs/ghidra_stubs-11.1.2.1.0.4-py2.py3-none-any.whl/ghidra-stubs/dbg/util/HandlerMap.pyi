from typing import overload
import java.lang
import java.util.function


class HandlerMap(object):




    def __init__(self): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def handle(self, __a0: object, __a1: object) -> object: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def put(self, __a0: java.lang.Class, __a1: java.util.function.BiFunction) -> java.util.function.BiFunction: ...

    def putVoid(self, __a0: java.lang.Class, __a1: java.util.function.BiConsumer) -> java.util.function.BiFunction: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

