from typing import overload
import ghidra.dbg.attributes
import java.lang
import java.util
import java.util.concurrent


class TargetDataTypeConverter(object):




    @overload
    def __init__(self): ...

    @overload
    def __init__(self, __a0: ghidra.program.model.data.DataTypeManager): ...



    def convertTargetDataType(self, __a0: ghidra.dbg.attributes.TargetDataType) -> java.util.concurrent.CompletableFuture: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getPendingOne(self) -> java.util.Set: ...

    def getPendingTwo(self) -> java.util.Set: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def pendingOne(self) -> java.util.Set: ...

    @property
    def pendingTwo(self) -> java.util.Set: ...