from typing import List
from typing import overload
import ghidra.dbg.target.schema
import java.io
import java.lang
import java.util
import org.jdom


class XmlSchemaContext(ghidra.dbg.target.schema.DefaultSchemaContext):




    def __init__(self): ...



    @staticmethod
    def aliasToXml(__a0: java.util.Map.Entry) -> org.jdom.Element: ...

    @staticmethod
    def attributeSchemaToXml(__a0: ghidra.dbg.target.schema.TargetObjectSchema.AttributeSchema) -> org.jdom.Element: ...

    def builder(self, __a0: ghidra.dbg.target.schema.TargetObjectSchema.SchemaName) -> ghidra.dbg.target.schema.SchemaBuilder: ...

    @staticmethod
    def contextFromXml(__a0: org.jdom.Element) -> ghidra.dbg.target.schema.XmlSchemaContext: ...

    @staticmethod
    def contextToXml(__a0: ghidra.dbg.target.schema.SchemaContext) -> org.jdom.Element: ...

    @overload
    @staticmethod
    def deserialize(__a0: unicode) -> ghidra.dbg.target.schema.XmlSchemaContext: ...

    @overload
    @staticmethod
    def deserialize(__a0: List[int]) -> ghidra.dbg.target.schema.XmlSchemaContext: ...

    @overload
    @staticmethod
    def deserialize(__a0: java.io.File) -> ghidra.dbg.target.schema.XmlSchemaContext: ...

    @overload
    @staticmethod
    def deserialize(__a0: java.io.InputStream) -> ghidra.dbg.target.schema.XmlSchemaContext: ...

    def equals(self, __a0: object) -> bool: ...

    def getAllSchemas(self) -> java.util.Set: ...

    def getClass(self) -> java.lang.Class: ...

    def getSchema(self, __a0: ghidra.dbg.target.schema.TargetObjectSchema.SchemaName) -> ghidra.dbg.target.schema.TargetObjectSchema: ...

    def getSchemaOrNull(self, __a0: ghidra.dbg.target.schema.TargetObjectSchema.SchemaName) -> ghidra.dbg.target.schema.TargetObjectSchema: ...

    def hashCode(self) -> int: ...

    def name(self, __a0: unicode) -> ghidra.dbg.target.schema.TargetObjectSchema.SchemaName: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def putSchema(self, __a0: ghidra.dbg.target.schema.TargetObjectSchema) -> None: ...

    def replaceSchema(self, __a0: ghidra.dbg.target.schema.TargetObjectSchema) -> None: ...

    def schemaFromXml(self, __a0: org.jdom.Element) -> ghidra.dbg.target.schema.TargetObjectSchema: ...

    @staticmethod
    def schemaToXml(__a0: ghidra.dbg.target.schema.TargetObjectSchema) -> org.jdom.Element: ...

    @staticmethod
    def serialize(__a0: ghidra.dbg.target.schema.SchemaContext) -> unicode: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

