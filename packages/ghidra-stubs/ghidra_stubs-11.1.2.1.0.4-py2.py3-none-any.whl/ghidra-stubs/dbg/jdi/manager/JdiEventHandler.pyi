from typing import overload
import ghidra.dbg.jdi.manager
import java.lang
import java.util.concurrent


class JdiEventHandler(object, java.lang.Runnable):
    listenersEvent: ghidra.util.datastruct.ListenerSet



    @overload
    def __init__(self): ...

    @overload
    def __init__(self, __a0: com.sun.jdi.VirtualMachine, __a1: ghidra.dbg.jdi.manager.JdiEventHandler): ...



    def addEventsListener(self, __a0: ghidra.dbg.jdi.manager.JdiEventsListener) -> None: ...

    def addStateListener(self, __a0: ghidra.dbg.jdi.manager.JdiStateListener) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def event(self, __a0: java.lang.Runnable, __a1: unicode) -> java.util.concurrent.CompletableFuture: ...

    def getClass(self) -> java.lang.Class: ...

    def getState(self) -> int: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def removeEventsListener(self, __a0: ghidra.dbg.jdi.manager.JdiEventsListener) -> None: ...

    def removeStateListener(self, __a0: ghidra.dbg.jdi.manager.JdiStateListener) -> None: ...

    def run(self) -> None: ...

    def setState(self, __a0: int, __a1: ghidra.dbg.jdi.manager.JdiCause) -> None: ...

    def start(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def state(self) -> int: ...