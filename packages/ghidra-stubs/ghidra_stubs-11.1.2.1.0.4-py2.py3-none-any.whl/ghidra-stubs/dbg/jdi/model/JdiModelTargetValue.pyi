from typing import List
from typing import overload
import com.sun.jdi
import ghidra.dbg
import ghidra.dbg.agent
import ghidra.dbg.jdi.manager
import ghidra.dbg.jdi.model
import ghidra.dbg.jdi.model.iface2
import ghidra.dbg.target
import ghidra.dbg.target.schema
import ghidra.dbg.util
import java.lang
import java.util
import java.util.concurrent


class JdiModelTargetValue(ghidra.dbg.jdi.model.JdiModelTargetObjectImpl):




    @overload
    def __init__(self, __a0: ghidra.dbg.jdi.model.iface2.JdiModelTargetObject, __a1: com.sun.jdi.Value, __a2: bool): ...

    @overload
    def __init__(self, __a0: ghidra.dbg.jdi.model.iface2.JdiModelTargetObject, __a1: unicode, __a2: com.sun.jdi.Value, __a3: bool): ...



    def acceptsElement(self, __a0: unicode) -> bool: ...

    def as(self, __a0: java.lang.Class) -> ghidra.dbg.target.TargetObject: ...

    def broadcast(self) -> ghidra.dbg.DebuggerModelListener: ...

    @overload
    def changeAttributes(self, __a0: List[object], __a1: java.util.Map, __a2: unicode) -> ghidra.dbg.util.CollectionUtils.Delta: ...

    @overload
    def changeAttributes(self, __a0: List[object], __a1: java.util.Collection, __a2: java.util.Map, __a3: unicode) -> ghidra.dbg.util.CollectionUtils.Delta: ...

    @overload
    def changeElements(self, __a0: java.util.Collection, __a1: java.util.Collection, __a2: unicode) -> ghidra.dbg.util.CollectionUtils.Delta: ...

    @overload
    def changeElements(self, __a0: java.util.Collection, __a1: java.util.Map, __a2: unicode) -> ghidra.dbg.util.CollectionUtils.Delta: ...

    @overload
    def changeElements(self, __a0: java.util.Collection, __a1: java.util.Collection, __a2: java.util.Map, __a3: unicode) -> ghidra.dbg.util.CollectionUtils.Delta: ...

    @overload
    def compareTo(self, __a0: ghidra.dbg.target.TargetObject) -> int: ...

    @overload
    def compareTo(self, __a0: object) -> int: ...

    def computeHashCode(self) -> int: ...

    def doEquals(self, __a0: object) -> bool: ...

    def doInvalidateSubtree(self, __a0: ghidra.dbg.target.TargetObject, __a1: unicode) -> None: ...

    def enforcesStrictSchema(self) -> bool: ...

    def equals(self, __a0: object) -> bool: ...

    def fetchAttribute(self, __a0: unicode) -> java.util.concurrent.CompletableFuture: ...

    @overload
    def fetchAttributes(self) -> java.util.concurrent.CompletableFuture: ...

    @overload
    def fetchAttributes(self, __a0: ghidra.dbg.DebuggerObjectModel.RefreshBehavior) -> java.util.concurrent.CompletableFuture: ...

    def fetchChild(self, __a0: unicode) -> java.util.concurrent.CompletableFuture: ...

    @overload
    def fetchChildren(self) -> java.util.concurrent.CompletableFuture: ...

    @overload
    def fetchChildren(self, __a0: ghidra.dbg.DebuggerObjectModel.RefreshBehavior) -> java.util.concurrent.CompletableFuture: ...

    def fetchChildrenSupporting(self, __a0: java.lang.Class) -> java.util.concurrent.CompletableFuture: ...

    def fetchElement(self, __a0: unicode) -> java.util.concurrent.CompletableFuture: ...

    @overload
    def fetchElements(self) -> java.util.concurrent.CompletableFuture: ...

    @overload
    def fetchElements(self, __a0: ghidra.dbg.DebuggerObjectModel.RefreshBehavior) -> java.util.concurrent.CompletableFuture: ...

    @overload
    def fetchSubAttribute(self, __a0: List[unicode]) -> java.util.concurrent.CompletableFuture: ...

    @overload
    def fetchSubAttribute(self, __a0: List[object]) -> java.util.concurrent.CompletableFuture: ...

    @overload
    def fetchSubAttributes(self, __a0: List[unicode]) -> java.util.concurrent.CompletableFuture: ...

    @overload
    def fetchSubAttributes(self, __a0: List[object]) -> java.util.concurrent.CompletableFuture: ...

    @overload
    def fetchSubElements(self, __a0: List[unicode]) -> java.util.concurrent.CompletableFuture: ...

    @overload
    def fetchSubElements(self, __a0: List[object]) -> java.util.concurrent.CompletableFuture: ...

    @overload
    def fetchSuccessor(self, __a0: List[unicode]) -> java.util.concurrent.CompletableFuture: ...

    @overload
    def fetchSuccessor(self, __a0: List[object]) -> java.util.concurrent.CompletableFuture: ...

    @overload
    def fetchValue(self, __a0: List[unicode]) -> java.util.concurrent.CompletableFuture: ...

    @overload
    def fetchValue(self, __a0: List[object]) -> java.util.concurrent.CompletableFuture: ...

    def filterValid(self, __a0: unicode, __a1: java.util.Map) -> java.util.Map: ...

    def getCachedAttribute(self, __a0: unicode) -> object: ...

    def getCachedAttributes(self) -> java.util.Map: ...

    def getCachedElements(self) -> java.util.Map: ...

    def getCachedSuitable(self, __a0: java.lang.Class) -> ghidra.dbg.target.TargetObject: ...

    def getCallbackAttributes(self) -> java.util.Map: ...

    def getCallbackElements(self) -> java.util.Map: ...

    def getClass(self) -> java.lang.Class: ...

    def getDelegate(self) -> ghidra.dbg.agent.SpiTargetObject: ...

    def getDisplay(self) -> unicode: ...

    def getIndex(self) -> unicode: ...

    def getInstance(self, __a0: com.sun.jdi.Mirror) -> ghidra.dbg.jdi.model.iface2.JdiModelTargetObject: ...

    def getInterfaceNames(self) -> java.util.Collection: ...

    def getInterfaces(self) -> java.util.Collection: ...

    @staticmethod
    def getInterfacesByName(__a0: java.util.Collection) -> List[object]: ...

    def getJoinedPath(self, __a0: unicode) -> unicode: ...

    def getKind(self) -> unicode: ...

    def getManager(self) -> ghidra.dbg.jdi.manager.JdiManager: ...

    def getModel(self) -> ghidra.dbg.DebuggerObjectModel: ...

    def getModelImpl(self) -> ghidra.dbg.jdi.model.JdiModelImpl: ...

    def getName(self) -> unicode: ...

    def getObject(self) -> object: ...

    def getOrder(self) -> int: ...

    def getParent(self) -> ghidra.dbg.target.TargetObject: ...

    def getPath(self) -> List[object]: ...

    def getProtocolID(self) -> object: ...

    def getProxy(self) -> ghidra.dbg.agent.SpiTargetObject: ...

    def getSchema(self) -> ghidra.dbg.target.schema.TargetObjectSchema: ...

    def getShortDisplay(self) -> unicode: ...

    @overload
    def getSuccessor(self, __a0: List[unicode]) -> ghidra.dbg.target.TargetObject: ...

    @overload
    def getSuccessor(self, __a0: List[object]) -> ghidra.dbg.target.TargetObject: ...

    def getTargetObject(self, __a0: object) -> ghidra.dbg.jdi.model.iface2.JdiModelTargetObject: ...

    def getType(self) -> unicode: ...

    def getTypeHint(self) -> unicode: ...

    def getTypedAttributeNowByName(self, __a0: unicode, __a1: java.lang.Class, __a2: object) -> object: ...

    def getValue(self) -> object: ...

    def hashCode(self) -> int: ...

    @overload
    def init(self) -> java.util.concurrent.CompletableFuture: ...

    @overload
    def init(self, __a0: java.util.Map) -> java.util.concurrent.CompletableFuture: ...

    @staticmethod
    def initInterfacesByName() -> java.util.Map: ...

    def invalidateCaches(self) -> java.util.concurrent.CompletableFuture: ...

    def invalidateSubtree(self, __a0: ghidra.dbg.target.TargetObject, __a1: unicode) -> None: ...

    def isModified(self) -> bool: ...

    def isRoot(self) -> bool: ...

    def isValid(self) -> bool: ...

    @staticmethod
    def keyObject(__a0: unicode) -> unicode: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def resetModified(self) -> None: ...

    @overload
    def resync(self) -> java.util.concurrent.CompletableFuture: ...

    @overload
    def resync(self, __a0: ghidra.dbg.DebuggerObjectModel.RefreshBehavior, __a1: ghidra.dbg.DebuggerObjectModel.RefreshBehavior) -> java.util.concurrent.CompletableFuture: ...

    def searchForSuitable(self, __a0: java.lang.Class) -> ghidra.dbg.target.TargetObject: ...

    @overload
    def setAttributes(self, __a0: java.util.Map, __a1: unicode) -> ghidra.dbg.util.CollectionUtils.Delta: ...

    @overload
    def setAttributes(self, __a0: java.util.Collection, __a1: java.util.Map, __a2: unicode) -> ghidra.dbg.util.CollectionUtils.Delta: ...

    @overload
    def setElements(self, __a0: java.util.Collection, __a1: unicode) -> ghidra.dbg.util.CollectionUtils.Delta: ...

    @overload
    def setElements(self, __a0: java.util.Collection, __a1: java.util.Map, __a2: unicode) -> ghidra.dbg.util.CollectionUtils.Delta: ...

    def setModified(self, __a0: bool) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

