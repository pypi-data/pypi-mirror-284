from typing import overload
import ghidra.app.util.bin
import ghidra.program.model.data
import java.lang


class ThreadInfo(object, ghidra.app.util.bin.StructConverter):
    ASCII: ghidra.program.model.data.DataType
    BYTE: ghidra.program.model.data.DataType
    DWORD: ghidra.program.model.data.DataType
    IBO32: ghidra.program.model.data.DataType
    IBO64: ghidra.program.model.data.DataType
    NAME: unicode = u'MINIDUMP_THREAD_INFO'
    POINTER: ghidra.program.model.data.DataType
    QWORD: ghidra.program.model.data.DataType
    SLEB128: ghidra.program.model.data.SignedLeb128DataType
    STRING: ghidra.program.model.data.DataType
    ULEB128: ghidra.program.model.data.UnsignedLeb128DataType
    UTF16: ghidra.program.model.data.DataType
    UTF8: ghidra.program.model.data.DataType
    VOID: ghidra.program.model.data.DataType
    WORD: ghidra.program.model.data.DataType







    def equals(self, __a0: object) -> bool: ...

    def getAffinity(self) -> long: ...

    def getClass(self) -> java.lang.Class: ...

    def getCreateTime(self) -> long: ...

    def getDumpError(self) -> int: ...

    def getDumpFlags(self) -> int: ...

    def getExitStatus(self) -> int: ...

    def getExitTime(self) -> long: ...

    def getKernelTime(self) -> long: ...

    def getStartAddress(self) -> long: ...

    def getThreadId(self) -> int: ...

    def getUserTime(self) -> long: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setAffinity(self, __a0: long) -> None: ...

    def setCreateTime(self, __a0: long) -> None: ...

    def setDumpError(self, __a0: int) -> None: ...

    def setDumpFlags(self, __a0: int) -> None: ...

    def setExitStatus(self, __a0: int) -> None: ...

    def setExitTime(self, __a0: long) -> None: ...

    def setKernelTime(self, __a0: long) -> None: ...

    def setStartAddress(self, __a0: long) -> None: ...

    def setThreadId(self, __a0: int) -> None: ...

    def setUserTime(self, __a0: long) -> None: ...

    def toDataType(self) -> ghidra.program.model.data.DataType: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def affinity(self) -> long: ...

    @affinity.setter
    def affinity(self, value: long) -> None: ...

    @property
    def createTime(self) -> long: ...

    @createTime.setter
    def createTime(self, value: long) -> None: ...

    @property
    def dumpError(self) -> int: ...

    @dumpError.setter
    def dumpError(self, value: int) -> None: ...

    @property
    def dumpFlags(self) -> int: ...

    @dumpFlags.setter
    def dumpFlags(self, value: int) -> None: ...

    @property
    def exitStatus(self) -> int: ...

    @exitStatus.setter
    def exitStatus(self, value: int) -> None: ...

    @property
    def exitTime(self) -> long: ...

    @exitTime.setter
    def exitTime(self, value: long) -> None: ...

    @property
    def kernelTime(self) -> long: ...

    @kernelTime.setter
    def kernelTime(self, value: long) -> None: ...

    @property
    def startAddress(self) -> long: ...

    @startAddress.setter
    def startAddress(self, value: long) -> None: ...

    @property
    def threadId(self) -> int: ...

    @threadId.setter
    def threadId(self, value: int) -> None: ...

    @property
    def userTime(self) -> long: ...

    @userTime.setter
    def userTime(self, value: long) -> None: ...