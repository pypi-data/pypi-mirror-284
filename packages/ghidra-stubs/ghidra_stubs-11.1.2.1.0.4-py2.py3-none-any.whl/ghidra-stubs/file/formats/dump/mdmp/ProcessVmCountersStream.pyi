from typing import overload
import ghidra.app.util.bin
import ghidra.program.model.data
import java.lang


class ProcessVmCountersStream(object, ghidra.app.util.bin.StructConverter):
    ASCII: ghidra.program.model.data.DataType
    BYTE: ghidra.program.model.data.DataType
    DWORD: ghidra.program.model.data.DataType
    IBO32: ghidra.program.model.data.DataType
    IBO64: ghidra.program.model.data.DataType
    NAME: unicode = u'MINIDUMP_PROCESS_VM_COUNTERS'
    POINTER: ghidra.program.model.data.DataType
    QWORD: ghidra.program.model.data.DataType
    SLEB128: ghidra.program.model.data.SignedLeb128DataType
    STRING: ghidra.program.model.data.DataType
    ULEB128: ghidra.program.model.data.UnsignedLeb128DataType
    UTF16: ghidra.program.model.data.DataType
    UTF8: ghidra.program.model.data.DataType
    VOID: ghidra.program.model.data.DataType
    WORD: ghidra.program.model.data.DataType







    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getFlags(self) -> int: ...

    def getJobPeakPrivateCommitUsage(self) -> long: ...

    def getJobPrivateCommitLimit(self) -> long: ...

    def getJobPrivateCommitUsage(self) -> long: ...

    def getJobSharedCommitUsage(self) -> long: ...

    def getJobTotalCommitLimit(self) -> long: ...

    def getPageFaultCount(self) -> int: ...

    def getPagefileUsage(self) -> long: ...

    def getPeakPagefileUsage(self) -> long: ...

    def getPeakVirtualSize(self) -> long: ...

    def getPeakWorkingSetSize(self) -> long: ...

    def getPrivateUsage(self) -> long: ...

    def getPrivateWorkingSetSize(self) -> long: ...

    def getQuotaNonPagedPoolUsage(self) -> long: ...

    def getQuotaPagedPoolUsage(self) -> long: ...

    def getQuotaPeakNonPagedPoolUsage(self) -> long: ...

    def getQuotaPeakPagedPoolUsage(self) -> long: ...

    def getRevision(self) -> int: ...

    def getSharedCommitUsage(self) -> long: ...

    def getVirtualSize(self) -> long: ...

    def getWorkingSetSize(self) -> long: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setFlags(self, __a0: int) -> None: ...

    def setJobPeakPrivateCommitUsage(self, __a0: long) -> None: ...

    def setJobPrivateCommitLimit(self, __a0: long) -> None: ...

    def setJobPrivateCommitUsage(self, __a0: long) -> None: ...

    def setJobSharedCommitUsage(self, __a0: long) -> None: ...

    def setJobTotalCommitLimit(self, __a0: long) -> None: ...

    def setPageFaultCount(self, __a0: int) -> None: ...

    def setPagefileUsage(self, __a0: long) -> None: ...

    def setPeakPagefileUsage(self, __a0: long) -> None: ...

    def setPeakVirtualSize(self, __a0: long) -> None: ...

    def setPeakWorkingSetSize(self, __a0: long) -> None: ...

    def setPrivateUsage(self, __a0: long) -> None: ...

    def setPrivateWorkingSetSize(self, __a0: long) -> None: ...

    def setQuotaNonPagedPoolUsage(self, __a0: long) -> None: ...

    def setQuotaPagedPoolUsage(self, __a0: long) -> None: ...

    def setQuotaPeakNonPagedPoolUsage(self, __a0: long) -> None: ...

    def setQuotaPeakPagedPoolUsage(self, __a0: long) -> None: ...

    def setRevision(self, __a0: int) -> None: ...

    def setSharedCommitUsage(self, __a0: long) -> None: ...

    def setVirtualSize(self, __a0: long) -> None: ...

    def setWorkingSetSize(self, __a0: long) -> None: ...

    def toDataType(self) -> ghidra.program.model.data.DataType: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def flags(self) -> int: ...

    @flags.setter
    def flags(self, value: int) -> None: ...

    @property
    def jobPeakPrivateCommitUsage(self) -> long: ...

    @jobPeakPrivateCommitUsage.setter
    def jobPeakPrivateCommitUsage(self, value: long) -> None: ...

    @property
    def jobPrivateCommitLimit(self) -> long: ...

    @jobPrivateCommitLimit.setter
    def jobPrivateCommitLimit(self, value: long) -> None: ...

    @property
    def jobPrivateCommitUsage(self) -> long: ...

    @jobPrivateCommitUsage.setter
    def jobPrivateCommitUsage(self, value: long) -> None: ...

    @property
    def jobSharedCommitUsage(self) -> long: ...

    @jobSharedCommitUsage.setter
    def jobSharedCommitUsage(self, value: long) -> None: ...

    @property
    def jobTotalCommitLimit(self) -> long: ...

    @jobTotalCommitLimit.setter
    def jobTotalCommitLimit(self, value: long) -> None: ...

    @property
    def pageFaultCount(self) -> int: ...

    @pageFaultCount.setter
    def pageFaultCount(self, value: int) -> None: ...

    @property
    def pagefileUsage(self) -> long: ...

    @pagefileUsage.setter
    def pagefileUsage(self, value: long) -> None: ...

    @property
    def peakPagefileUsage(self) -> long: ...

    @peakPagefileUsage.setter
    def peakPagefileUsage(self, value: long) -> None: ...

    @property
    def peakVirtualSize(self) -> long: ...

    @peakVirtualSize.setter
    def peakVirtualSize(self, value: long) -> None: ...

    @property
    def peakWorkingSetSize(self) -> long: ...

    @peakWorkingSetSize.setter
    def peakWorkingSetSize(self, value: long) -> None: ...

    @property
    def privateUsage(self) -> long: ...

    @privateUsage.setter
    def privateUsage(self, value: long) -> None: ...

    @property
    def privateWorkingSetSize(self) -> long: ...

    @privateWorkingSetSize.setter
    def privateWorkingSetSize(self, value: long) -> None: ...

    @property
    def quotaNonPagedPoolUsage(self) -> long: ...

    @quotaNonPagedPoolUsage.setter
    def quotaNonPagedPoolUsage(self, value: long) -> None: ...

    @property
    def quotaPagedPoolUsage(self) -> long: ...

    @quotaPagedPoolUsage.setter
    def quotaPagedPoolUsage(self, value: long) -> None: ...

    @property
    def quotaPeakNonPagedPoolUsage(self) -> long: ...

    @quotaPeakNonPagedPoolUsage.setter
    def quotaPeakNonPagedPoolUsage(self, value: long) -> None: ...

    @property
    def quotaPeakPagedPoolUsage(self) -> long: ...

    @quotaPeakPagedPoolUsage.setter
    def quotaPeakPagedPoolUsage(self, value: long) -> None: ...

    @property
    def revision(self) -> int: ...

    @revision.setter
    def revision(self, value: int) -> None: ...

    @property
    def sharedCommitUsage(self) -> long: ...

    @sharedCommitUsage.setter
    def sharedCommitUsage(self, value: long) -> None: ...

    @property
    def virtualSize(self) -> long: ...

    @virtualSize.setter
    def virtualSize(self, value: long) -> None: ...

    @property
    def workingSetSize(self) -> long: ...

    @workingSetSize.setter
    def workingSetSize(self, value: long) -> None: ...