from typing import overload
import ghidra.app.util.bin
import ghidra.file.formats.dump.mdmp
import ghidra.program.model.data
import java.lang


class Module(object, ghidra.app.util.bin.StructConverter):
    ASCII: ghidra.program.model.data.DataType
    BYTE: ghidra.program.model.data.DataType
    DWORD: ghidra.program.model.data.DataType
    IBO32: ghidra.program.model.data.DataType
    IBO64: ghidra.program.model.data.DataType
    NAME: unicode = u'MINIDUMP_MODULE'
    POINTER: ghidra.program.model.data.DataType
    QWORD: ghidra.program.model.data.DataType
    SLEB128: ghidra.program.model.data.SignedLeb128DataType
    STRING: ghidra.program.model.data.DataType
    ULEB128: ghidra.program.model.data.UnsignedLeb128DataType
    UTF16: ghidra.program.model.data.DataType
    UTF8: ghidra.program.model.data.DataType
    VOID: ghidra.program.model.data.DataType
    WORD: ghidra.program.model.data.DataType







    def equals(self, __a0: object) -> bool: ...

    def getBaseOfImage(self) -> long: ...

    def getCheckSum(self) -> int: ...

    def getClass(self) -> java.lang.Class: ...

    def getCvRecord(self) -> ghidra.file.formats.dump.mdmp.CvRecord: ...

    def getCvRecordDataSize(self) -> int: ...

    def getCvRecordRVA(self) -> int: ...

    def getDwFileDateLS(self) -> int: ...

    def getDwFileDateMS(self) -> int: ...

    def getDwFileFlags(self) -> int: ...

    def getDwFileFlagsMask(self) -> int: ...

    def getDwFileOS(self) -> int: ...

    def getDwFileSubtype(self) -> int: ...

    def getDwFileType(self) -> int: ...

    def getDwFileVersionLS(self) -> int: ...

    def getDwFileVersionMS(self) -> int: ...

    def getDwProductVersionLS(self) -> int: ...

    def getDwProductVersionMS(self) -> int: ...

    def getDwSignature(self) -> int: ...

    def getDwStrucVersion(self) -> int: ...

    def getMiscRecordDataSize(self) -> int: ...

    def getMiscRecordRVA(self) -> int: ...

    def getModuleName(self) -> unicode: ...

    def getModuleNameLength(self) -> int: ...

    def getModuleNameRVA(self) -> int: ...

    def getSizeOfImage(self) -> long: ...

    def getTimeDateStamp(self) -> int: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setBaseOfImage(self, __a0: long) -> None: ...

    def setCheckSum(self, __a0: int) -> None: ...

    def setCvRecordDataSize(self, __a0: int) -> None: ...

    def setCvRecordRVA(self, __a0: int) -> None: ...

    def setDwFileDateLS(self, __a0: int) -> None: ...

    def setDwFileDateMS(self, __a0: int) -> None: ...

    def setDwFileFlags(self, __a0: int) -> None: ...

    def setDwFileFlagsMask(self, __a0: int) -> None: ...

    def setDwFileOS(self, __a0: int) -> None: ...

    def setDwFileSubtype(self, __a0: int) -> None: ...

    def setDwFileType(self, __a0: int) -> None: ...

    def setDwFileVersionLS(self, __a0: int) -> None: ...

    def setDwFileVersionMS(self, __a0: int) -> None: ...

    def setDwProductVersionLS(self, __a0: int) -> None: ...

    def setDwProductVersionMS(self, __a0: int) -> None: ...

    def setDwSignature(self, __a0: int) -> None: ...

    def setDwStrucVersion(self, __a0: int) -> None: ...

    def setMiscRecordDataSize(self, __a0: int) -> None: ...

    def setMiscRecordRVA(self, __a0: int) -> None: ...

    def setModuleNameRVA(self, __a0: int) -> None: ...

    def setSizeOfImage(self, __a0: long) -> None: ...

    def setTimeDateStamp(self, __a0: int) -> None: ...

    def toDataType(self) -> ghidra.program.model.data.DataType: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def baseOfImage(self) -> long: ...

    @baseOfImage.setter
    def baseOfImage(self, value: long) -> None: ...

    @property
    def checkSum(self) -> int: ...

    @checkSum.setter
    def checkSum(self, value: int) -> None: ...

    @property
    def cvRecord(self) -> ghidra.file.formats.dump.mdmp.CvRecord: ...

    @property
    def cvRecordDataSize(self) -> int: ...

    @cvRecordDataSize.setter
    def cvRecordDataSize(self, value: int) -> None: ...

    @property
    def cvRecordRVA(self) -> int: ...

    @cvRecordRVA.setter
    def cvRecordRVA(self, value: int) -> None: ...

    @property
    def dwFileDateLS(self) -> int: ...

    @dwFileDateLS.setter
    def dwFileDateLS(self, value: int) -> None: ...

    @property
    def dwFileDateMS(self) -> int: ...

    @dwFileDateMS.setter
    def dwFileDateMS(self, value: int) -> None: ...

    @property
    def dwFileFlags(self) -> int: ...

    @dwFileFlags.setter
    def dwFileFlags(self, value: int) -> None: ...

    @property
    def dwFileFlagsMask(self) -> int: ...

    @dwFileFlagsMask.setter
    def dwFileFlagsMask(self, value: int) -> None: ...

    @property
    def dwFileOS(self) -> int: ...

    @dwFileOS.setter
    def dwFileOS(self, value: int) -> None: ...

    @property
    def dwFileSubtype(self) -> int: ...

    @dwFileSubtype.setter
    def dwFileSubtype(self, value: int) -> None: ...

    @property
    def dwFileType(self) -> int: ...

    @dwFileType.setter
    def dwFileType(self, value: int) -> None: ...

    @property
    def dwFileVersionLS(self) -> int: ...

    @dwFileVersionLS.setter
    def dwFileVersionLS(self, value: int) -> None: ...

    @property
    def dwFileVersionMS(self) -> int: ...

    @dwFileVersionMS.setter
    def dwFileVersionMS(self, value: int) -> None: ...

    @property
    def dwProductVersionLS(self) -> int: ...

    @dwProductVersionLS.setter
    def dwProductVersionLS(self, value: int) -> None: ...

    @property
    def dwProductVersionMS(self) -> int: ...

    @dwProductVersionMS.setter
    def dwProductVersionMS(self, value: int) -> None: ...

    @property
    def dwSignature(self) -> int: ...

    @dwSignature.setter
    def dwSignature(self, value: int) -> None: ...

    @property
    def dwStrucVersion(self) -> int: ...

    @dwStrucVersion.setter
    def dwStrucVersion(self, value: int) -> None: ...

    @property
    def miscRecordDataSize(self) -> int: ...

    @miscRecordDataSize.setter
    def miscRecordDataSize(self, value: int) -> None: ...

    @property
    def miscRecordRVA(self) -> int: ...

    @miscRecordRVA.setter
    def miscRecordRVA(self, value: int) -> None: ...

    @property
    def moduleName(self) -> unicode: ...

    @property
    def moduleNameLength(self) -> int: ...

    @property
    def moduleNameRVA(self) -> int: ...

    @moduleNameRVA.setter
    def moduleNameRVA(self, value: int) -> None: ...

    @property
    def sizeOfImage(self) -> long: ...

    @sizeOfImage.setter
    def sizeOfImage(self, value: long) -> None: ...

    @property
    def timeDateStamp(self) -> int: ...

    @timeDateStamp.setter
    def timeDateStamp(self, value: int) -> None: ...