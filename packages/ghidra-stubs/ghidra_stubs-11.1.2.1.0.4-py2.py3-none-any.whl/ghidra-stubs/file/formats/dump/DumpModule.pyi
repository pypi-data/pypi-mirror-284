from typing import overload
import java.lang


class DumpModule(object):




    def __init__(self, __a0: unicode, __a1: int, __a2: long, __a3: long): ...



    def equals(self, __a0: object) -> bool: ...

    def getBase(self) -> long: ...

    def getClass(self) -> java.lang.Class: ...

    def getIndex(self) -> int: ...

    def getName(self) -> unicode: ...

    def getSize(self) -> long: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setBase(self, __a0: long) -> None: ...

    def setIndex(self, __a0: int) -> None: ...

    def setName(self, __a0: unicode) -> None: ...

    def setSize(self, __a0: long) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def base(self) -> long: ...

    @base.setter
    def base(self, value: long) -> None: ...

    @property
    def index(self) -> int: ...

    @index.setter
    def index(self, value: int) -> None: ...

    @property
    def name(self) -> unicode: ...

    @name.setter
    def name(self, value: unicode) -> None: ...

    @property
    def size(self) -> long: ...

    @size.setter
    def size(self, value: long) -> None: ...