from typing import overload
import java.lang


class MemoryInfo(object):
    NAME: unicode = u'MINIDUMP_MEMORY_INFO'







    def equals(self, __a0: object) -> bool: ...

    def getBaseAddress(self) -> long: ...

    def getClass(self) -> java.lang.Class: ...

    def getDescription(self) -> unicode: ...

    def getPermissions(self) -> unicode: ...

    def getRegionSize(self) -> long: ...

    def getRva(self) -> long: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setBaseAddress(self, __a0: long) -> None: ...

    def setDescription(self, __a0: unicode) -> None: ...

    def setPermissions(self, __a0: unicode) -> None: ...

    def setRegionSize(self, __a0: long) -> None: ...

    def setRva(self, __a0: long) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def baseAddress(self) -> long: ...

    @baseAddress.setter
    def baseAddress(self, value: long) -> None: ...

    @property
    def description(self) -> unicode: ...

    @description.setter
    def description(self, value: unicode) -> None: ...

    @property
    def permissions(self) -> unicode: ...

    @permissions.setter
    def permissions(self, value: unicode) -> None: ...

    @property
    def regionSize(self) -> long: ...

    @regionSize.setter
    def regionSize(self, value: long) -> None: ...

    @property
    def rva(self) -> long: ...

    @rva.setter
    def rva(self, value: long) -> None: ...