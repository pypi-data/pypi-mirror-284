from typing import overload
import java.lang


class SquashFragment(object):




    def __init__(self, __a0: ghidra.app.util.bin.BinaryReader): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getFragmentOffset(self) -> long: ...

    def getFragmentSize(self) -> long: ...

    def getUnusedField(self) -> int: ...

    def hashCode(self) -> int: ...

    def isCompressed(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def compressed(self) -> bool: ...

    @property
    def fragmentOffset(self) -> long: ...

    @property
    def fragmentSize(self) -> long: ...

    @property
    def unusedField(self) -> int: ...