from typing import overload
import ghidra.file.formats.android.art
import ghidra.file.formats.android.art.headers
import ghidra.program.model.data
import ghidra.program.model.listing
import ghidra.util.task
import java.lang


class ArtHeader_030(ghidra.file.formats.android.art.headers.ArtHeader_029):




    def __init__(self, __a0: ghidra.app.util.bin.BinaryReader): ...



    def equals(self, __a0: object) -> bool: ...

    def getArtMethodCountForVersion(self) -> int: ...

    def getBootOatBegin(self) -> int: ...

    def getBootOatSize(self) -> int: ...

    def getClass(self) -> java.lang.Class: ...

    def getCompressedOffset(self) -> long: ...

    def getCompressedSize(self) -> int: ...

    def getDecompressedOffset(self) -> long: ...

    def getDecompressedSize(self) -> int: ...

    def getImageBegin(self) -> int: ...

    def getImageSize(self) -> int: ...

    def getIsPic(self) -> int: ...

    def getMagic(self) -> unicode: ...

    def getOatChecksum(self) -> int: ...

    def getOatDataBegin(self) -> int: ...

    def getOatDataEnd(self) -> int: ...

    def getOatFileBegin(self) -> int: ...

    def getOatFileEnd(self) -> int: ...

    def getPointerSize(self) -> int: ...

    def getStorageMode(self) -> ghidra.file.formats.android.art.ArtStorageMode: ...

    def getVersion(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def markup(self, __a0: ghidra.program.model.listing.Program, __a1: ghidra.util.task.TaskMonitor) -> None: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toDataType(self) -> ghidra.program.model.data.DataType: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def artMethodCountForVersion(self) -> int: ...