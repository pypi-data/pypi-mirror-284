from typing import List
from typing import overload
import ghidra.app.util.bin
import ghidra.program.model.data
import java.lang


class Ext4XattrEntry(object, ghidra.app.util.bin.StructConverter):
    ASCII: ghidra.program.model.data.DataType
    BYTE: ghidra.program.model.data.DataType
    DWORD: ghidra.program.model.data.DataType
    IBO32: ghidra.program.model.data.DataType
    IBO64: ghidra.program.model.data.DataType
    POINTER: ghidra.program.model.data.DataType
    QWORD: ghidra.program.model.data.DataType
    SLEB128: ghidra.program.model.data.SignedLeb128DataType
    STRING: ghidra.program.model.data.DataType
    ULEB128: ghidra.program.model.data.UnsignedLeb128DataType
    UTF16: ghidra.program.model.data.DataType
    UTF8: ghidra.program.model.data.DataType
    VOID: ghidra.program.model.data.DataType
    WORD: ghidra.program.model.data.DataType



    @overload
    def __init__(self, __a0: ghidra.app.util.bin.BinaryReader): ...

    @overload
    def __init__(self, __a0: ghidra.app.util.bin.ByteProvider): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getE_hash(self) -> int: ...

    def getE_name(self) -> List[int]: ...

    def getE_name_index(self) -> int: ...

    def getE_name_len(self) -> int: ...

    def getE_value_block(self) -> int: ...

    def getE_value_offs(self) -> int: ...

    def getE_value_size(self) -> int: ...

    def getName(self) -> unicode: ...

    def getValue(self) -> List[int]: ...

    def hashCode(self) -> int: ...

    def isEndOfListMarker(self) -> bool: ...

    def isValid(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setValue(self, __a0: List[int]) -> None: ...

    def toDataType(self) -> ghidra.program.model.data.DataType: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def e_hash(self) -> int: ...

    @property
    def e_name(self) -> List[int]: ...

    @property
    def e_name_index(self) -> int: ...

    @property
    def e_name_len(self) -> int: ...

    @property
    def e_value_block(self) -> int: ...

    @property
    def e_value_offs(self) -> int: ...

    @property
    def e_value_size(self) -> int: ...

    @property
    def endOfListMarker(self) -> bool: ...

    @property
    def name(self) -> unicode: ...

    @property
    def valid(self) -> bool: ...

    @property
    def value(self) -> List[int]: ...

    @value.setter
    def value(self, value: List[int]) -> None: ...