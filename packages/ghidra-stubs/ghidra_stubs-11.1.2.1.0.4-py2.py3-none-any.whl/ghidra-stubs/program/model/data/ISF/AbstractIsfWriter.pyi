from typing import overload
import com.google.gson
import ghidra.util.task
import java.io
import java.lang
import java.lang.annotation


class AbstractIsfWriter(object, java.io.Closeable):





    class Exclude(java.lang.annotation.Annotation, object):








        def annotationType(self) -> java.lang.Class: ...

        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...



    def __init__(self, __a0: java.io.Writer): ...



    def close(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getObject(self, __a0: com.google.gson.JsonElement, __a1: java.lang.Class) -> object: ...

    def getResults(self) -> com.google.gson.JsonArray: ...

    def getRootObject(self, __a0: ghidra.util.task.TaskMonitor) -> com.google.gson.JsonObject: ...

    def getTree(self, __a0: object) -> com.google.gson.JsonElement: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def write(self, __a0: com.google.gson.JsonObject) -> None: ...

    @property
    def results(self) -> com.google.gson.JsonArray: ...