"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ...models.components import httpmetadata as components_httpmetadata
from alloypythonsdk import utils
from dataclasses_json import Undefined, dataclass_json
from typing import Optional


@dataclasses.dataclass
class GetWorkflowAnalyticsRequest:
    workflow_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'workflowId', 'style': 'simple', 'explode': False }})
    r"""The Id of the workflow you want to find errors for"""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetWorkflowAnalyticsResponseBody:
    r"""200"""
    total_app_actions: Optional[int] = dataclasses.field(default=0, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalAppActions'), 'exclude': lambda f: f is None }})
    total_workflow_runs: Optional[int] = dataclasses.field(default=0, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalWorkflowRuns'), 'exclude': lambda f: f is None }})
    total_errors: Optional[int] = dataclasses.field(default=0, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalErrors'), 'exclude': lambda f: f is None }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetWorkflowAnalyticsResponse:
    http_meta: components_httpmetadata.HTTPMetadata = dataclasses.field(metadata={'dataclasses_json': { 'exclude': lambda f: True }})
    object: Optional[GetWorkflowAnalyticsResponseBody] = dataclasses.field(default=None)
    r"""200"""
    

