"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ...models.components import httpmetadata as components_httpmetadata
from alloypythonsdk import utils
from dataclasses_json import Undefined, dataclass_json
from typing import List, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BatchCreateUsersRequestBody:
    users: Optional[str] = dataclasses.field(default='[{ 	username: \'user123\', 	fullName: \'Joe Smoe\' }, { 	username: \'user456\' }, { 	username: \'janedoe\', 	fullName: \'Jane Doe\' }]', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('users'), 'exclude': lambda f: f is None }})
    r"""An array of `username` and `fullName` to be created.  Note that `username` is mandatory but `fullName` is optional. Limited to 1000 users at a time."""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InvalidUsers:
    full_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fullName'), 'exclude': lambda f: f is None }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BatchCreateUsersResponseBody:
    r"""200"""
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    invalid_users: Optional[List[InvalidUsers]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invalidUsers'), 'exclude': lambda f: f is None }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BatchCreateUsersResponse:
    http_meta: components_httpmetadata.HTTPMetadata = dataclasses.field(metadata={'dataclasses_json': { 'exclude': lambda f: True }})
    object: Optional[BatchCreateUsersResponseBody] = dataclasses.field(default=None)
    r"""200"""
    

