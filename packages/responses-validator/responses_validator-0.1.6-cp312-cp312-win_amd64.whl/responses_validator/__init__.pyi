from _typeshed import Incomplete
from dataclasses import dataclass

logger: Incomplete

@dataclass
class ResponseValidator:
    status_code: str = ...
    headers: dict = ...
    cookies: dict = ...
    text: dict | str = ...
    json: dict | str | int = ...
    function: str = ...
    def __post_init__(self) -> None: ...
    def is_valid(self, resp, raise_exception: bool = True): ...
    def validate_status_code(self, resp_status_code): ...
    def validate_headers(self, resp_headers): ...
    def validate_cookies(self, resp_cookies): ...
    def validate_text(self, resp_text): ...
    def validate_json(self, resp_json_func): ...
    def validate_function(self, resp): ...
    @property
    def errors(self) -> dict[str, str]: ...
    def __init__(self, status_code=..., headers=..., cookies=..., text=..., json=..., function=...) -> None: ...

class ResponseAssertionError(AssertionError): ...

def validator(resp, status_code: str | int = '*', headers: dict | None = None, cookies: dict | None = None, text: str | dict = '', json: str | dict = '', function: str = '', raise_exception: bool = True): ...
