Metadata-Version: 2.1
Name: bob.learn.em
Version: 3.3.1
Summary: Bindings for EM machines and trainers of Bob
Author-email: Andre Anjos <andre.anjos@idiap.ch>
License: BSD 3-Clause License
Project-URL: documentation, https://www.idiap.ch/software/bob/docs/bob/bob.learn.em/v3.3.1/sphinx/
Project-URL: homepage, https://pypi.org/project/bob.learn.em/
Project-URL: repository, https://gitlab.idiap.ch/bob/bob.learn.em
Project-URL: changelog, https://gitlab.idiap.ch/bob/bob.learn.em/-/releases
Keywords: bob,em,expectation-maximization
Classifier: Framework :: Bob
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: bob ==12.1.1
Requires-Dist: dask ==2024.5.2
Requires-Dist: dask-ml ==2024.3.20
Requires-Dist: h5py ~=3.7
Requires-Dist: numpy ~=1.26
Requires-Dist: scikit-learn ~=1.4
Provides-Extra: doc
Requires-Dist: auto-intersphinx ; extra == 'doc'
Requires-Dist: sphinx ; extra == 'doc'
Requires-Dist: sphinx-rtd-theme ; extra == 'doc'
Requires-Dist: sphinx-autodoc-typehints ; extra == 'doc'
Requires-Dist: sphinxcontrib-programoutput ; extra == 'doc'
Requires-Dist: matplotlib ; extra == 'doc'
Provides-Extra: qa
Requires-Dist: pre-commit ; extra == 'qa'
Provides-Extra: test
Requires-Dist: pytest ; extra == 'test'
Requires-Dist: pytest-cov ; extra == 'test'
Requires-Dist: coverage ; extra == 'test'


[![badge doc](https://img.shields.io/badge/docs-v3.3.1-orange.svg)](https://www.idiap.ch/software/bob/docs/bob/bob.learn.em/v3.3.1/sphinx/index.html)
[![badge pipeline](https://gitlab.idiap.ch/bob/bob.learn.em/badges/v3.3.1/pipeline.svg)](https://gitlab.idiap.ch/bob/bob.learn.em/commits/v3.3.1)
[![badge coverage](https://gitlab.idiap.ch/bob/bob.learn.em/badges/v3.3.1/coverage.svg)](https://www.idiap.ch/software/bob/docs/bob/bob.learn.em/v3.3.1/coverage)
[![badge gitlab](https://img.shields.io/badge/gitlab-project-0000c0.svg)](https://gitlab.idiap.ch/bob/bob.learn.em)

# Expectation Maximization Machine Learning Tools

This package is part of the signal-processing and machine learning toolbox
[Bob](https://www.idiap.ch/software/bob). It contains routines for learning
probabilistic models via Expectation Maximization (EM).

The EM algorithm is an iterative method that estimates parameters for
statistical models, where the model depends on unobserved latent variables. The
EM iteration alternates between performing an expectation (E) step, which
creates a function for the expectation of the log-likelihood evaluated using
the current estimate for the parameters, and a maximization (M) step, which
computes parameters maximizing the expected log-likelihood found on the E step.
These parameter-estimates are then used to determine the distribution of the
latent variables in the next E step.

The package includes the machine definition per se and a selection of different
trainers for specialized purposes:

 - Maximum Likelihood (ML)
 - Maximum a Posteriori (MAP)
 - K-Means
 - Inter Session Variability Modelling (ISV)
 - Joint Factor Analysis (JFA)
 - Total Variability Modeling (iVectors)
 - Probabilistic Linear Discriminant Analysis (PLDA)
 - EM Principal Component Analysis (EM-PCA)


## Installation

Complete Bob's [installation](https://www.idiap.ch/software/bob/install)
instructions. Then, to install this package, run:

``` sh
conda install bob.learn.em
```


## Contact

For questions or reporting issues to this software package, contact our
development [mailing list](https://www.idiap.ch/software/bob/discuss).
