Metadata-Version: 2.1
Name: aioaquacell
Version: 0.2.0
Summary: Asynchronous library to retrieve details of your Aquacell water softener device
Home-page: https://github.com/Jordi1990/aioaquacell
Download-URL: https://github.com/Jordi1990/aioaquacell/archive/refs/tags/v0.2.0.tar.gz
Author: Jordi Epema
Author-email: jordi.epema@gmail.com
License: Apache License 2.0
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: aiohttp
Requires-Dist: requests_aws4auth
Requires-Dist: pycognito
Requires-Dist: aws_request_signer
Requires-Dist: aiobotocore
Requires-Dist: botocore
Requires-Dist: boto3
Requires-Dist: attr

# Aioaquacell

Asynchronous library to retrieve details of your Aquacell water softener device.
This API is reverse engineered from the official Android application.

## Requirements

- aiohttp
- aiobotocore
- requests_aws4auth
- pycognito
- aws_request_signer
- botocore
- botocore3

## Usage

```python
userName = "<email address>"
password = "<password>"


async def main():
    api = AquacellApi()
    await api.authenticate(userName, password)
    # Get the refresh token
    print(api.refresh_token)
    
    softeners = await api.get_all_softeners()
    for softener in softeners:
        print(softener.name)


if __name__ == "__main__":
    loop = asyncio.get_event_loop()
    loop.run_until_complete(main())
```
### Authenticate using refresh token
```python
refresh_token = "<refresh token>"
api = AquacellApi()
await api.authenticate(refresh_token)
```
