Metadata-Version: 2.1
Name: ctc-asr-inference
Version: 0.1.0
Summary: CTC-based speech-recognition
Home-page: https://github.com:SELMA-project/ctc-asr-inference
License: MIT
Author: Tilo Himmelsbach
Author-email: dertilo@gmail.com
Requires-Python: >=3.10,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Provides-Extra: nemo
Requires-Dist: buildable-dataclasses (>=0.1.0,<0.2.0)
Requires-Dist: building-kenlms (>=0.1.0,<0.2.0)
Requires-Dist: misc-python-utils (>=0.1.3,<0.2.0)
Requires-Dist: nemo-toolkit[asr] (>=1.20.0,<2.0.0) ; extra == "nemo"
Requires-Dist: protobuf (>=3.20.0,<4.0.0)
Requires-Dist: pyctcdecode (>=0.5.0,<0.6.0)
Requires-Dist: speech-utils (>=0.1.0,<0.2.0)
Requires-Dist: torch (>1.12.0) ; extra == "nemo"
Requires-Dist: torchaudio (>0.12.0) ; extra == "nemo"
Requires-Dist: transformers (>=4.38.2,<5.0.0)
Project-URL: Repository, https://github.com:SELMA-project/ctc-asr-inference
Description-Content-Type: text/markdown

![tests](https://github.com/SELMA-project/ctc-asr-inference/actions/workflows/tests.yml/badge.svg)
[![pypi](https://img.shields.io/pypi/v/ctc-asr-inference.svg)](https://pypi.python.org/project/ctc-asr-inference)
[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)](https://opensource.org/licenses/MIT)
[![bear-ified](https://raw.githubusercontent.com/beartype/beartype-assets/main/badge/bear-ified.svg)](https://beartype.readthedocs.io)
[![Ruff-ified](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json)](https://github.com/dertilo/python-linters/blob/master/python_linters/ruff.toml)

# ctc-asr-inference
- ctc-logits-inferencer:
  - [huggingface+wav2vec2-based](ctc_asr_inference/ctc_logits_inferencer/hfwav2vec2_logits_inferencer.py)
  - [nvidia/nemo-based](ctc_asr_inference/ctc_logits_inferencer/nemo_asr_logits_inferencer.py)
- ctc-decoder:
  - [hf-greedy](ctc_asr_inference/ctc_decoding/huggingface_ctc_decoding.py)
  - [pyctc-based](ctc_asr_inference/ctc_decoding/pyctc_decoder.py)
- chunked-streaming-inference:
  - [ASR-Chunking-Inference-Gluing-Pipeline](ctc_asr_inference/chunked_inference/asr_chunk_infer_glue_pipeline.py)

