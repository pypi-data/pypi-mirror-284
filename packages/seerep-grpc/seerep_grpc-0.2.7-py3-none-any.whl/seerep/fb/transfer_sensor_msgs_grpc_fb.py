# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!

import grpc

class TransferSensorMsgsStub(object):
  """ Interface exported by the server. """  
  
  def __init__(self, channel):
    """ Constructor. 
    
    Args: 
    channel: A grpc.Channel. 
    """
    
    self.TransferHeader = channel.unary_unary(
      "/seerep.fb.TransferSensorMsgs/TransferHeader"
      )
    
    self.TransferPoint = channel.unary_unary(
      "/seerep.fb.TransferSensorMsgs/TransferPoint"
      )
    
    self.TransferQuaternion = channel.unary_unary(
      "/seerep.fb.TransferSensorMsgs/TransferQuaternion"
      )
    
    self.TransferPose = channel.unary_unary(
      "/seerep.fb.TransferSensorMsgs/TransferPose"
      )
    
    self.TransferPoseStamped = channel.unary_unary(
      "/seerep.fb.TransferSensorMsgs/TransferPoseStamped"
      )
    

class TransferSensorMsgsServicer(object):
  """ Interface exported by the server. """  
  
  def TransferHeader(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')
  
  
  def TransferPoint(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')
  
  
  def TransferQuaternion(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')
  
  
  def TransferPose(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')
  
  
  def TransferPoseStamped(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')
  
  

def add_TransferSensorMsgsServicer_to_server(servicer, server):
  rpc_method_handlers = {
    'TransferHeader': grpc.unary_unary_rpc_method_handler(
      servicer.TransferHeader
    ),
    'TransferPoint': grpc.unary_unary_rpc_method_handler(
      servicer.TransferPoint
    ),
    'TransferQuaternion': grpc.unary_unary_rpc_method_handler(
      servicer.TransferQuaternion
    ),
    'TransferPose': grpc.unary_unary_rpc_method_handler(
      servicer.TransferPose
    ),
    'TransferPoseStamped': grpc.unary_unary_rpc_method_handler(
      servicer.TransferPoseStamped
    ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
    'seerep.fb.TransferSensorMsgs', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))

