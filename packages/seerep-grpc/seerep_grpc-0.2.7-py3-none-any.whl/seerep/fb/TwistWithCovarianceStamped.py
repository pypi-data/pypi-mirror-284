# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fb

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TwistWithCovarianceStamped(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TwistWithCovarianceStamped()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTwistWithCovarianceStamped(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # TwistWithCovarianceStamped
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TwistWithCovarianceStamped
    def Header(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from seerep.fb.Header import Header
            obj = Header()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TwistWithCovarianceStamped
    def Twist(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from seerep.fb.TwistWithCovariance import TwistWithCovariance
            obj = TwistWithCovariance()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def Start(builder): builder.StartObject(2)
def TwistWithCovarianceStampedStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddHeader(builder, header): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(header), 0)
def TwistWithCovarianceStampedAddHeader(builder, header):
    """This method is deprecated. Please switch to AddHeader."""
    return AddHeader(builder, header)
def AddTwist(builder, twist): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(twist), 0)
def TwistWithCovarianceStampedAddTwist(builder, twist):
    """This method is deprecated. Please switch to AddTwist."""
    return AddTwist(builder, twist)
def End(builder): return builder.EndObject()
def TwistWithCovarianceStampedEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)