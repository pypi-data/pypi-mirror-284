[tool.poetry]
name = "iicd_workshop_2024"
version = "0.0.4"
description = "Code accompanying the iicd workshop 2024"
authors = ["Achille Nazaret <achille.nazaret@gmail.com>"]
repository = "https://github.com/anazaret/iicd-workshop-2024"
documentation = "https://anazaret.github.io/iicd-workshop-2024/"
readme = "README.md"
packages = [
  {include = "iicd_workshop_2024/*.py"},
]

[tool.poetry.dependencies]

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
mypy = "^1.5.1"
pre-commit = "^3.4.0"
tox = "^4.11.1"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.2.7"
mkdocstrings = {extras = ["python"], version = "^0.23.0"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
files = ["iicd_workshop_2024"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py39"
line-length = 100
fix = true
select = [
    "YTT", # flake8-2020
    "S", # flake8-bandit
    "B", # flake8-bugbear
    "A", # flake8-builtins
    "C4",# flake8-comprehensions
    "T10", # flake8-debugger
    "SIM", # flake8-simplify
    "I", # isort
    "C90", # mccabe
    "E", "W", # pycodestyle
    "F", # pyflakes
    "PGH", # pygrep-hooks
    "UP", # pyupgrade
    "RUF", # ruff
    "TRY", # tryceratops
]
ignore = [
    "E501", # pycodestyle line-too-long
    "E731", # pycodestyle lambda-assignment
]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["iicd_workshop_2024"]


[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
