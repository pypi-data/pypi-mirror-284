variables:
  ENV_NAME: test_env

trigger:
  tags:
    include:
    # build on any tag
    - '*'
  branches:
    include:
    # build on all branches
    - '*'

resources:
  repositories:
    - repository: templates
      type: github
      name: hyperspy/ci-scripts
      # For more details on service connection endpoint, see
      # https://docs.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints
      endpoint: hyperspy # Azure DevOps service connection
      ref: use_mamba

strategy:
  matrix:
    Linux_Python310:
      vmImage: 'ubuntu-latest'
      PYTHON_VERSION: '3.10'
      MAMBAFORGE_PATH: $(Agent.BuildDirectory)/mambaforge
    Linux_Python39:
      vmImage: 'ubuntu-latest'
      PYTHON_VERSION: '3.9'
      MAMBAFORGE_PATH: $(Agent.BuildDirectory)/mambaforge
    Linux_Python38:
      vmImage: 'ubuntu-latest'
      PYTHON_VERSION: '3.8'
      MAMBAFORGE_PATH: $(Agent.BuildDirectory)/mambaforge
    MacOS_Python38:
      vmImage: 'macOS-latest'
      PYTHON_VERSION: '3.8'
      MAMBAFORGE_PATH: $(Agent.BuildDirectory)/mambaforge
    MacOS_Python310:
      vmImage: 'macOS-latest'
      PYTHON_VERSION: '3.10'
      MAMBAFORGE_PATH: $(Agent.BuildDirectory)/mambaforge
    Windows_Python38:
      vmImage: 'windows-latest'
      PYTHON_VERSION: '3.8'
      MAMBAFORGE_PATH: $(Agent.BuildDirectory)\mambaforge
    Windows_Python310:
      vmImage: 'windows-latest'
      PYTHON_VERSION: '3.10'
      MAMBAFORGE_PATH: $(Agent.BuildDirectory)\mambaforge

pool:
  vmImage: '$(vmImage)'

steps:
- checkout: self
  fetchDepth: '0' # Fetch all commits for setuptools_scm 
  fetchTags: 'true' #  tags necessary for setuptools_scm
- bash: |
    git remote add upstream https://github.com/hyperspy/rosettasciio.git
    git fetch upstream --tags
  condition: ne(variables['Build.Repository.Name'], 'hyperspy/rosettasciio')
  displayName: Fetch tags from hyperspy/rosettasciio
- template: azure_pipelines/clone_ci-scripts_repo.yml@templates
- template: azure_pipelines/install_mambaforge.yml@templates
- template: azure_pipelines/activate_conda.yml@templates
- template: azure_pipelines/setup_anaconda_packages.yml@templates

- bash: |
    source activate $ENV_NAME
    pip install --no-deps -e .
    conda list
  displayName: Install package

# Note we must use `-n 2` argument for pytest-xdist due to
# https://github.com/pytest-dev/pytest-xdist/issues/9.
- bash: |
    source activate $ENV_NAME
    pytest --pyargs rsciio --reruns 3 -n 2
  displayName: Run test suite

- template: azure_pipelines/generate_distribution.yml@templates
- template: azure_pipelines/publish_distribution.yml@templates
# - template: azure_pipelines/update_github_release.yml@templates
#   parameters:
#     # Set the token generated with github from the developer settings/personal
#     # access tokens menu in azure pipeline
#     github_token_name: ''
