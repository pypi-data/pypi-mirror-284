# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ..core.unchecked_base_model import UncheckedBaseModel
from .chat_message_with_tool_call_content import ChatMessageWithToolCallContent
from .chat_role import ChatRole
from .function_tool import FunctionTool
from .tool_call import ToolCall


class ChatMessageWithToolCall(UncheckedBaseModel):
    content: typing.Optional[ChatMessageWithToolCallContent] = pydantic_v1.Field(default=None)
    """
    The content of the message.
    """

    name: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    Optional name of the message author.
    """

    tool_call_id: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    Tool call that this message is responding to.
    """

    role: ChatRole = pydantic_v1.Field()
    """
    Role of the message author.
    """

    tool_calls: typing.Optional[typing.List[ToolCall]] = pydantic_v1.Field(default=None)
    """
    A list of tool calls requested by the assistant.
    """

    tool_call: typing.Optional[FunctionTool] = pydantic_v1.Field(default=None)
    """
    NB: Deprecated in favour of tool_calls. A tool call requested by the assistant.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
