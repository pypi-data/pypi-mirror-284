# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ..core.unchecked_base_model import UncheckedBaseModel
from .evaluation_result_response_value import EvaluationResultResponseValue


class EvaluationResultResponse(UncheckedBaseModel):
    id: str
    evaluator_id: str
    evaluator_version_id: str
    evaluation_id: typing.Optional[str] = None
    log_id: str
    log: typing.Optional[LogResponse] = None
    version_id: typing.Optional[str] = None
    version: typing.Optional[typing.Any] = None
    value: typing.Optional[EvaluationResultResponseValue] = None
    error: typing.Optional[str] = None
    updated_at: dt.datetime
    created_at: dt.datetime
    llm_evaluator_log: typing.Optional[LogResponse] = None

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}


from .log_response import LogResponse  # noqa: E402

EvaluationResultResponse.update_forward_refs()
