# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ..core.unchecked_base_model import UncheckedBaseModel


class BooleanEvaluatorVersionStats(UncheckedBaseModel):
    """
    Base attributes for stats for an Evaluator Version-Evaluated Version pair
    in the Evaluation Report.
    """

    evaluator_version_id: str = pydantic_v1.Field()
    """
    Unique identifier for the Evaluator Version.
    """

    total_logs: int = pydantic_v1.Field()
    """
    The total number of Logs generated by this Evaluator Version on the Evaluated Version's Logs. This includes Nulls and Errors.
    """

    num_judgments: int = pydantic_v1.Field()
    """
    The total number of Evaluator judgments for this Evaluator Version. This excludes Nulls and Errors.
    """

    num_nulls: int = pydantic_v1.Field()
    """
    The total number of null judgments (i.e. abstentions) for this Evaluator Version.
    """

    num_errors: int = pydantic_v1.Field()
    """
    The total number of errored Evaluators for this Evaluator Version.
    """

    num_true: int = pydantic_v1.Field()
    """
    The total number of `True` judgments for this Evaluator Version.
    """

    num_false: int = pydantic_v1.Field()
    """
    The total number of `False` judgments for this Evaluator Version.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
