name: Publish wheels and sdist tarball to PyPi

on:
  push:
    branches: ['main']
    tags: ['v?[0-9]+.[0-9]+.[0-9]+']
  pull_request:

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
        fetch-depth: 0
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
    - name: Build a source tarball
      run: |
        python -m pip install build
        python -m build
    - name: Store sdist as artifact
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/*.tar.gz

  test_sdist:
    name: Test source distribution

    runs-on: ubuntu-latest
    needs: [build_sdist]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
    - name: Download artifacts produced during the build_wheels and build_sdist jobs
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libopenmpi-dev
    - name: Install package, clean local directory
      run: |
        python -m pip install dist/*
        python -m pip install pytest mock
        # Remove with Spark 4, 3.* is buggy and requires an undeclared distutils
        python -m pip install 'setuptools; python_version >= "3.12"'
    - name: Run tests
      run: |
        pytest tests

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 50

    # Used to host cibuildwheel
    - uses: actions/setup-python@v5

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel

    - name: Build wheels
      run: python -m cibuildwheel --output-dir dist
      env:
        CIBW_TEST_COMMAND: "pytest ${{ github.event_name == 'push' && '--run-slow' || '' }} {project}/tests"

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
        path: ./dist/*.whl

  publish:
    name: Publish package to PyPI
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    runs-on: ubuntu-latest
    needs: [build_wheels, build_sdist, test_sdist]

    environment:
      name: publish_pypi
      url: https://pypi.org/p/functionalizer

    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
    - name: Download artifacts produced by the build_sdist job
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Download artifacts produced by the build_wheels job
      uses: actions/download-artifact@v4
      with:
        pattern: cibw-wheels-*
        path: dist/
        merge-multiple: true

    - name: Display structure of downloaded files
      run: ls -R
      working-directory: dist

    - name: Publish source distribution package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        packages_dir: dist/
