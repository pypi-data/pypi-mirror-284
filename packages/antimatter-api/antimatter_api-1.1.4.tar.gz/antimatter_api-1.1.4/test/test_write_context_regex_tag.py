# coding: utf-8

"""
    Antimatter Public API

    Interact with the Antimatter Cloud API

    The version of the OpenAPI document: 1.1.4
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from antimatter_api.models.write_context_regex_tag import WriteContextRegexTag

class TestWriteContextRegexTag(unittest.TestCase):
    """WriteContextRegexTag unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WriteContextRegexTag:
        """Test WriteContextRegexTag
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WriteContextRegexTag`
        """
        model = WriteContextRegexTag()
        if include_optional:
            return WriteContextRegexTag(
                name = 'tag.antimatter.io/pii/name',
                value = '',
                type = 'string'
            )
        else:
            return WriteContextRegexTag(
                name = 'tag.antimatter.io/pii/name',
                type = 'string',
        )
        """

    def testWriteContextRegexTag(self):
        """Test WriteContextRegexTag"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
