Metadata-Version: 2.1
Name: xchainpy2_crypto
Version: 0.0.8
Summary: XChainPy2 Crypto utils and keystore management
Author-email: Tirinox <developer@tirinox.ru>
License: MIT
Project-URL: source, https://github.com/tirinox/xchainpy
Keywords: Crypto,THORChain,Blockchain,XChain
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: bip-utils <3.0.0,>=2.7.0
Requires-Dist: pycryptodome <4.0,>=3.17
Provides-Extra: test
Requires-Dist: pytest ; extra == 'test'

# How it works
Typically keystore files encrypt a seed to a file, however this is not appropriate or UX friendly, since the phrase
cannot be recovered after the fact.

Crypto design:

`[entropy] -> [phrase] -> [seed] -> [privateKey] -> [publicKey] -> [address]`

Instead, XCHAIN-CRYPTO stores the phrase in a keystore file, then decrypts and passes this phrase to other clients:

`[keystore] -> XCHAIN-CRYPTO -> [phrase] -> ChainClient`

The ChainClients can then convert this into their respective key-pairs and addresses. Users can also export their
phrases after the fact, ensuring they have saved it securely. This could enhance UX onboarding since users aren't forced
to write their phrases down immediately for empty or test wallets.
