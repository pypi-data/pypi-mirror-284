on:
  workflow_call:
    inputs:
      ref:
        type: string
        default: ""

jobs:


  # -------------
  sdist:
    name: Build SDist

    runs-on: ubuntu-latest
    outputs:
      SDIST_NAME: ${{ steps.sdist.outputs.SDIST_NAME }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Build SDist
        id: sdist
        run: |
          pipx run hatch build -t sdist
          pipx run hatch run scripts/export-sdist-name.py

      - name: Check metadata
        run: pipx run twine check dist/*

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz
          if-no-files-found: error


  # -------------
  wheels:
    name: Build wheels on ${{ matrix.os }} for ${{ matrix.cibw_archs }}
    needs: [ sdist ]

    runs-on: ${{ matrix.os }}

    strategy:
      # macos-12 is an intel runner, macos-14 is apple silicon
      matrix:
        include:
          - os: ubuntu-20.04
            cibw_archs: "x86_64"
          - os: windows-latest
            cibw_archs: "auto64"
          - os: macos-12
            cibw_archs: "x86_64"
          - os: macos-14
            cibw_archs: "arm64"

    env:
      MACOSX_DEPLOYMENT_TARGET: "12"

    steps:
      - name: Download sdist ${{ needs.sdist.outputs.SDIST_NAME }}
        uses: actions/download-artifact@v4
        with:
          name: cibw-sdist
          path: dist/

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19
        # configured in pyproject.toml [tool.cibuildwheel]
        with:
          package-dir: dist/${{ needs.sdist.outputs.SDIST_NAME }}
        env:
          CIBW_ARCHS: ${{ matrix.cibw_archs }}

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ runner.os }}-${{ matrix.cibw_archs }}
          path: ./wheelhouse/*.whl
          if-no-files-found: error
