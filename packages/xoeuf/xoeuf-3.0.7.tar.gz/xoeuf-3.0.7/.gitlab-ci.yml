---
stages:
  - pre-check
  - check
  - test
  - build
  - publish
  - clean up

.x-when-releasing: &when-releasing
  refs:
    - tags
  variables:
    - $CI_COMMIT_TAG =~ /^\d+(\.\d+)*(a\d+|b\d+|rc\d+)?(\.post\d+)?$/


.x-chaging-doc-or-code: &changing-code-or-doc
  changes:
    - .gitlab-ci.yml
    - docs/**/*.py
    - docs/**/*.rst
    - src/**/*.py
    - requirements-dev-*.lock
    - pyproject.toml

.x-updating-code: &updating-code
    - .gitlab-ci.yml
    - src/**/*.py
    - requirements-dev-*.lock
    - pyproject.toml

.x-whenupdating-code: &when-updating-code
    refs:
      - main
      - /^stable-/
      - merge_requests
    changes: *updating-code


lint:
  interruptible: true
  image: python:3.8
  stage: check
  script:
    - |
      apt-get update && apt-get install -y git
      pip install -r requirements-dev-py38.lock
      EXEC="" make lint
  only:
    <<: *when-updating-code
    variables:
      - $CI_SERVER_HOST == "gitlab.merchise.org"

.run_tests: &run_tests
  image: python:${PYTHON_VERSION}
  resource_group: "xoeuf - run tests - $CI_RUNNER_ID"
  services:
    - name: "registry.merchise.org/provision/pg-testing:postgis-16-3.4-alpine"
      alias: $POSTGRES_HOST
  stage: test
  script:
    - |
      apt-get update && apt-get install -y build-essential \
           libxslt1-dev libxml2-dev libsasl2-dev \
           libjpeg-dev zlib1g-dev libldap2-dev libfreetype6-dev \
           libyaml-dev libgeos-dev libusb-dev \
           libssl-dev postgresql-client git
      mkdir -p vendor
      cd vendor
      if [ "$CI_SERVER_HOST" = "gitlab.merchise.org" ]; then
          git clone -b ${ODOO_VARIANT}${ODOO_VERSION}.0 --depth=1 https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.merchise.org/merchise/odoo.git
      else
          git clone -b ${ODOO_VARIANT}${ODOO_VERSION}.0 --depth=1 https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/merchise-autrement/odoo.git
      fi
      cd odoo
      pip install -U wheel setuptools==53.1.0
      pip install -r requirements.txt
      pip install -U "six>=1.9.0" "decorator>=4.0,<4.2" "hypothesis>=6,<6.38" "celery~=5.0"
      pip install -e .
      cd ../../
      pip install -e .
      pip install "xotl.tools$XOTL_TOOLS_VERSION"
      export ADDONS=$(ls src/tests/ | grep ^test_ | xargs | tr " " ",")
      cd vendor/odoo
      set -x
      ../../runtests-odoo.sh -i $ADDONS --db_host=$POSTGRES_HOST --db_password=$POSTGRES_PASSWORD --db_user=$POSTGRES_USER

run all tests:
  <<: *run_tests
  interruptible: true
  needs:
    - lint
  variables:
    POSTGRES_USER: xoeuf
    POSTGRES_PASSWORD: xoeuf
    POSTGRES_HOST: postgres
    ODOO_VARIANT: merchise-develop-
  parallel:
    matrix:
      - PYTHON_VERSION: ["3.8"]
        ODOO_VERSION: "12"
        XOTL_TOOLS_VERSION: ["~=2.2.5", "~=3.0.0", ">=3.1.0a1,<3.2"]
  only:
    <<: *when-updating-code
    variables:
      - $CI_SERVER_HOST == "gitlab.merchise.org"

run all tests (pure Odoo):
  <<: *run_tests
  allow_failure: true
  interruptible: true
  needs:
    - lint
  variables:
    POSTGRES_USER: xoeuf
    POSTGRES_PASSWORD: xoeuf
    POSTGRES_HOST: postgres
  parallel:
    matrix:
      - PYTHON_VERSION: ["3.8"]
        ODOO_VERSION: "12"
        XOTL_TOOLS_VERSION: [">=3.1.0a1,<3.2"]
  only:
    <<: *when-updating-code
    variables:
      - $CI_SERVER_HOST == "gitlab.merchise.org"


.x-build: &with-build
  image: python:3.8
  stage: build
  script:
    - rm -f dist/*
    - apt-get update && apt-get install -y git
    - pip install hatch
    - hatch build
  artifacts:
    paths:
      - dist/

build distributions:
  <<: *with-build
  only:
    <<: *when-releasing

check build:
  <<: *with-build
  interruptible: true
  needs: []
  only:
    <<: *when-updating-code
    variables:
      - $CI_SERVER_HOST == "gitlab.merchise.org"

publish pypi:
  image: python:3.8
  stage: publish
  script:
    - pip install twine
    - twine upload -u "$PYPI_USERNAME" -p "$PYPI_PASSWORD" dist/*
  only:
    <<: *when-releasing
    variables:
      - $CI_SERVER_HOST == "gitlab.merchise.org"
  needs:
    - build distributions
  environment:
    name: pypi
    url: https://pypi.org/project/$CI_PROJECT_NAME


.x-build-doc: &with-build-documentation
  image: python:3.8
  variables:
    PYTHON_VERSION: "3.8"
    ODOO_VERSION: "12"
  stage: build
  script:
    - |
      set -x
      apt-get update && apt-get install -y build-essential \
           libxslt1-dev libxml2-dev libsasl2-dev \
           libjpeg-dev zlib1g-dev libldap2-dev libfreetype6-dev \
           libyaml-dev libgeos-dev libusb-dev \
           libssl-dev postgresql-client git
      mkdir -p vendor
      cd vendor
      if [ "$CI_SERVER_HOST" = "gitlab.merchise.org" ]; then
          git clone -b merchise-develop-${ODOO_VERSION}.0 --depth=1 https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.merchise.org/merchise/odoo.git
      else
          git clone -b merchise-develop-${ODOO_VERSION}.0 --depth=1 https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/merchise-autrement/odoo.git
      fi
      cd odoo
      pip install -U wheel setuptools==53.1.0
      pip install "futures<3"
      pip install -r requirements.txt
      pip install -U "six>=1.9.0" "decorator>=4.0,<4.2" "hypothesis>=6,<6.38"
      pip install -e .

      cd ../../
      pip install -r requirements-dev-py38.lock
      make -C docs/ html
  artifacts:
    paths:
      - docs/build/html
    expire_in: 4 days


build documentation:
  <<: *with-build-documentation
  interruptible: true
  needs: []
  only:
    <<: *changing-code-or-doc
    refs:
      - main
      - /^stable-/
      - tags
      - merge_request


pages:
  image: alpine
  variables:
    GIT_STRATEGY: none
  stage: publish
  needs:
    - build documentation
  script:
    - |
      mkdir -p public
      cp -rf docs/build/html/* public/
  artifacts:
    paths:
      - public
  only:
    refs:
      - /^stable-/
    variables:
      - $CI_SERVER_HOST == "gitlab.com"
