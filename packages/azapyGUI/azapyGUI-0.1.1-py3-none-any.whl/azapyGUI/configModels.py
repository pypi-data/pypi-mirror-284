import azapyGUI.configTips as configTips
import azapyGUI.modelParametersValidation as mpv
import azapyGUI.configHelps as configHelps


__rtype_param = {'default': 'Sharpe',
                 'values': ['Risk', 'Sharpe', 'Sharpe2', 'MinRisk', 'RiskAverse', 'InvNrisk',
                            'Diverse', 'Diverse2', 'MaxDiverse', 'InvNdiverse', 'InvNdrr'],
                 'visible': True,
                 'validate': mpv._validate_nothing,
                 'tip': configTips._rtype_param_tip,
                 'param': {'mu': {'default': 0.05,
                                  'conditional': ['Risk', 'Diverse', 'Diverse2'],
                                  'visible': True,
                                  'validate': mpv._validate_mu,
                                  'tip': configTips._mu_param_tip,
                                  },
                           'mu0': {'default': 0,
                                   'conditional': ['Sharpe', 'Sharpe2'],
                                   'visible': True,
                                   'validate': mpv._validate_mu0,
                                   'tip': configTips._mu0_param_tip,
                                   },
                           'aversion': {'default': 0.3,
                                        'conditional': ['RiskAverse'],
                                        'visible': True,
                                        'validate': mpv._validate_aversion,
                                        'tip': configTips._aversion_param_tip,
                                        },
                           'ww0': {'default': [1, 1, 1],
                                   'conditional': ['InvNrisk', 'InvNdiverse', 'InvNdrr'],
                                   'visible': True,
                                   'validate': mpv._validate_nothing,
                                   'tip': configTips._ww0_param_tip,
                                   },
                           },
                 }

__freq_val = {'default': 'Q',
              'values': ['M', 'Q'],
              'visible': True,
              'validate': mpv._validate_nothing,
              'tip': configTips._freq_param_tip,
              }

__method_lin = {'default': 'ecos',
                'values': ['ecos', 'highs-ds', 'highs-ipm', 'highs', 'glpk', 'cvxopt'],
                'visible': True,
                'validate': mpv._validate_nothing,
                'tip': configTips._method_lin_param_tip,
                }

__method_socp = {'default': 'ecos',
                 'values': ['ecos', 'cvxopt'],
                 'visible': True,
                 'validate': mpv._validate_nothing,
                 'tip': configTips._method_socp_param_tip,
                 }

__method_exp = {'default': 'ncp',
                 'values': ['ncp', 'ncp2', 'excp'],
                 'visible': True,
                 'validate': mpv._validate_nothing,
                 'tip': configTips._method_exp_param_tip,
                 }

__method_quad = {'default': 'ecos',
                 'values': ['ecos', 'cvxopt'],
                 'visible': True,
                 'validate': mpv._validate_nothing,
                 'tip': configTips._method_quad_param_tip,
                 }

__hlength_val = {'default': 1.25,
                 'visible': True,
                 'validate': mpv._validate_hlength,
                 'tip': configTips._hlength_val_param_tip,
                 }

__col_calibration = {'default': 'adjusted',
                     'values': ['adjusted'],
                     'visible': False,
                     'validate': mpv._validate_nothing,
                     'tip': configTips._col_calibration_param_tip,
                     }

selector_models = {'Dual Momentum': {'param': {'ftype': {'default': 'f13612w', 
                                                         'values': ['f13612w'],
                                                         'visible': True,
                                                         'validate': mpv._validate_nothing,
                                                         'tip': configTips._ftype_param_tip,
                                                         'param': {'fw': {'default': [1, 1, 1, 1],
                                                                          'conditional': ['f13612w'],
                                                                          'visible': True,
                                                                          'validate': mpv._validate_fw,
                                                                          'tip': configTips._fw_param_tip,
                                                                          }
                                                                   },
                                                         },
                                               'nw': {'default': 3,
                                                      'visible': True,
                                                      'validate': mpv._validate_nw,
                                                      'tip': configTips._nw_param_tip,
                                                      },
                                               'threshold': {'default': 6,
                                                             'visible': True,
                                                             'validate': mpv._validate_threshold,
                                                             'tip': configTips._threshold_param_tip,
                                                             },
                                               'col_price': __col_calibration,
                                               'hlength': {'default': 1,
                                                           'visible': False,
                                                           'validate': mpv._validate_nothing,
                                                           'tip': configTips._hlength_val_param_tip,
                                                           }
                                               },
                                     'val_priority': ['nw'],
                                     'validate': [{'nw': mpv._validate_nw}, 
                                                  {'threshold': mpv._validate_threshold}],
                                     'tip': configTips._Dual_Momentum_model_tip,
                                     'help': configHelps._Dual_Momentum_model_help,
                                     'azapy': 'DualMomentumSelector',
                                     },
                                     
                   'Correlation Clustering': {'param': {'corr_threshold': {'default': 0.98,
                                                                           'visible': True,
                                                                           'validate': mpv._validate_corr_threshold,
                                                                           'tip': configTips._corr_threshold_param_tip,
                                                                           },
                                                        'freq': __freq_val,
                                                        'ftype': {'default': 'f13612w', 
                                                                  'values': ['f13612w'],
                                                                  'visible': True,
                                                                  'validate': mpv._validate_nothing,
                                                                  'tip': configTips._ftype_param_tip,
                                                                  'param': {'fw': {'default': [1, 1, 1, 1],
                                                                                   'conditional': ['f13612w'],
                                                                                   'visible': True,
                                                                                   'validate': mpv._validate_fw,
                                                                                   'tip': configTips._fw_param_tip,
                                                                                   }
                                                                            },
                                                                  },
                                                        'hlength': __hlength_val,
                                                        'col_price': __col_calibration,
                                                        },
                                              'val_priority': [],
                                              'validate': [],
                                              'tip': configTips._Correlation_Clustering_model_tip,
                                              'help': configHelps._Correlation_Clustering_model_help,
                                              'azapy': 'CorrClusterSelector',
                                             },
                   }


risk_based_models = {'mCVaR': {'param': {'alpha': {'default': [0.95, 0.9],
                                                   'visible': True,
                                                   'validate': mpv._validate_alpha_mCVaR,
                                                   'tip': configTips._alpha_mCVaR_param_tip,
                                                   },
                                         'coef': {'default': [1, 1],
                                                  'visible': True,
                                                  'validate': mpv._validate_coef,
                                                  'tip': configTips._coef_param_tip
                                                  },
                                         'rtype': __rtype_param,
                                         'freq': __freq_val,
                                         'hlength': __hlength_val,
                                         'colname': __col_calibration,
                                         'method': __method_lin,
                                         },
                               'comptype': 'pipe',
                               'val_priority': ['alpha'],
                               'validate': [{'ww0': mpv._validate_ww0}],
                               'tip': configTips._mCVaR_model_tip,
                               'help': configHelps._mCVaR_model_help,
                               'azapy': 'CVaRAnalyzer',
                               },
                     'mSMCR': {'param': {'alpha': {'default': [0.85, 0.75],
                                                   'visible': True,
                                                   'validate': mpv._validate_alpha_mSMCR,
                                                   'tip': configTips._alpha_mSMCR_param_tip,
                                                   },
                                         'coef': {'default': [1, 1],
                                                  'visible': True,
                                                  'validate': mpv._validate_coef,
                                                  'tip': configTips._coef_param_tip,
                                                  },
                                         'rtype': __rtype_param,
                                         'freq': __freq_val,
                                         'hlength': __hlength_val,
                                         'colname': __col_calibration,
                                         'method': __method_socp,
                                         },
                               'comptype': 'pipe',
                               'val_priority': ['alpha'],
                               'validate': [{'ww0': mpv._validate_ww0}],
                               'tip': configTips._mSMCR_model_tip,
                               'help': configHelps._mSMCR_model_help,
                               'azapy': 'SMCRAnalyzer',
                               },
                     'mEVaR': {'param': {'alpha': {'default': [0.75, 0.65],
                                                   'visible': True,
                                                   'validate': mpv._validate_alpha_mEVaR,
                                                   'tip': configTips._alpha_mEVaR_param_tip,
                                                   },
                                         'coef': {'default': [1, 1],
                                                  'visible': True,
                                                  'validate': mpv._validate_coef,
                                                  'tip': configTips._coef_param_tip,
                                                  },
                                         'rtype': __rtype_param,
                                         'freq': __freq_val,
                                         'hlength': __hlength_val,
                                         'colname': __col_calibration,
                                         'method': __method_exp,
                                         },
                               'comptype': 'pipe',
                               'val_priority': ['alpha'],
                               'validate': [{'ww0': mpv._validate_ww0}],
                               'tip': configTips._mEVaR_model_tip,
                               'help': configHelps._mEVaR_model_help,
                               'azapy': 'EVaRAnalyzer',
                               },
                     'mMAD': {'param': {'coef': {'default': [1, 1],
                                                 'visible': True,
                                                 'validate': mpv._validate_coef_mMAD,
                                                 'tip': configTips._coef_mMAD_param_tip,
                                                 },
                                        'rtype': __rtype_param,
                                        'freq': __freq_val,
                                        'hlength': __hlength_val,
                                        'colname': __col_calibration,
                                        'method': __method_lin,
                                        },
                              'comptype': 'pipe',
                              'val_priority': [],
                              'validate': [{'ww0': mpv._validate_ww0}],
                              'tip': configTips._mMAD_model_tip,
                              'help': configHelps._mMAD_model_help,
                              'azapy': 'MADAnalyzer',
                              },
                     'mLSD': {'param': {'coef': {'default': [1, 1],
                                                 'visible': True,
                                                 'validate': mpv._validate_coef_mLSD,
                                                 'tip': configTips._coef_mMAD_param_tip,
                                                 },
                                        'rtype': __rtype_param,
                                        'freq': __freq_val,
                                        'hlength': __hlength_val,
                                        'colname': __col_calibration,
                                        'method': __method_socp,
                                        },
                              'comptype': 'pipe',
                              'val_priority': [],
                              'validate': [{'ww0': mpv._validate_ww0}],
                              'tip': configTips._mLSD_model_tip,
                              'help': configHelps._mLSD_model_help,
                              'azapy': 'LSDAnalyzer',
                              },
                     'mBTAD': {'param': {'alpha': {'default': [-0.5, 0],
                                                   'visible': True,
                                                   'validate': mpv._validate_alpha_mBTAD,
                                                   'tip': configTips._alpha_mBTAD_param_tip,
                                                   },
                                         'coef': {'default': [1, 1],
                                                  'visible': True,
                                                  'validate': mpv._validate_coef,
                                                  'tip': configTips._coef_BTAD_param_tip,
                                                  },
                                         'rtype': __rtype_param,
                                         'detrended': {'default': True,
                                                       'values': [True, False],
                                                       'visible': True,
                                                       'validate': mpv._validate_nothing,
                                                       'tip': configTips._detrended_param_tip,
                                                       },
                                         'freq': __freq_val,
                                         'hlength': __hlength_val,
                                         'colname': __col_calibration,
                                         'method': __method_lin,
                                         },
                               'comptype': 'pipe',
                               'val_priority': ['alpha'],
                               'validate': [{'ww0': mpv._validate_ww0}],
                               'tip': configTips._mBTAD_model_tip,
                               'help': configHelps._mBTAD_model_help,
                               'azapy': 'BTADAnalyzer',
                               },
                     'mBTSD': {'param': {'alpha': {'default': [-0.5, 0],
                                                   'visible': True,
                                                   'validate': mpv._validate_alpha_mBTSD,
                                                   'tip': configTips._alpha_mBTAD_param_tip,
                                                   },
                                         'coef': {'default': [1, 1],
                                                  'visible': True,
                                                  'validate': mpv._validate_coef,
                                                  'tip': configTips._coef_BTAD_param_tip,
                                                 },
                                         'rtype': __rtype_param,
                                         'detrended': {'default': True,
                                                       'values': [True, False],
                                                       'visible': True,
                                                       'validate': mpv._validate_nothing,
                                                       'tip': configTips._detrended_param_tip,
                                                       },
                                         'freq': __freq_val,
                                         'hlength': __hlength_val,
                                         'colname': __col_calibration,
                                         'method': __method_lin,
                                         },
                               'comptype': 'pipe',
                               'val_priority': ['alpha'],
                               'validate': [{'ww0': mpv._validate_ww0}],
                               'tip': configTips._mBTSD_model_tip,
                               'help': configHelps._mBTSD_model_help,
                               'azapy': 'BTSDAnalyzer',
                               },
                     'GINI': {'param': {'rtype': __rtype_param,
                                        'freq': __freq_val,
                                        'hlength': __hlength_val,
                                        'colname': __col_calibration,
                                        'method': __method_lin,
                                        },
                              'comptype': 'pipe',
                              'val_priority': [],
                              'validate': [{'ww0': mpv._validate_ww0}],
                              'tip': configTips._GINI_model_tip,
                              'help': configHelps._GINI_model_help,
                              'azapy': 'GINIAnalyzer',
                              },
                     'SD': {'param': {'rtype': __rtype_param,
                                      'freq': __freq_val,
                                      'hlength': __hlength_val,
                                      'colname': __col_calibration,
                                      'method': __method_quad,
                                      },
                            'comptype': 'pipe',
                            'val_priority': [],
                            'validate': [{'ww0': mpv._validate_ww0}],
                            'tip': configTips._SD_model_tip,
                            'help': configHelps._SD_model_help,
                            'azapy': 'SDAnalyzer',
                            },
                     'MV': {'param': {'rtype': __rtype_param,
                                      'freq': __freq_val,
                                      'hlength': __hlength_val,
                                      'colname': __col_calibration,
                                      'method': __method_quad,
                                      },
                            'comptype': 'pipe',
                            'val_priority': [],
                            'validate': [{'ww0': mpv._validate_ww0}],
                            'tip': configTips._MV_model_tip,
                            'help': configHelps._MV_model_help,
                            'azapy': 'MVAnalyzer',
                            },
                     }

naive_models = {'Equal Weighted': {'param':{'freq': __freq_val,
                                            },
                                   'comptype': 'pipe',
                                   'val_priority': [],
                                   'validate': [],
                                   'tip': configTips._Equal_Weighted_model_tip,
                                   'help': configHelps._Equal_Weighted_model_help,
                                   'azapy': 'EWPEngine',
                                   },
                'Inverse Volatility': {'param': {'freq': __freq_val,
                                                 'hlength': __hlength_val,
                                                 'colname': __col_calibration,
                                                 },
                                       'comptype': 'pipe',
                                       'val_priority': [],
                                       'validate': [],
                                       'tip': configTips._Inverse_Volatility_model_tip,
                                       'help': configHelps._Inverse_Volatility_model_help,
                                       'azapy': 'InvVolEngine',
                                       },
                'Inverse Variance': {'param': {'freq': __freq_val,
                                               'hlength': __hlength_val,
                                               'colname': __col_calibration,
                                               },
                                     'comptype': 'pipe',
                                     'val_priority': [],
                                     'validate': [],
                                     'tip': configTips._Inverse_Variance_model_tip,
                                     'help': configHelps._Inverse_Variance_model_help,
                                     'azapy': 'InvVarEngine',
                                     },
                'Inverse Drawdown': {'param': {'freq': __freq_val,
                                               'hlength': __hlength_val,
                                               'colname': __col_calibration,
                                               },
                                     'comptype': 'pipe',
                                     'val_priority': [],
                                     'validate': [],
                                     'tip': configTips._Inverse_Drawdown_model_tip,
                                     'help': configHelps._Inverse_Drawdown_model_help,
                                     'azapy': 'InvDDEngine',
                                     },
                }

greedy_models = {'Kelly': {'param': {'freq': __freq_val,
                                     'hlength': __hlength_val,
                                     'colname': __col_calibration,
                                     'rtype': {'default': 'ExpCone',
                                               'values': ['ExpCone', 'Full', 'Order2'],
                                               'param': {'method': {'default': 'ecos',
                                                                    'values': ['ecos', 'cvxopt'],
                                                                    'conditional': ['Order2'],
                                                                    'visible': True,
                                                                    'validate': mpv._validate_nothing,
                                                                    'tip': configTips._method_quad_param_tip,
                                                                    },
                                                         },
                                               'visible': True,
                                               'validate': mpv._validate_nothing,
                                               'tip': configTips._rtype_Kelly_param_tip,
                                               },
                                     },
                           'comptype': 'pipe',
                           'val_priority': [],
                           'validate': [],
                           'tip': configTips._Kelly_model_tip,
                           'help': configHelps._Kelly_model_help,
                           'azapy': 'KellyEngine',
                           },
                 'Universal': {'param': {'freq': __freq_val,
                                         'colname': __col_calibration,
                                         'dirichlet_alpha': {'default': 1,
                                                             'visible': True,
                                                             'validate': mpv._validate_nothing,
                                                             'tip': configTips._dirichlet_alpha_param_tip,
                                                             },
                                         'variance_reduction': {'default': 'True',
                                                                'values': ['True', 'False'],
                                                                'visible': True,
                                                                'validate': mpv._validate_variance_reduction,
                                                                'tip': configTips._variance_reduction_param_tip,
                                                                },
                                         'nr_batches': {'default': 16,
                                                        'visible': True,
                                                        'validate': mpv._validate_nr_batches,
                                                        'tip': configTips._nr_batches_param_tip,
                                                        },
                                         'mc_paths': {'default': 100,
                                                      'visible': True,
                                                      'validate': mpv._validate_mc_paths,
                                                      'tip': configTips._mc_paths_param_tip,
                                                      },
                                         'mc_seed': {'default': 42,
                                                     'visible': True,
                                                     'validate': mpv._validate_mc_seed,
                                                     'tip': configTips._mc_seed_param_tip,
                                                     },
                                         'hlength': {'default': 12,
                                                     'visible': True,
                                                     'validate': mpv._validate_hlength,
                                                     'tip': configTips._univ_hlength_val_param_tip,
                                                     }
                                         },
                               'comptype': 'standalone',
                               'val_priority': [],
                               'validate': [{'dirichlet_alpha': mpv._validate_dirichlet_alpha}],
                               'tip': configTips._Universal_model_tip,
                               'help': configHelps._Universal_model_help,
                               'azapy': ['azHelper.UniversalEngineWrap', 'Port_Universal']
                               },
                 }


portfolio_model_family = {'Selector': selector_models,
                          'Risk based': risk_based_models,
                          'Naive': naive_models,
                          'Greedy': greedy_models,
                          }

optim_model_types = ('Risk based', 'Naive', 'Greedy')


def get_model_family(model):
    for family in portfolio_model_family.keys():
        if model in portfolio_model_family[family].keys():
            return family
    return None


def param_default(model, visible=True):
    family = get_model_family(model)
    out = {}
    def work(param):
        for kk, vv in param.items():
            if vv['visible'] == visible:
                out[kk] = vv['default']
                if 'param' in vv.keys():
                    work(vv['param'])
                       
    param = portfolio_model_family[family][model]['param']         
    work(param)
    return out


def flat_param_default(family, model):
    out = {}
    def work(param):
        for kk, vv in param.items():
            out[kk] = vv
            if 'param' in vv.keys():
                work(vv['param'])
                
    param = portfolio_model_family[family][model]['param']         
    work(param)
    return out


def get_comptype(mname):
    ff = get_model_family(mname)
    return portfolio_model_family[ff][mname]['comptype']
