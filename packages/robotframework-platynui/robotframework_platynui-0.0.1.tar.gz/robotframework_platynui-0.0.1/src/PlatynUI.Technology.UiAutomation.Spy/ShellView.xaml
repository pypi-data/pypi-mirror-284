<Window x:Class="PlatynUI.Technology.UiAutomation.Spy.ShellView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:cal="http://www.caliburnproject.org"
        Title="{Binding Title}"
        mc:Ignorable="d"
        d:DesignHeight="300"
        d:DesignWidth="300"
        AutomationProperties.AutomationId="Shell"
        Width="800"
        Height="600"
        ResizeMode="CanResizeWithGrip"
        Topmost="{Binding Topmost}">


    <DockPanel>
        <Menu DockPanel.Dock="Top"
              x:Name="MainMenu">
            <MenuItem Header="_File"
                      x:Name="File">
                <MenuItem Header="_New"
                          x:Name="New"/>
                <Separator/>
                <MenuItem Header="Exit"
                          x:Name="Exit"/>
            </MenuItem>
            <MenuItem Header="_Edit"
                      x:Name="Edit">
                <MenuItem Header="_Undo"
                          x:Name="Undo"
                          IsEnabled="False"/>
                <MenuItem Header="_Redo"
                          x:Name="Redo"
                          IsEnabled="False"/>
                <Separator/>
                <MenuItem Header="_Cut"
                          x:Name="Cut"/>
                <MenuItem Header="_Copy"
                          x:Name="Copy"/>
                <MenuItem Header="_Paste"
                          x:Name="Paste"/>
                <MenuItem Header="_Delete"
                          x:Name="Delete"/>
                <Separator/>
            </MenuItem>
        </Menu>
        <ToolBarPanel DockPanel.Dock="Top">
            <ToolBar>
                <Button x:Name="RefreshElements">Refresh</Button>
                <ToggleButton x:Name="TopMostButton"
                              IsChecked="{Binding Topmost}">Always on top</ToggleButton>
            </ToolBar>
        </ToolBarPanel>
        <Grid Margin="6"
                DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="5"
                                  MinWidth="50"/>
            </Grid.ColumnDefinitions>
            <TextBox Grid.Column="0"
                     x:Name="XPath"
                     cal:Message.Attach="[Event KeyDown] = [Action ExecuteXPath($executionContext)]"/>
            <Button x:Name="SearchXPath"
                    Grid.Column="1"
                    Width="50">Search</Button>
        </Grid>
        <StatusBar DockPanel.Dock="Bottom">
            <TextBlock>OK</TextBlock>
        </StatusBar>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <TreeView x:Name="RootElement"
                          ItemsSource="{Binding RootElement}"
                          cal:Message.Attach="[Event SelectedItemChanged] = [Action SetSelectedItem($this.SelectedItem)]">
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                            <HierarchicalDataTemplate.ItemContainerStyle>
                                <Style TargetType="TreeViewItem">

                                    <Setter Property="IsExpanded"
                                            Value="{Binding IsExpanded}"/>
                                    <Setter Property="IsSelected"
                                            Value="{Binding IsSelected}"/>
                                    <EventSetter Event="Selected" Handler="TreeViewSelectedItemChanged" />

                                </Style>
                            </HierarchicalDataTemplate.ItemContainerStyle>

                            <DockPanel LastChildFill="True">
                                <!-- <Image DockPanel.Dock="Left"
                                       Source="{Binding IconSource}"/> -->
                                <TextBlock DockPanel.Dock="Right"
                                           Text="{Binding DisplayName}"
                                           Margin="3"/>
                            </DockPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="IsExpanded"
                                    Value="{Binding IsExpanded}"/>
                            <Setter Property="IsSelected"
                                    Value="{Binding IsSelected}"/>
                        </Style>
                    </TreeView.ItemContainerStyle>
                </TreeView>
            </Grid>
            <GridSplitter Grid.Column="1"
                          HorizontalAlignment="Stretch"/>
            <Grid Grid.Column="2">

                <DataGrid x:Name="Properties"
                          ItemsSource="{Binding Path=SelectedElement.Properties}"
                          AutoGenerateColumns="False"
                          CanUserSortColumns="True"
                          GridLinesVisibility="Vertical"
                          VerticalGridLinesBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
                          AlternatingRowBackground="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
                    <DataGrid.Columns>
                        <DataGridTextColumn  Header="Name"
                                             Width="Auto"
                                             Binding="{Binding Name}"
                                             SortDirection="Ascending"
                                             IsReadOnly="True"
                                             CanUserReorder="False"/>
                        <DataGridTextColumn  Header="Value"
                                             Width="Auto"
                                             Binding="{Binding Value}"
                                             IsReadOnly="True"
                                             CanUserSort="False"
                                             CanUserReorder="False"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Grid>

    </DockPanel>

</Window>
