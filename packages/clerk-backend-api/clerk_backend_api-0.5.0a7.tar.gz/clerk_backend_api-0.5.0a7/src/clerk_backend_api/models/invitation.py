"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
from clerk_backend_api.types import BaseModel, Nullable
from enum import Enum
from pydantic import model_serializer
from typing import Optional, TypedDict
from typing_extensions import NotRequired


class InvitationObject(str, Enum):
    INVITATION = "invitation"


class InvitationPublicMetadataTypedDict(TypedDict):
    pass
    

class InvitationPublicMetadata(BaseModel):
    pass
    

class InvitationStatus(str, Enum):
    PENDING = "pending"
    ACCEPTED = "accepted"
    REVOKED = "revoked"


class InvitationTypedDict(TypedDict):
    object: InvitationObject
    id: str
    email_address: str
    status: InvitationStatus
    created_at: int
    r"""Unix timestamp of creation.

    """
    updated_at: int
    r"""Unix timestamp of last update.

    """
    public_metadata: NotRequired[InvitationPublicMetadataTypedDict]
    revoked: NotRequired[bool]
    url: NotRequired[Nullable[str]]
    

class Invitation(BaseModel):
    object: InvitationObject
    id: str
    email_address: str
    status: InvitationStatus
    created_at: int
    r"""Unix timestamp of creation.

    """
    updated_at: int
    r"""Unix timestamp of last update.

    """
    public_metadata: Optional[InvitationPublicMetadata] = None
    revoked: Optional[bool] = None
    url: Optional[Nullable[str]] = None
    
    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = ["public_metadata", "revoked", "url"]
        nullable_fields = ["url"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in self.model_fields.items():
            k = f.alias or n
            val = serialized.get(k)

            if val is not None:
                m[k] = val
            elif not k in optional_fields or (
                    k in optional_fields
                    and k in nullable_fields
                    and (self.__pydantic_fields_set__.intersection({n}) or k in null_default_fields) # pylint: disable=no-member
                ):
                m[k] = val

        return m
        
