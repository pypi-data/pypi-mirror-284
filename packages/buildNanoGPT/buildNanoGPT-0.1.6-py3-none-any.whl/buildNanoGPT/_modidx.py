# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/buildNanoGPT',
                'doc_host': 'https://hdocmsu.github.io',
                'git_url': 'https://github.com/hdocmsu/buildNanoGPT/',
                'lib_path': 'buildNanoGPT'},
  'syms': { 'buildNanoGPT.data': { 'buildNanoGPT.data.download': ('nanoGPT_P2_PyPI/data.html#download', 'buildNanoGPT/data.py'),
                                   'buildNanoGPT.data.download_file': ('nanoGPT_P2_PyPI/data.html#download_file', 'buildNanoGPT/data.py'),
                                   'buildNanoGPT.data.edu_fineweb10B_prep': ( 'nanoGPT_P2_PyPI/data.html#edu_fineweb10b_prep',
                                                                              'buildNanoGPT/data.py'),
                                   'buildNanoGPT.data.get_most_likely_row': ( 'nanoGPT_P2_PyPI/data.html#get_most_likely_row',
                                                                              'buildNanoGPT/data.py'),
                                   'buildNanoGPT.data.hellaswag_evaluate': ( 'nanoGPT_P2_PyPI/data.html#hellaswag_evaluate',
                                                                             'buildNanoGPT/data.py'),
                                   'buildNanoGPT.data.hellaswag_val_prep': ( 'nanoGPT_P2_PyPI/data.html#hellaswag_val_prep',
                                                                             'buildNanoGPT/data.py'),
                                   'buildNanoGPT.data.iterate_examples': ( 'nanoGPT_P2_PyPI/data.html#iterate_examples',
                                                                           'buildNanoGPT/data.py'),
                                   'buildNanoGPT.data.render_example': ('nanoGPT_P2_PyPI/data.html#render_example', 'buildNanoGPT/data.py'),
                                   'buildNanoGPT.data.tokenize': ('nanoGPT_P2_PyPI/data.html#tokenize', 'buildNanoGPT/data.py'),
                                   'buildNanoGPT.data.write_datafile': ( 'nanoGPT_P2_PyPI/data.html#write_datafile',
                                                                         'buildNanoGPT/data.py')},
            'buildNanoGPT.model': { 'buildNanoGPT.model.Block': ('nanoGPT_P2_PyPI/model.html#block', 'buildNanoGPT/model.py'),
                                    'buildNanoGPT.model.Block.__init__': ( 'nanoGPT_P2_PyPI/model.html#block.__init__',
                                                                           'buildNanoGPT/model.py'),
                                    'buildNanoGPT.model.Block.forward': ( 'nanoGPT_P2_PyPI/model.html#block.forward',
                                                                          'buildNanoGPT/model.py'),
                                    'buildNanoGPT.model.CausalSelfAttention': ( 'nanoGPT_P2_PyPI/model.html#causalselfattention',
                                                                                'buildNanoGPT/model.py'),
                                    'buildNanoGPT.model.CausalSelfAttention.__init__': ( 'nanoGPT_P2_PyPI/model.html#causalselfattention.__init__',
                                                                                         'buildNanoGPT/model.py'),
                                    'buildNanoGPT.model.CausalSelfAttention.forward': ( 'nanoGPT_P2_PyPI/model.html#causalselfattention.forward',
                                                                                        'buildNanoGPT/model.py'),
                                    'buildNanoGPT.model.DataLoaderLite': ( 'nanoGPT_P2_PyPI/model.html#dataloaderlite',
                                                                           'buildNanoGPT/model.py'),
                                    'buildNanoGPT.model.DataLoaderLite.__init__': ( 'nanoGPT_P2_PyPI/model.html#dataloaderlite.__init__',
                                                                                    'buildNanoGPT/model.py'),
                                    'buildNanoGPT.model.DataLoaderLite.next_batch': ( 'nanoGPT_P2_PyPI/model.html#dataloaderlite.next_batch',
                                                                                      'buildNanoGPT/model.py'),
                                    'buildNanoGPT.model.DataLoaderLite.reset': ( 'nanoGPT_P2_PyPI/model.html#dataloaderlite.reset',
                                                                                 'buildNanoGPT/model.py'),
                                    'buildNanoGPT.model.GPT': ('nanoGPT_P2_PyPI/model.html#gpt', 'buildNanoGPT/model.py'),
                                    'buildNanoGPT.model.GPT.__init__': ('nanoGPT_P2_PyPI/model.html#gpt.__init__', 'buildNanoGPT/model.py'),
                                    'buildNanoGPT.model.GPT._init_weights': ( 'nanoGPT_P2_PyPI/model.html#gpt._init_weights',
                                                                              'buildNanoGPT/model.py'),
                                    'buildNanoGPT.model.GPT.configure_optimizers': ( 'nanoGPT_P2_PyPI/model.html#gpt.configure_optimizers',
                                                                                     'buildNanoGPT/model.py'),
                                    'buildNanoGPT.model.GPT.forward': ('nanoGPT_P2_PyPI/model.html#gpt.forward', 'buildNanoGPT/model.py'),
                                    'buildNanoGPT.model.GPT.from_pretrained': ( 'nanoGPT_P2_PyPI/model.html#gpt.from_pretrained',
                                                                                'buildNanoGPT/model.py'),
                                    'buildNanoGPT.model.GPTConfig': ('nanoGPT_P2_PyPI/model.html#gptconfig', 'buildNanoGPT/model.py'),
                                    'buildNanoGPT.model.MLP': ('nanoGPT_P2_PyPI/model.html#mlp', 'buildNanoGPT/model.py'),
                                    'buildNanoGPT.model.MLP.__init__': ('nanoGPT_P2_PyPI/model.html#mlp.__init__', 'buildNanoGPT/model.py'),
                                    'buildNanoGPT.model.MLP.forward': ('nanoGPT_P2_PyPI/model.html#mlp.forward', 'buildNanoGPT/model.py'),
                                    'buildNanoGPT.model.load_tokens': ('nanoGPT_P2_PyPI/model.html#load_tokens', 'buildNanoGPT/model.py')},
            'buildNanoGPT.train': { 'buildNanoGPT.train.DDPConfig': ('nanoGPT_P2_PyPI/train.html#ddpconfig', 'buildNanoGPT/train.py'),
                                    'buildNanoGPT.train.DDPConfig.__post_init__': ( 'nanoGPT_P2_PyPI/train.html#ddpconfig.__post_init__',
                                                                                    'buildNanoGPT/train.py'),
                                    'buildNanoGPT.train.DDPConfig.detect_device': ( 'nanoGPT_P2_PyPI/train.html#ddpconfig.detect_device',
                                                                                    'buildNanoGPT/train.py'),
                                    'buildNanoGPT.train.TrainingConfig': ( 'nanoGPT_P2_PyPI/train.html#trainingconfig',
                                                                           'buildNanoGPT/train.py'),
                                    'buildNanoGPT.train.TrainingConfig.__post_init__': ( 'nanoGPT_P2_PyPI/train.html#trainingconfig.__post_init__',
                                                                                         'buildNanoGPT/train.py'),
                                    'buildNanoGPT.train.create_log_file': ( 'nanoGPT_P2_PyPI/train.html#create_log_file',
                                                                            'buildNanoGPT/train.py'),
                                    'buildNanoGPT.train.create_model': ('nanoGPT_P2_PyPI/train.html#create_model', 'buildNanoGPT/train.py'),
                                    'buildNanoGPT.train.generate_text': ( 'nanoGPT_P2_PyPI/train.html#generate_text',
                                                                          'buildNanoGPT/train.py'),
                                    'buildNanoGPT.train.get_lr': ('nanoGPT_P2_PyPI/train.html#get_lr', 'buildNanoGPT/train.py'),
                                    'buildNanoGPT.train.hellaswag_eval': ( 'nanoGPT_P2_PyPI/train.html#hellaswag_eval',
                                                                           'buildNanoGPT/train.py'),
                                    'buildNanoGPT.train.set_random_seed': ( 'nanoGPT_P2_PyPI/train.html#set_random_seed',
                                                                            'buildNanoGPT/train.py'),
                                    'buildNanoGPT.train.train_GPT': ('nanoGPT_P2_PyPI/train.html#train_gpt', 'buildNanoGPT/train.py'),
                                    'buildNanoGPT.train.train_step': ('nanoGPT_P2_PyPI/train.html#train_step', 'buildNanoGPT/train.py'),
                                    'buildNanoGPT.train.validate': ('nanoGPT_P2_PyPI/train.html#validate', 'buildNanoGPT/train.py')},
            'buildNanoGPT.viz': { 'buildNanoGPT.viz.plot_log': ('nanoGPT_P2_PyPI/viz.html#plot_log', 'buildNanoGPT/viz.py'),
                                  'buildNanoGPT.viz.read_log': ('nanoGPT_P2_PyPI/viz.html#read_log', 'buildNanoGPT/viz.py')}}}
