# -*- coding: UTF-8 -*-
# Code automatically generated by pycrate_asn1c

from pycrate_asn1rt.utils            import *
from pycrate_asn1rt.err              import *
from pycrate_asn1rt.glob             import make_GLOBAL, GLOBAL
from pycrate_asn1rt.dictobj          import ASN1Dict
from pycrate_asn1rt.refobj           import *
from pycrate_asn1rt.setobj           import *
from pycrate_asn1rt.asnobj_basic     import *
from pycrate_asn1rt.asnobj_str       import *
from pycrate_asn1rt.asnobj_construct import *
from pycrate_asn1rt.asnobj_class     import *
from pycrate_asn1rt.asnobj_ext       import *
from pycrate_asn1rt.init             import init_modules

class ULP_Components:

    _name_  = u'ULP-Components'
    _oid_   = []
    
    _obj_ = [
        u'Version',
        u'SessionID',
        u'SetSessionID',
        u'SETId',
        u'SlpSessionID',
        u'IPAddress',
        u'SLPAddress',
        u'FQDN',
        u'Ver',
        u'LocationId',
        u'Status',
        u'CellInfo',
        u'Position',
        u'PositionEstimate',
        u'AltitudeInfo',
        u'CdmaCellInformation',
        u'GsmCellInformation',
        u'WcdmaCellInformation',
        u'TimingAdvance',
        u'TAResolution',
        u'ChipRate',
        u'FrequencyInfo',
        u'FrequencyInfoFDD',
        u'FrequencyInfoTDD',
        u'UARFCN',
        u'NMR',
        u'NMRelement',
        u'MeasuredResultsList',
        u'MeasuredResults',
        u'CellMeasuredResultsList',
        u'UTRA-CarrierRSSI',
        u'CellMeasuredResults',
        u'CellParametersID',
        u'TGSN',
        u'PrimaryCCPCH-RSCP',
        u'TimeslotISCP',
        u'TimeslotISCP-List',
        u'PrimaryCPICH-Info',
        u'CPICH-Ec-N0',
        u'CPICH-RSCP',
        u'Pathloss',
        u'maxCellMeas',
        u'maxFreq',
        u'maxTS',
        u'StatusCode',
        u'QoP',
        u'Velocity',
        u'Horvel',
        u'Horandvervel',
        u'Horveluncert',
        u'Horandveruncert',
        u'PosMethod',
        ]
    _type_ = [
        u'Version',
        u'SessionID',
        u'SetSessionID',
        u'SETId',
        u'SlpSessionID',
        u'IPAddress',
        u'SLPAddress',
        u'FQDN',
        u'Ver',
        u'LocationId',
        u'Status',
        u'CellInfo',
        u'Position',
        u'PositionEstimate',
        u'AltitudeInfo',
        u'CdmaCellInformation',
        u'GsmCellInformation',
        u'WcdmaCellInformation',
        u'TimingAdvance',
        u'TAResolution',
        u'ChipRate',
        u'FrequencyInfo',
        u'FrequencyInfoFDD',
        u'FrequencyInfoTDD',
        u'UARFCN',
        u'NMR',
        u'NMRelement',
        u'MeasuredResultsList',
        u'MeasuredResults',
        u'CellMeasuredResultsList',
        u'UTRA-CarrierRSSI',
        u'CellMeasuredResults',
        u'CellParametersID',
        u'TGSN',
        u'PrimaryCCPCH-RSCP',
        u'TimeslotISCP',
        u'TimeslotISCP-List',
        u'PrimaryCPICH-Info',
        u'CPICH-Ec-N0',
        u'CPICH-RSCP',
        u'Pathloss',
        u'StatusCode',
        u'QoP',
        u'Velocity',
        u'Horvel',
        u'Horandvervel',
        u'Horveluncert',
        u'Horandveruncert',
        u'PosMethod',
        ]
    _set_ = [
        ]
    _val_ = [
        u'maxCellMeas',
        u'maxFreq',
        u'maxTS',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Version >-----#
    Version = SEQ(name=u'Version', mode=MODE_TYPE)
    _Version_maj = INT(name=u'maj', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Version_maj._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _Version_min = INT(name=u'min', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Version_min._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _Version_servind = INT(name=u'servind', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Version_servind._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    Version._cont = ASN1Dict([
        (u'maj', _Version_maj),
        (u'min', _Version_min),
        (u'servind', _Version_servind),
        ])
    Version._ext = None
    
    #-----< SessionID >-----#
    SessionID = SEQ(name=u'SessionID', mode=MODE_TYPE)
    _SessionID_setSessionID = SEQ(name=u'setSessionID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'SetSessionID')), opt=True)
    _SessionID_slpSessionID = SEQ(name=u'slpSessionID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'SlpSessionID')), opt=True)
    SessionID._cont = ASN1Dict([
        (u'setSessionID', _SessionID_setSessionID),
        (u'slpSessionID', _SessionID_slpSessionID),
        ])
    SessionID._ext = None
    
    #-----< SetSessionID >-----#
    SetSessionID = SEQ(name=u'SetSessionID', mode=MODE_TYPE)
    _SetSessionID_sessionId = INT(name=u'sessionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SetSessionID_sessionId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _SetSessionID_setId = CHOICE(name=u'setId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ULP-Components', 'SETId')))
    SetSessionID._cont = ASN1Dict([
        (u'sessionId', _SetSessionID_sessionId),
        (u'setId', _SetSessionID_setId),
        ])
    SetSessionID._ext = None
    
    #-----< SETId >-----#
    SETId = CHOICE(name=u'SETId', mode=MODE_TYPE)
    _SETId_msisdn = OCT_STR(name=u'msisdn', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SETId_msisdn._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _SETId_mdn = OCT_STR(name=u'mdn', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SETId_mdn._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _SETId_min = BIT_STR(name=u'min', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SETId_min._const_sz = ASN1Set(rv=[34], rr=[], ev=None, er=[])
    _SETId_imsi = OCT_STR(name=u'imsi', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SETId_imsi._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _SETId_nai = STR_IA5(name=u'nai', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SETId_nai._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1000)], ev=None, er=[])
    _SETId_iPAddress = CHOICE(name=u'iPAddress', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ULP-Components', 'IPAddress')))
    SETId._cont = ASN1Dict([
        (u'msisdn', _SETId_msisdn),
        (u'mdn', _SETId_mdn),
        (u'min', _SETId_min),
        (u'imsi', _SETId_imsi),
        (u'nai', _SETId_nai),
        (u'iPAddress', _SETId_iPAddress),
        ])
    SETId._ext = []
    
    #-----< SlpSessionID >-----#
    SlpSessionID = SEQ(name=u'SlpSessionID', mode=MODE_TYPE)
    _SlpSessionID_sessionID = OCT_STR(name=u'sessionID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SlpSessionID_sessionID._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _SlpSessionID_slpId = CHOICE(name=u'slpId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ULP-Components', 'SLPAddress')))
    SlpSessionID._cont = ASN1Dict([
        (u'sessionID', _SlpSessionID_sessionID),
        (u'slpId', _SlpSessionID_slpId),
        ])
    SlpSessionID._ext = None
    
    #-----< IPAddress >-----#
    IPAddress = CHOICE(name=u'IPAddress', mode=MODE_TYPE)
    _IPAddress_ipv4Address = OCT_STR(name=u'ipv4Address', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IPAddress_ipv4Address._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _IPAddress_ipv6Address = OCT_STR(name=u'ipv6Address', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IPAddress_ipv6Address._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    IPAddress._cont = ASN1Dict([
        (u'ipv4Address', _IPAddress_ipv4Address),
        (u'ipv6Address', _IPAddress_ipv6Address),
        ])
    IPAddress._ext = None
    
    #-----< SLPAddress >-----#
    SLPAddress = CHOICE(name=u'SLPAddress', mode=MODE_TYPE)
    _SLPAddress_iPAddress = CHOICE(name=u'iPAddress', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ULP-Components', 'IPAddress')))
    _SLPAddress_fqdn = STR_VIS(name=u'fqdn', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'FQDN')))
    _SLPAddress_fqdn._const_alpha = ASN1Set(rv=[u'.', u'-'], rr=[ASN1RangeStr(lb=u'a', ub=u'z'), ASN1RangeStr(lb=u'A', ub=u'Z'), ASN1RangeStr(lb=u'0', ub=u'9')], ev=None, er=[])
    SLPAddress._cont = ASN1Dict([
        (u'iPAddress', _SLPAddress_iPAddress),
        (u'fqdn', _SLPAddress_fqdn),
        ])
    SLPAddress._ext = []
    
    #-----< FQDN >-----#
    FQDN = STR_VIS(name=u'FQDN', mode=MODE_TYPE)
    FQDN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=255)], ev=None, er=[])
    FQDN._const_alpha = ASN1Set(rv=[u'.', u'-'], rr=[ASN1RangeStr(lb=u'a', ub=u'z'), ASN1RangeStr(lb=u'A', ub=u'Z'), ASN1RangeStr(lb=u'0', ub=u'9')], ev=None, er=[])
    
    #-----< Ver >-----#
    Ver = BIT_STR(name=u'Ver', mode=MODE_TYPE)
    Ver._const_sz = ASN1Set(rv=[64], rr=[], ev=None, er=[])
    
    #-----< LocationId >-----#
    LocationId = SEQ(name=u'LocationId', mode=MODE_TYPE)
    _LocationId_cellInfo = CHOICE(name=u'cellInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ULP-Components', 'CellInfo')))
    _LocationId_status = ENUM(name=u'status', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'Status')))
    LocationId._cont = ASN1Dict([
        (u'cellInfo', _LocationId_cellInfo),
        (u'status', _LocationId_status),
        ])
    LocationId._ext = []
    
    #-----< Status >-----#
    Status = ENUM(name=u'Status', mode=MODE_TYPE)
    Status._cont = ASN1Dict([(u'stale', 0), (u'current', 1), (u'unknown', 2)])
    Status._ext = []
    
    #-----< CellInfo >-----#
    CellInfo = CHOICE(name=u'CellInfo', mode=MODE_TYPE)
    _CellInfo_gsmCell = SEQ(name=u'gsmCell', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'GsmCellInformation')))
    _CellInfo_wcdmaCell = SEQ(name=u'wcdmaCell', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'WcdmaCellInformation')))
    _CellInfo_cdmaCell = SEQ(name=u'cdmaCell', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'CdmaCellInformation')))
    _CellInfo_ver2_CellInfo_extension = CHOICE(name=u'ver2-CellInfo-extension', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'Ver2-CellInfo-extension')))
    CellInfo._cont = ASN1Dict([
        (u'gsmCell', _CellInfo_gsmCell),
        (u'wcdmaCell', _CellInfo_wcdmaCell),
        (u'cdmaCell', _CellInfo_cdmaCell),
        (u'ver2-CellInfo-extension', _CellInfo_ver2_CellInfo_extension),
        ])
    CellInfo._ext = [u'ver2-CellInfo-extension']
    
    #-----< Position >-----#
    Position = SEQ(name=u'Position', mode=MODE_TYPE)
    _Position_timestamp = TIME_UTC(name=u'timestamp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Position_positionEstimate = SEQ(name=u'positionEstimate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'PositionEstimate')))
    _Position_velocity = CHOICE(name=u'velocity', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ULP-Components', 'Velocity')), opt=True)
    Position._cont = ASN1Dict([
        (u'timestamp', _Position_timestamp),
        (u'positionEstimate', _Position_positionEstimate),
        (u'velocity', _Position_velocity),
        ])
    Position._ext = []
    
    #-----< PositionEstimate >-----#
    PositionEstimate = SEQ(name=u'PositionEstimate', mode=MODE_TYPE)
    _PositionEstimate_latitudeSign = ENUM(name=u'latitudeSign', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PositionEstimate_latitudeSign._cont = ASN1Dict([(u'north', 0), (u'south', 1)])
    _PositionEstimate_latitudeSign._ext = None
    _PositionEstimate_latitude = INT(name=u'latitude', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PositionEstimate_latitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8388607)], ev=None, er=[])
    _PositionEstimate_longitude = INT(name=u'longitude', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PositionEstimate_longitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _PositionEstimate_uncertainty = SEQ(name=u'uncertainty', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PositionEstimate_uncertainty_uncertaintySemiMajor = INT(name=u'uncertaintySemiMajor', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PositionEstimate_uncertainty_uncertaintySemiMajor._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    __PositionEstimate_uncertainty_uncertaintySemiMinor = INT(name=u'uncertaintySemiMinor', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PositionEstimate_uncertainty_uncertaintySemiMinor._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    __PositionEstimate_uncertainty_orientationMajorAxis = INT(name=u'orientationMajorAxis', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PositionEstimate_uncertainty_orientationMajorAxis._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=180)], ev=None, er=[])
    _PositionEstimate_uncertainty._cont = ASN1Dict([
        (u'uncertaintySemiMajor', __PositionEstimate_uncertainty_uncertaintySemiMajor),
        (u'uncertaintySemiMinor', __PositionEstimate_uncertainty_uncertaintySemiMinor),
        (u'orientationMajorAxis', __PositionEstimate_uncertainty_orientationMajorAxis),
        ])
    _PositionEstimate_uncertainty._ext = None
    _PositionEstimate_confidence = INT(name=u'confidence', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PositionEstimate_confidence._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=100)], ev=None, er=[])
    _PositionEstimate_altitudeInfo = SEQ(name=u'altitudeInfo', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'AltitudeInfo')), opt=True)
    PositionEstimate._cont = ASN1Dict([
        (u'latitudeSign', _PositionEstimate_latitudeSign),
        (u'latitude', _PositionEstimate_latitude),
        (u'longitude', _PositionEstimate_longitude),
        (u'uncertainty', _PositionEstimate_uncertainty),
        (u'confidence', _PositionEstimate_confidence),
        (u'altitudeInfo', _PositionEstimate_altitudeInfo),
        ])
    PositionEstimate._ext = []
    
    #-----< AltitudeInfo >-----#
    AltitudeInfo = SEQ(name=u'AltitudeInfo', mode=MODE_TYPE)
    _AltitudeInfo_altitudeDirection = ENUM(name=u'altitudeDirection', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AltitudeInfo_altitudeDirection._cont = ASN1Dict([(u'height', 0), (u'depth', 1)])
    _AltitudeInfo_altitudeDirection._ext = None
    _AltitudeInfo_altitude = INT(name=u'altitude', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AltitudeInfo_altitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    _AltitudeInfo_altUncertainty = INT(name=u'altUncertainty', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AltitudeInfo_altUncertainty._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    AltitudeInfo._cont = ASN1Dict([
        (u'altitudeDirection', _AltitudeInfo_altitudeDirection),
        (u'altitude', _AltitudeInfo_altitude),
        (u'altUncertainty', _AltitudeInfo_altUncertainty),
        ])
    AltitudeInfo._ext = []
    
    #-----< CdmaCellInformation >-----#
    CdmaCellInformation = SEQ(name=u'CdmaCellInformation', mode=MODE_TYPE)
    _CdmaCellInformation_refNID = INT(name=u'refNID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CdmaCellInformation_refNID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _CdmaCellInformation_refSID = INT(name=u'refSID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CdmaCellInformation_refSID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    _CdmaCellInformation_refBASEID = INT(name=u'refBASEID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CdmaCellInformation_refBASEID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _CdmaCellInformation_refBASELAT = INT(name=u'refBASELAT', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CdmaCellInformation_refBASELAT._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4194303)], ev=None, er=[])
    _CdmaCellInformation_reBASELONG = INT(name=u'reBASELONG', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CdmaCellInformation_reBASELONG._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8388607)], ev=None, er=[])
    _CdmaCellInformation_refREFPN = INT(name=u'refREFPN', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CdmaCellInformation_refREFPN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=511)], ev=None, er=[])
    _CdmaCellInformation_refWeekNumber = INT(name=u'refWeekNumber', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CdmaCellInformation_refWeekNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _CdmaCellInformation_refSeconds = INT(name=u'refSeconds', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CdmaCellInformation_refSeconds._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4194303)], ev=None, er=[])
    CdmaCellInformation._cont = ASN1Dict([
        (u'refNID', _CdmaCellInformation_refNID),
        (u'refSID', _CdmaCellInformation_refSID),
        (u'refBASEID', _CdmaCellInformation_refBASEID),
        (u'refBASELAT', _CdmaCellInformation_refBASELAT),
        (u'reBASELONG', _CdmaCellInformation_reBASELONG),
        (u'refREFPN', _CdmaCellInformation_refREFPN),
        (u'refWeekNumber', _CdmaCellInformation_refWeekNumber),
        (u'refSeconds', _CdmaCellInformation_refSeconds),
        ])
    CdmaCellInformation._ext = []
    
    #-----< GsmCellInformation >-----#
    GsmCellInformation = SEQ(name=u'GsmCellInformation', mode=MODE_TYPE)
    _GsmCellInformation_refMCC = INT(name=u'refMCC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GsmCellInformation_refMCC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=999)], ev=None, er=[])
    _GsmCellInformation_refMNC = INT(name=u'refMNC', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GsmCellInformation_refMNC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=999)], ev=None, er=[])
    _GsmCellInformation_refLAC = INT(name=u'refLAC', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GsmCellInformation_refLAC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _GsmCellInformation_refCI = INT(name=u'refCI', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GsmCellInformation_refCI._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _GsmCellInformation_nmr = SEQ_OF(name=u'nmr', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'NMR')), opt=True)
    _GsmCellInformation_ta = INT(name=u'ta', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GsmCellInformation_ta._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    GsmCellInformation._cont = ASN1Dict([
        (u'refMCC', _GsmCellInformation_refMCC),
        (u'refMNC', _GsmCellInformation_refMNC),
        (u'refLAC', _GsmCellInformation_refLAC),
        (u'refCI', _GsmCellInformation_refCI),
        (u'nmr', _GsmCellInformation_nmr),
        (u'ta', _GsmCellInformation_ta),
        ])
    GsmCellInformation._ext = []
    
    #-----< WcdmaCellInformation >-----#
    WcdmaCellInformation = SEQ(name=u'WcdmaCellInformation', mode=MODE_TYPE)
    _WcdmaCellInformation_refMCC = INT(name=u'refMCC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _WcdmaCellInformation_refMCC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=999)], ev=None, er=[])
    _WcdmaCellInformation_refMNC = INT(name=u'refMNC', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _WcdmaCellInformation_refMNC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=999)], ev=None, er=[])
    _WcdmaCellInformation_refUC = INT(name=u'refUC', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _WcdmaCellInformation_refUC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=268435455)], ev=None, er=[])
    _WcdmaCellInformation_frequencyInfo = SEQ(name=u'frequencyInfo', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'FrequencyInfo')), opt=True)
    _WcdmaCellInformation_primaryScramblingCode = INT(name=u'primaryScramblingCode', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WcdmaCellInformation_primaryScramblingCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=511)], ev=None, er=[])
    _WcdmaCellInformation_measuredResultsList = SEQ_OF(name=u'measuredResultsList', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'MeasuredResultsList')), opt=True)
    _WcdmaCellInformation_cellParametersId = INT(name=u'cellParametersId', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WcdmaCellInformation_cellParametersId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    _WcdmaCellInformation_timingAdvance = SEQ(name=u'timingAdvance', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'TimingAdvance')), opt=True)
    WcdmaCellInformation._cont = ASN1Dict([
        (u'refMCC', _WcdmaCellInformation_refMCC),
        (u'refMNC', _WcdmaCellInformation_refMNC),
        (u'refUC', _WcdmaCellInformation_refUC),
        (u'frequencyInfo', _WcdmaCellInformation_frequencyInfo),
        (u'primaryScramblingCode', _WcdmaCellInformation_primaryScramblingCode),
        (u'measuredResultsList', _WcdmaCellInformation_measuredResultsList),
        (u'cellParametersId', _WcdmaCellInformation_cellParametersId),
        (u'timingAdvance', _WcdmaCellInformation_timingAdvance),
        ])
    WcdmaCellInformation._ext = [u'cellParametersId', u'timingAdvance']
    
    #-----< TimingAdvance >-----#
    TimingAdvance = SEQ(name=u'TimingAdvance', mode=MODE_TYPE)
    _TimingAdvance_ta = INT(name=u'ta', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TimingAdvance_ta._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8191)], ev=None, er=[])
    _TimingAdvance_tAResolution = ENUM(name=u'tAResolution', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'TAResolution')), opt=True)
    _TimingAdvance_chipRate = ENUM(name=u'chipRate', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'ChipRate')), opt=True)
    TimingAdvance._cont = ASN1Dict([
        (u'ta', _TimingAdvance_ta),
        (u'tAResolution', _TimingAdvance_tAResolution),
        (u'chipRate', _TimingAdvance_chipRate),
        ])
    TimingAdvance._ext = []
    
    #-----< TAResolution >-----#
    TAResolution = ENUM(name=u'TAResolution', mode=MODE_TYPE)
    TAResolution._cont = ASN1Dict([(u'res10chip', 0), (u'res05chip', 1), (u'res0125chip', 2)])
    TAResolution._ext = []
    
    #-----< ChipRate >-----#
    ChipRate = ENUM(name=u'ChipRate', mode=MODE_TYPE)
    ChipRate._cont = ASN1Dict([(u'tdd128', 0), (u'tdd384', 1), (u'tdd768', 2)])
    ChipRate._ext = []
    
    #-----< FrequencyInfo >-----#
    FrequencyInfo = SEQ(name=u'FrequencyInfo', mode=MODE_TYPE)
    _FrequencyInfo_modeSpecificInfo = CHOICE(name=u'modeSpecificInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __FrequencyInfo_modeSpecificInfo_fdd = SEQ(name=u'fdd', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'FrequencyInfoFDD')))
    __FrequencyInfo_modeSpecificInfo_tdd = SEQ(name=u'tdd', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'FrequencyInfoTDD')))
    _FrequencyInfo_modeSpecificInfo._cont = ASN1Dict([
        (u'fdd', __FrequencyInfo_modeSpecificInfo_fdd),
        (u'tdd', __FrequencyInfo_modeSpecificInfo_tdd),
        ])
    _FrequencyInfo_modeSpecificInfo._ext = []
    FrequencyInfo._cont = ASN1Dict([
        (u'modeSpecificInfo', _FrequencyInfo_modeSpecificInfo),
        ])
    FrequencyInfo._ext = []
    
    #-----< FrequencyInfoFDD >-----#
    FrequencyInfoFDD = SEQ(name=u'FrequencyInfoFDD', mode=MODE_TYPE)
    _FrequencyInfoFDD_uarfcn_UL = INT(name=u'uarfcn-UL', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'UARFCN')), opt=True)
    _FrequencyInfoFDD_uarfcn_DL = INT(name=u'uarfcn-DL', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'UARFCN')))
    FrequencyInfoFDD._cont = ASN1Dict([
        (u'uarfcn-UL', _FrequencyInfoFDD_uarfcn_UL),
        (u'uarfcn-DL', _FrequencyInfoFDD_uarfcn_DL),
        ])
    FrequencyInfoFDD._ext = []
    
    #-----< FrequencyInfoTDD >-----#
    FrequencyInfoTDD = SEQ(name=u'FrequencyInfoTDD', mode=MODE_TYPE)
    _FrequencyInfoTDD_uarfcn_Nt = INT(name=u'uarfcn-Nt', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'UARFCN')))
    FrequencyInfoTDD._cont = ASN1Dict([
        (u'uarfcn-Nt', _FrequencyInfoTDD_uarfcn_Nt),
        ])
    FrequencyInfoTDD._ext = []
    
    #-----< UARFCN >-----#
    UARFCN = INT(name=u'UARFCN', mode=MODE_TYPE)
    UARFCN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16383)], ev=None, er=[])
    
    #-----< NMR >-----#
    NMR = SEQ_OF(name=u'NMR', mode=MODE_TYPE)
    _NMR__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ULP-Components', 'NMRelement')))
    NMR._cont = _NMR__item_
    NMR._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    
    #-----< NMRelement >-----#
    NMRelement = SEQ(name=u'NMRelement', mode=MODE_TYPE)
    _NMRelement_arfcn = INT(name=u'arfcn', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NMRelement_arfcn._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    _NMRelement_bsic = INT(name=u'bsic', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NMRelement_bsic._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _NMRelement_rxLev = INT(name=u'rxLev', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NMRelement_rxLev._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    NMRelement._cont = ASN1Dict([
        (u'arfcn', _NMRelement_arfcn),
        (u'bsic', _NMRelement_bsic),
        (u'rxLev', _NMRelement_rxLev),
        ])
    NMRelement._ext = []
    
    #-----< MeasuredResultsList >-----#
    MeasuredResultsList = SEQ_OF(name=u'MeasuredResultsList', mode=MODE_TYPE)
    _MeasuredResultsList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ULP-Components', 'MeasuredResults')))
    MeasuredResultsList._cont = _MeasuredResultsList__item_
    MeasuredResultsList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< MeasuredResults >-----#
    MeasuredResults = SEQ(name=u'MeasuredResults', mode=MODE_TYPE)
    _MeasuredResults_frequencyInfo = SEQ(name=u'frequencyInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'FrequencyInfo')), opt=True)
    _MeasuredResults_utra_CarrierRSSI = INT(name=u'utra-CarrierRSSI', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'UTRA-CarrierRSSI')), opt=True)
    _MeasuredResults_cellMeasuredResultsList = SEQ_OF(name=u'cellMeasuredResultsList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'CellMeasuredResultsList')), opt=True)
    MeasuredResults._cont = ASN1Dict([
        (u'frequencyInfo', _MeasuredResults_frequencyInfo),
        (u'utra-CarrierRSSI', _MeasuredResults_utra_CarrierRSSI),
        (u'cellMeasuredResultsList', _MeasuredResults_cellMeasuredResultsList),
        ])
    MeasuredResults._ext = None
    
    #-----< CellMeasuredResultsList >-----#
    CellMeasuredResultsList = SEQ_OF(name=u'CellMeasuredResultsList', mode=MODE_TYPE)
    _CellMeasuredResultsList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ULP-Components', 'CellMeasuredResults')))
    CellMeasuredResultsList._cont = _CellMeasuredResultsList__item_
    CellMeasuredResultsList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< UTRA-CarrierRSSI >-----#
    UTRA_CarrierRSSI = INT(name=u'UTRA-CarrierRSSI', mode=MODE_TYPE)
    UTRA_CarrierRSSI._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< CellMeasuredResults >-----#
    CellMeasuredResults = SEQ(name=u'CellMeasuredResults', mode=MODE_TYPE)
    _CellMeasuredResults_cellIdentity = INT(name=u'cellIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CellMeasuredResults_cellIdentity._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=268435455)], ev=None, er=[])
    _CellMeasuredResults_modeSpecificInfo = CHOICE(name=u'modeSpecificInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CellMeasuredResults_modeSpecificInfo_fdd = SEQ(name=u'fdd', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CellMeasuredResults_modeSpecificInfo_fdd_primaryCPICH_Info = SEQ(name=u'primaryCPICH-Info', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'PrimaryCPICH-Info')))
    ___CellMeasuredResults_modeSpecificInfo_fdd_cpich_Ec_N0 = INT(name=u'cpich-Ec-N0', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'CPICH-Ec-N0')), opt=True)
    ___CellMeasuredResults_modeSpecificInfo_fdd_cpich_RSCP = INT(name=u'cpich-RSCP', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'CPICH-RSCP')), opt=True)
    ___CellMeasuredResults_modeSpecificInfo_fdd_pathloss = INT(name=u'pathloss', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'Pathloss')), opt=True)
    __CellMeasuredResults_modeSpecificInfo_fdd._cont = ASN1Dict([
        (u'primaryCPICH-Info', ___CellMeasuredResults_modeSpecificInfo_fdd_primaryCPICH_Info),
        (u'cpich-Ec-N0', ___CellMeasuredResults_modeSpecificInfo_fdd_cpich_Ec_N0),
        (u'cpich-RSCP', ___CellMeasuredResults_modeSpecificInfo_fdd_cpich_RSCP),
        (u'pathloss', ___CellMeasuredResults_modeSpecificInfo_fdd_pathloss),
        ])
    __CellMeasuredResults_modeSpecificInfo_fdd._ext = None
    __CellMeasuredResults_modeSpecificInfo_tdd = SEQ(name=u'tdd', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CellMeasuredResults_modeSpecificInfo_tdd_cellParametersID = INT(name=u'cellParametersID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'CellParametersID')))
    ___CellMeasuredResults_modeSpecificInfo_tdd_proposedTGSN = INT(name=u'proposedTGSN', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'TGSN')), opt=True)
    ___CellMeasuredResults_modeSpecificInfo_tdd_primaryCCPCH_RSCP = INT(name=u'primaryCCPCH-RSCP', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'PrimaryCCPCH-RSCP')), opt=True)
    ___CellMeasuredResults_modeSpecificInfo_tdd_pathloss = INT(name=u'pathloss', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'Pathloss')), opt=True)
    ___CellMeasuredResults_modeSpecificInfo_tdd_timeslotISCP_List = SEQ_OF(name=u'timeslotISCP-List', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'TimeslotISCP-List')), opt=True)
    __CellMeasuredResults_modeSpecificInfo_tdd._cont = ASN1Dict([
        (u'cellParametersID', ___CellMeasuredResults_modeSpecificInfo_tdd_cellParametersID),
        (u'proposedTGSN', ___CellMeasuredResults_modeSpecificInfo_tdd_proposedTGSN),
        (u'primaryCCPCH-RSCP', ___CellMeasuredResults_modeSpecificInfo_tdd_primaryCCPCH_RSCP),
        (u'pathloss', ___CellMeasuredResults_modeSpecificInfo_tdd_pathloss),
        (u'timeslotISCP-List', ___CellMeasuredResults_modeSpecificInfo_tdd_timeslotISCP_List),
        ])
    __CellMeasuredResults_modeSpecificInfo_tdd._ext = None
    _CellMeasuredResults_modeSpecificInfo._cont = ASN1Dict([
        (u'fdd', __CellMeasuredResults_modeSpecificInfo_fdd),
        (u'tdd', __CellMeasuredResults_modeSpecificInfo_tdd),
        ])
    _CellMeasuredResults_modeSpecificInfo._ext = None
    CellMeasuredResults._cont = ASN1Dict([
        (u'cellIdentity', _CellMeasuredResults_cellIdentity),
        (u'modeSpecificInfo', _CellMeasuredResults_modeSpecificInfo),
        ])
    CellMeasuredResults._ext = None
    
    #-----< CellParametersID >-----#
    CellParametersID = INT(name=u'CellParametersID', mode=MODE_TYPE)
    CellParametersID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< TGSN >-----#
    TGSN = INT(name=u'TGSN', mode=MODE_TYPE)
    TGSN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=14)], ev=None, er=[])
    
    #-----< PrimaryCCPCH-RSCP >-----#
    PrimaryCCPCH_RSCP = INT(name=u'PrimaryCCPCH-RSCP', mode=MODE_TYPE)
    PrimaryCCPCH_RSCP._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< TimeslotISCP >-----#
    TimeslotISCP = INT(name=u'TimeslotISCP', mode=MODE_TYPE)
    TimeslotISCP._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< TimeslotISCP-List >-----#
    TimeslotISCP_List = SEQ_OF(name=u'TimeslotISCP-List', mode=MODE_TYPE)
    _TimeslotISCP_List__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ULP-Components', 'TimeslotISCP')))
    TimeslotISCP_List._cont = _TimeslotISCP_List__item_
    TimeslotISCP_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=14)], ev=None, er=[])
    
    #-----< PrimaryCPICH-Info >-----#
    PrimaryCPICH_Info = SEQ(name=u'PrimaryCPICH-Info', mode=MODE_TYPE)
    _PrimaryCPICH_Info_primaryScramblingCode = INT(name=u'primaryScramblingCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PrimaryCPICH_Info_primaryScramblingCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=511)], ev=None, er=[])
    PrimaryCPICH_Info._cont = ASN1Dict([
        (u'primaryScramblingCode', _PrimaryCPICH_Info_primaryScramblingCode),
        ])
    PrimaryCPICH_Info._ext = None
    
    #-----< CPICH-Ec-N0 >-----#
    CPICH_Ec_N0 = INT(name=u'CPICH-Ec-N0', mode=MODE_TYPE)
    CPICH_Ec_N0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    
    #-----< CPICH-RSCP >-----#
    CPICH_RSCP = INT(name=u'CPICH-RSCP', mode=MODE_TYPE)
    CPICH_RSCP._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< Pathloss >-----#
    Pathloss = INT(name=u'Pathloss', mode=MODE_TYPE)
    Pathloss._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=46, ub=173)], ev=None, er=[])
    
    #-----< maxCellMeas >-----#
    maxCellMeas = INT(name=u'maxCellMeas', mode=MODE_VALUE)
    maxCellMeas._val = 32
    
    #-----< maxFreq >-----#
    maxFreq = INT(name=u'maxFreq', mode=MODE_VALUE)
    maxFreq._val = 8
    
    #-----< maxTS >-----#
    maxTS = INT(name=u'maxTS', mode=MODE_VALUE)
    maxTS._val = 14
    
    #-----< StatusCode >-----#
    StatusCode = ENUM(name=u'StatusCode', mode=MODE_TYPE)
    StatusCode._cont = ASN1Dict([(u'unspecified', 0), (u'systemFailure', 1), (u'unexpectedMessage', 2), (u'protocolError', 3), (u'dataMissing', 4), (u'unexpectedDataValue', 5), (u'posMethodFailure', 6), (u'posMethodMismatch', 7), (u'posProtocolMismatch', 8), (u'targetSETnotReachable', 9), (u'versionNotSupported', 10), (u'resourceShortage', 11), (u'invalidSessionId', 12), (u'nonProxyModeNotSupported', 13), (u'proxyModeNotSupported', 14), (u'positioningNotPermitted', 15), (u'authNetFailure', 16), (u'authSuplinitFailure', 17), (u'ver2-incompatibleProtectionLevel', 18), (u'ver2-serviceNotSupported', 19), (u'ver2-insufficientInterval', 20), (u'ver2-noSUPLCoverage', 21), (u'consentDeniedByUser', 100), (u'consentGrantedByUser', 101), (u'ver2-sessionStopped', 102), (u'ver2-appIdDenied', 103)])
    StatusCode._ext = [u'ver2-incompatibleProtectionLevel', u'ver2-serviceNotSupported', u'ver2-insufficientInterval', u'ver2-noSUPLCoverage', u'ver2-sessionStopped', u'ver2-appIdDenied']
    
    #-----< QoP >-----#
    QoP = SEQ(name=u'QoP', mode=MODE_TYPE)
    _QoP_horacc = INT(name=u'horacc', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _QoP_horacc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    _QoP_veracc = INT(name=u'veracc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _QoP_veracc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    _QoP_maxLocAge = INT(name=u'maxLocAge', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _QoP_maxLocAge._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _QoP_delay = INT(name=u'delay', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _QoP_delay._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    QoP._cont = ASN1Dict([
        (u'horacc', _QoP_horacc),
        (u'veracc', _QoP_veracc),
        (u'maxLocAge', _QoP_maxLocAge),
        (u'delay', _QoP_delay),
        ])
    QoP._ext = []
    
    #-----< Velocity >-----#
    Velocity = CHOICE(name=u'Velocity', mode=MODE_TYPE)
    _Velocity_horvel = SEQ(name=u'horvel', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'Horvel')))
    _Velocity_horandvervel = SEQ(name=u'horandvervel', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'Horandvervel')))
    _Velocity_horveluncert = SEQ(name=u'horveluncert', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'Horveluncert')))
    _Velocity_horandveruncert = SEQ(name=u'horandveruncert', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'Horandveruncert')))
    Velocity._cont = ASN1Dict([
        (u'horvel', _Velocity_horvel),
        (u'horandvervel', _Velocity_horandvervel),
        (u'horveluncert', _Velocity_horveluncert),
        (u'horandveruncert', _Velocity_horandveruncert),
        ])
    Velocity._ext = []
    
    #-----< Horvel >-----#
    Horvel = SEQ(name=u'Horvel', mode=MODE_TYPE)
    _Horvel_bearing = BIT_STR(name=u'bearing', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horvel_bearing._const_sz = ASN1Set(rv=[9], rr=[], ev=None, er=[])
    _Horvel_horspeed = BIT_STR(name=u'horspeed', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horvel_horspeed._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    Horvel._cont = ASN1Dict([
        (u'bearing', _Horvel_bearing),
        (u'horspeed', _Horvel_horspeed),
        ])
    Horvel._ext = []
    
    #-----< Horandvervel >-----#
    Horandvervel = SEQ(name=u'Horandvervel', mode=MODE_TYPE)
    _Horandvervel_verdirect = BIT_STR(name=u'verdirect', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horandvervel_verdirect._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _Horandvervel_bearing = BIT_STR(name=u'bearing', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horandvervel_bearing._const_sz = ASN1Set(rv=[9], rr=[], ev=None, er=[])
    _Horandvervel_horspeed = BIT_STR(name=u'horspeed', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horandvervel_horspeed._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    _Horandvervel_verspeed = BIT_STR(name=u'verspeed', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horandvervel_verspeed._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    Horandvervel._cont = ASN1Dict([
        (u'verdirect', _Horandvervel_verdirect),
        (u'bearing', _Horandvervel_bearing),
        (u'horspeed', _Horandvervel_horspeed),
        (u'verspeed', _Horandvervel_verspeed),
        ])
    Horandvervel._ext = []
    
    #-----< Horveluncert >-----#
    Horveluncert = SEQ(name=u'Horveluncert', mode=MODE_TYPE)
    _Horveluncert_bearing = BIT_STR(name=u'bearing', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horveluncert_bearing._const_sz = ASN1Set(rv=[9], rr=[], ev=None, er=[])
    _Horveluncert_horspeed = BIT_STR(name=u'horspeed', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horveluncert_horspeed._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    _Horveluncert_uncertspeed = BIT_STR(name=u'uncertspeed', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horveluncert_uncertspeed._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    Horveluncert._cont = ASN1Dict([
        (u'bearing', _Horveluncert_bearing),
        (u'horspeed', _Horveluncert_horspeed),
        (u'uncertspeed', _Horveluncert_uncertspeed),
        ])
    Horveluncert._ext = []
    
    #-----< Horandveruncert >-----#
    Horandveruncert = SEQ(name=u'Horandveruncert', mode=MODE_TYPE)
    _Horandveruncert_verdirect = BIT_STR(name=u'verdirect', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horandveruncert_verdirect._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _Horandveruncert_bearing = BIT_STR(name=u'bearing', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horandveruncert_bearing._const_sz = ASN1Set(rv=[9], rr=[], ev=None, er=[])
    _Horandveruncert_horspeed = BIT_STR(name=u'horspeed', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horandveruncert_horspeed._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    _Horandveruncert_verspeed = BIT_STR(name=u'verspeed', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horandveruncert_verspeed._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _Horandveruncert_horuncertspeed = BIT_STR(name=u'horuncertspeed', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horandveruncert_horuncertspeed._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _Horandveruncert_veruncertspeed = BIT_STR(name=u'veruncertspeed', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horandveruncert_veruncertspeed._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    Horandveruncert._cont = ASN1Dict([
        (u'verdirect', _Horandveruncert_verdirect),
        (u'bearing', _Horandveruncert_bearing),
        (u'horspeed', _Horandveruncert_horspeed),
        (u'verspeed', _Horandveruncert_verspeed),
        (u'horuncertspeed', _Horandveruncert_horuncertspeed),
        (u'veruncertspeed', _Horandveruncert_veruncertspeed),
        ])
    Horandveruncert._ext = []
    
    #-----< PosMethod >-----#
    PosMethod = ENUM(name=u'PosMethod', mode=MODE_TYPE)
    PosMethod._cont = ASN1Dict([(u'agpsSETassisted', 0), (u'agpsSETbased', 1), (u'agpsSETassistedpref', 2), (u'agpsSETbasedpref', 3), (u'autonomousGPS', 4), (u'aFLT', 5), (u'eCID', 6), (u'eOTD', 7), (u'oTDOA', 8), (u'noPosition', 9), (u'ver2-historicalDataRetrieval', 10), (u'ver2-agnssSETassisted', 11), (u'ver2-agnssSETbased', 12), (u'ver2-agnssSETassistedpref', 13), (u'ver2-agnssSETbasedpref', 14), (u'ver2-autonomousGNSS', 15), (u'ver2-sessioninfoquery', 16)])
    PosMethod._ext = [u'ver2-historicalDataRetrieval', u'ver2-agnssSETassisted', u'ver2-agnssSETbased', u'ver2-agnssSETassistedpref', u'ver2-agnssSETbasedpref', u'ver2-autonomousGNSS', u'ver2-sessioninfoquery']
    
    _all_ = [
        _Version_maj,
        _Version_min,
        _Version_servind,
        Version,
        _SessionID_setSessionID,
        _SessionID_slpSessionID,
        SessionID,
        _SetSessionID_sessionId,
        _SetSessionID_setId,
        SetSessionID,
        _SETId_msisdn,
        _SETId_mdn,
        _SETId_min,
        _SETId_imsi,
        _SETId_nai,
        _SETId_iPAddress,
        SETId,
        _SlpSessionID_sessionID,
        _SlpSessionID_slpId,
        SlpSessionID,
        _IPAddress_ipv4Address,
        _IPAddress_ipv6Address,
        IPAddress,
        _SLPAddress_iPAddress,
        _SLPAddress_fqdn,
        SLPAddress,
        FQDN,
        Ver,
        _LocationId_cellInfo,
        _LocationId_status,
        LocationId,
        Status,
        _CellInfo_gsmCell,
        _CellInfo_wcdmaCell,
        _CellInfo_cdmaCell,
        _CellInfo_ver2_CellInfo_extension,
        CellInfo,
        _Position_timestamp,
        _Position_positionEstimate,
        _Position_velocity,
        Position,
        _PositionEstimate_latitudeSign,
        _PositionEstimate_latitude,
        _PositionEstimate_longitude,
        __PositionEstimate_uncertainty_uncertaintySemiMajor,
        __PositionEstimate_uncertainty_uncertaintySemiMinor,
        __PositionEstimate_uncertainty_orientationMajorAxis,
        _PositionEstimate_uncertainty,
        _PositionEstimate_confidence,
        _PositionEstimate_altitudeInfo,
        PositionEstimate,
        _AltitudeInfo_altitudeDirection,
        _AltitudeInfo_altitude,
        _AltitudeInfo_altUncertainty,
        AltitudeInfo,
        _CdmaCellInformation_refNID,
        _CdmaCellInformation_refSID,
        _CdmaCellInformation_refBASEID,
        _CdmaCellInformation_refBASELAT,
        _CdmaCellInformation_reBASELONG,
        _CdmaCellInformation_refREFPN,
        _CdmaCellInformation_refWeekNumber,
        _CdmaCellInformation_refSeconds,
        CdmaCellInformation,
        _GsmCellInformation_refMCC,
        _GsmCellInformation_refMNC,
        _GsmCellInformation_refLAC,
        _GsmCellInformation_refCI,
        _GsmCellInformation_nmr,
        _GsmCellInformation_ta,
        GsmCellInformation,
        _WcdmaCellInformation_refMCC,
        _WcdmaCellInformation_refMNC,
        _WcdmaCellInformation_refUC,
        _WcdmaCellInformation_frequencyInfo,
        _WcdmaCellInformation_primaryScramblingCode,
        _WcdmaCellInformation_measuredResultsList,
        _WcdmaCellInformation_cellParametersId,
        _WcdmaCellInformation_timingAdvance,
        WcdmaCellInformation,
        _TimingAdvance_ta,
        _TimingAdvance_tAResolution,
        _TimingAdvance_chipRate,
        TimingAdvance,
        TAResolution,
        ChipRate,
        __FrequencyInfo_modeSpecificInfo_fdd,
        __FrequencyInfo_modeSpecificInfo_tdd,
        _FrequencyInfo_modeSpecificInfo,
        FrequencyInfo,
        _FrequencyInfoFDD_uarfcn_UL,
        _FrequencyInfoFDD_uarfcn_DL,
        FrequencyInfoFDD,
        _FrequencyInfoTDD_uarfcn_Nt,
        FrequencyInfoTDD,
        UARFCN,
        _NMR__item_,
        NMR,
        _NMRelement_arfcn,
        _NMRelement_bsic,
        _NMRelement_rxLev,
        NMRelement,
        _MeasuredResultsList__item_,
        MeasuredResultsList,
        _MeasuredResults_frequencyInfo,
        _MeasuredResults_utra_CarrierRSSI,
        _MeasuredResults_cellMeasuredResultsList,
        MeasuredResults,
        _CellMeasuredResultsList__item_,
        CellMeasuredResultsList,
        UTRA_CarrierRSSI,
        _CellMeasuredResults_cellIdentity,
        ___CellMeasuredResults_modeSpecificInfo_fdd_primaryCPICH_Info,
        ___CellMeasuredResults_modeSpecificInfo_fdd_cpich_Ec_N0,
        ___CellMeasuredResults_modeSpecificInfo_fdd_cpich_RSCP,
        ___CellMeasuredResults_modeSpecificInfo_fdd_pathloss,
        __CellMeasuredResults_modeSpecificInfo_fdd,
        ___CellMeasuredResults_modeSpecificInfo_tdd_cellParametersID,
        ___CellMeasuredResults_modeSpecificInfo_tdd_proposedTGSN,
        ___CellMeasuredResults_modeSpecificInfo_tdd_primaryCCPCH_RSCP,
        ___CellMeasuredResults_modeSpecificInfo_tdd_pathloss,
        ___CellMeasuredResults_modeSpecificInfo_tdd_timeslotISCP_List,
        __CellMeasuredResults_modeSpecificInfo_tdd,
        _CellMeasuredResults_modeSpecificInfo,
        CellMeasuredResults,
        CellParametersID,
        TGSN,
        PrimaryCCPCH_RSCP,
        TimeslotISCP,
        _TimeslotISCP_List__item_,
        TimeslotISCP_List,
        _PrimaryCPICH_Info_primaryScramblingCode,
        PrimaryCPICH_Info,
        CPICH_Ec_N0,
        CPICH_RSCP,
        Pathloss,
        maxCellMeas,
        maxFreq,
        maxTS,
        StatusCode,
        _QoP_horacc,
        _QoP_veracc,
        _QoP_maxLocAge,
        _QoP_delay,
        QoP,
        _Velocity_horvel,
        _Velocity_horandvervel,
        _Velocity_horveluncert,
        _Velocity_horandveruncert,
        Velocity,
        _Horvel_bearing,
        _Horvel_horspeed,
        Horvel,
        _Horandvervel_verdirect,
        _Horandvervel_bearing,
        _Horandvervel_horspeed,
        _Horandvervel_verspeed,
        Horandvervel,
        _Horveluncert_bearing,
        _Horveluncert_horspeed,
        _Horveluncert_uncertspeed,
        Horveluncert,
        _Horandveruncert_verdirect,
        _Horandveruncert_bearing,
        _Horandveruncert_horspeed,
        _Horandveruncert_verspeed,
        _Horandveruncert_horuncertspeed,
        _Horandveruncert_veruncertspeed,
        Horandveruncert,
        PosMethod,
    ]

class Ver2_ULP_Components:

    _name_  = u'Ver2-ULP-Components'
    _oid_   = []
    
    _obj_ = [
        u'MultipleLocationIds',
        u'LocationIdData',
        u'RelativeTime',
        u'maxLidSize',
        u'SupportedNetworkInformation',
        u'SupportedWLANInfo',
        u'maxWLANApDataSize',
        u'SupportedWLANApsList',
        u'SupportedWLANApsChannel11a',
        u'SupportedWLANApsChannel11bg',
        u'SupportedWLANApData',
        u'SupportedWCDMAInfo',
        u'Ver2-CellInfo-extension',
        u'HrpdCellInformation',
        u'UmbCellInformation',
        u'LteCellInformation',
        u'MeasResultListEUTRA',
        u'MeasResultEUTRA',
        u'PhysCellId',
        u'TrackingAreaCode',
        u'CellGlobalIdEUTRA',
        u'PLMN-Identity',
        u'CellIdentity',
        u'MCC',
        u'MNC',
        u'MCC-MNC-Digit',
        u'RSRP-Range',
        u'RSRQ-Range',
        u'maxCellReport',
        u'WlanAPInformation',
        u'RTD',
        u'RTDUnits',
        u'ReportedLocation',
        u'LocationEncodingDescriptor',
        u'LocationData',
        u'RepLocation',
        u'LciLocData',
        u'LocationDataLCI',
        u'WimaxBSInformation',
        u'WimaxBsID',
        u'WimaxRTD',
        u'WimaxNMRList',
        u'WimaxNMR',
        u'maxWimaxBSMeas',
        u'UTRAN-GPSReferenceTimeAssistance',
        u'UTRAN-GPSReferenceTime',
        u'UTRANGPSDriftRate',
        u'UTRAN-GPSReferenceTimeResult',
        u'UTRAN-GANSSReferenceTimeAssistance',
        u'UTRAN-GANSSReferenceTime',
        u'UTRANGANSSDriftRate',
        u'UTRAN-GANSSReferenceTimeResult',
        u'SET-GANSSReferenceTime',
        u'GNSSPosTechnology',
        u'GANSSSignals',
        u'SPCSETKey',
        u'SPCTID',
        u'SPCSETKeylifetime',
        u'CauseCode',
        u'ThirdParty',
        u'ThirdPartyID',
        u'ApplicationID',
        u'ReportingCap',
        u'RepMode',
        u'BatchRepCap',
        u'Coordinate',
        u'CircularArea',
        u'EllipticalArea',
        u'PolygonArea',
        u'PolygonDescription',
        ]
    _type_ = [
        u'MultipleLocationIds',
        u'LocationIdData',
        u'RelativeTime',
        u'SupportedNetworkInformation',
        u'SupportedWLANInfo',
        u'SupportedWLANApsList',
        u'SupportedWLANApsChannel11a',
        u'SupportedWLANApsChannel11bg',
        u'SupportedWLANApData',
        u'SupportedWCDMAInfo',
        u'Ver2-CellInfo-extension',
        u'HrpdCellInformation',
        u'UmbCellInformation',
        u'LteCellInformation',
        u'MeasResultListEUTRA',
        u'MeasResultEUTRA',
        u'PhysCellId',
        u'TrackingAreaCode',
        u'CellGlobalIdEUTRA',
        u'PLMN-Identity',
        u'CellIdentity',
        u'MCC',
        u'MNC',
        u'MCC-MNC-Digit',
        u'RSRP-Range',
        u'RSRQ-Range',
        u'WlanAPInformation',
        u'RTD',
        u'RTDUnits',
        u'ReportedLocation',
        u'LocationEncodingDescriptor',
        u'LocationData',
        u'RepLocation',
        u'LciLocData',
        u'LocationDataLCI',
        u'WimaxBSInformation',
        u'WimaxBsID',
        u'WimaxRTD',
        u'WimaxNMRList',
        u'WimaxNMR',
        u'UTRAN-GPSReferenceTimeAssistance',
        u'UTRAN-GPSReferenceTime',
        u'UTRANGPSDriftRate',
        u'UTRAN-GPSReferenceTimeResult',
        u'UTRAN-GANSSReferenceTimeAssistance',
        u'UTRAN-GANSSReferenceTime',
        u'UTRANGANSSDriftRate',
        u'UTRAN-GANSSReferenceTimeResult',
        u'SET-GANSSReferenceTime',
        u'GNSSPosTechnology',
        u'GANSSSignals',
        u'SPCSETKey',
        u'SPCTID',
        u'SPCSETKeylifetime',
        u'CauseCode',
        u'ThirdParty',
        u'ThirdPartyID',
        u'ApplicationID',
        u'ReportingCap',
        u'RepMode',
        u'BatchRepCap',
        u'Coordinate',
        u'CircularArea',
        u'EllipticalArea',
        u'PolygonArea',
        u'PolygonDescription',
        ]
    _set_ = [
        ]
    _val_ = [
        u'maxLidSize',
        u'maxWLANApDataSize',
        u'maxCellReport',
        u'maxWimaxBSMeas',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< MultipleLocationIds >-----#
    MultipleLocationIds = SEQ_OF(name=u'MultipleLocationIds', mode=MODE_TYPE)
    _MultipleLocationIds__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Ver2-ULP-Components', 'LocationIdData')))
    MultipleLocationIds._cont = _MultipleLocationIds__item_
    MultipleLocationIds._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< LocationIdData >-----#
    LocationIdData = SEQ(name=u'LocationIdData', mode=MODE_TYPE)
    _LocationIdData_locationId = SEQ(name=u'locationId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'LocationId')))
    _LocationIdData_relativetimestamp = INT(name=u'relativetimestamp', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'RelativeTime')), opt=True)
    _LocationIdData_servingFlag = BOOL(name=u'servingFlag', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    LocationIdData._cont = ASN1Dict([
        (u'locationId', _LocationIdData_locationId),
        (u'relativetimestamp', _LocationIdData_relativetimestamp),
        (u'servingFlag', _LocationIdData_servingFlag),
        ])
    LocationIdData._ext = []
    
    #-----< RelativeTime >-----#
    RelativeTime = INT(name=u'RelativeTime', mode=MODE_TYPE)
    RelativeTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< maxLidSize >-----#
    maxLidSize = INT(name=u'maxLidSize', mode=MODE_VALUE)
    maxLidSize._val = 64
    
    #-----< SupportedNetworkInformation >-----#
    SupportedNetworkInformation = SEQ(name=u'SupportedNetworkInformation', mode=MODE_TYPE)
    _SupportedNetworkInformation_wlan = BOOL(name=u'wlan', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedNetworkInformation_supportedWLANInfo = SEQ(name=u'supportedWLANInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'SupportedWLANInfo')), opt=True)
    _SupportedNetworkInformation_supportedWLANApsList = SEQ(name=u'supportedWLANApsList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'SupportedWLANApsList')), opt=True)
    _SupportedNetworkInformation_gsm = BOOL(name=u'gsm', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedNetworkInformation_wcdma = BOOL(name=u'wcdma', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedNetworkInformation_supportedWCDMAInfo = SEQ(name=u'supportedWCDMAInfo', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'SupportedWCDMAInfo')), opt=True)
    _SupportedNetworkInformation_cdma = BOOL(name=u'cdma', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedNetworkInformation_hrdp = BOOL(name=u'hrdp', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedNetworkInformation_umb = BOOL(name=u'umb', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedNetworkInformation_lte = BOOL(name=u'lte', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedNetworkInformation_wimax = BOOL(name=u'wimax', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedNetworkInformation_historic = BOOL(name=u'historic', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedNetworkInformation_nonServing = BOOL(name=u'nonServing', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedNetworkInformation_uTRANGPSReferenceTime = BOOL(name=u'uTRANGPSReferenceTime', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedNetworkInformation_uTRANGANSSReferenceTime = BOOL(name=u'uTRANGANSSReferenceTime', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    SupportedNetworkInformation._cont = ASN1Dict([
        (u'wlan', _SupportedNetworkInformation_wlan),
        (u'supportedWLANInfo', _SupportedNetworkInformation_supportedWLANInfo),
        (u'supportedWLANApsList', _SupportedNetworkInformation_supportedWLANApsList),
        (u'gsm', _SupportedNetworkInformation_gsm),
        (u'wcdma', _SupportedNetworkInformation_wcdma),
        (u'supportedWCDMAInfo', _SupportedNetworkInformation_supportedWCDMAInfo),
        (u'cdma', _SupportedNetworkInformation_cdma),
        (u'hrdp', _SupportedNetworkInformation_hrdp),
        (u'umb', _SupportedNetworkInformation_umb),
        (u'lte', _SupportedNetworkInformation_lte),
        (u'wimax', _SupportedNetworkInformation_wimax),
        (u'historic', _SupportedNetworkInformation_historic),
        (u'nonServing', _SupportedNetworkInformation_nonServing),
        (u'uTRANGPSReferenceTime', _SupportedNetworkInformation_uTRANGPSReferenceTime),
        (u'uTRANGANSSReferenceTime', _SupportedNetworkInformation_uTRANGANSSReferenceTime),
        ])
    SupportedNetworkInformation._ext = []
    
    #-----< SupportedWLANInfo >-----#
    SupportedWLANInfo = SEQ(name=u'SupportedWLANInfo', mode=MODE_TYPE)
    _SupportedWLANInfo_apTP = BOOL(name=u'apTP', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANInfo_apAG = BOOL(name=u'apAG', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANInfo_apSN = BOOL(name=u'apSN', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANInfo_apDevType = BOOL(name=u'apDevType', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANInfo_apRSSI = BOOL(name=u'apRSSI', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANInfo_apChanFreq = BOOL(name=u'apChanFreq', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANInfo_apRTD = BOOL(name=u'apRTD', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANInfo_setTP = BOOL(name=u'setTP', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANInfo_setAG = BOOL(name=u'setAG', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANInfo_setSN = BOOL(name=u'setSN', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANInfo_setRSSI = BOOL(name=u'setRSSI', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANInfo_apRepLoc = BOOL(name=u'apRepLoc', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    SupportedWLANInfo._cont = ASN1Dict([
        (u'apTP', _SupportedWLANInfo_apTP),
        (u'apAG', _SupportedWLANInfo_apAG),
        (u'apSN', _SupportedWLANInfo_apSN),
        (u'apDevType', _SupportedWLANInfo_apDevType),
        (u'apRSSI', _SupportedWLANInfo_apRSSI),
        (u'apChanFreq', _SupportedWLANInfo_apChanFreq),
        (u'apRTD', _SupportedWLANInfo_apRTD),
        (u'setTP', _SupportedWLANInfo_setTP),
        (u'setAG', _SupportedWLANInfo_setAG),
        (u'setSN', _SupportedWLANInfo_setSN),
        (u'setRSSI', _SupportedWLANInfo_setRSSI),
        (u'apRepLoc', _SupportedWLANInfo_apRepLoc),
        ])
    SupportedWLANInfo._ext = []
    
    #-----< maxWLANApDataSize >-----#
    maxWLANApDataSize = INT(name=u'maxWLANApDataSize', mode=MODE_VALUE)
    maxWLANApDataSize._val = 128
    
    #-----< SupportedWLANApsList >-----#
    SupportedWLANApsList = SEQ(name=u'SupportedWLANApsList', mode=MODE_TYPE)
    _SupportedWLANApsList_supportedWLANApDataList = SEQ_OF(name=u'supportedWLANApDataList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SupportedWLANApsList_supportedWLANApDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Ver2-ULP-Components', 'SupportedWLANApData')))
    _SupportedWLANApsList_supportedWLANApDataList._cont = __SupportedWLANApsList_supportedWLANApDataList__item_
    _SupportedWLANApsList_supportedWLANApDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    _SupportedWLANApsList_supportedWLANapsChannel11a = SEQ(name=u'supportedWLANapsChannel11a', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'SupportedWLANApsChannel11a')), opt=True)
    _SupportedWLANApsList_supportedWLANapsChannel11bg = SEQ(name=u'supportedWLANapsChannel11bg', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'SupportedWLANApsChannel11bg')), opt=True)
    SupportedWLANApsList._cont = ASN1Dict([
        (u'supportedWLANApDataList', _SupportedWLANApsList_supportedWLANApDataList),
        (u'supportedWLANapsChannel11a', _SupportedWLANApsList_supportedWLANapsChannel11a),
        (u'supportedWLANapsChannel11bg', _SupportedWLANApsList_supportedWLANapsChannel11bg),
        ])
    SupportedWLANApsList._ext = []
    
    #-----< SupportedWLANApsChannel11a >-----#
    SupportedWLANApsChannel11a = SEQ(name=u'SupportedWLANApsChannel11a', mode=MODE_TYPE)
    _SupportedWLANApsChannel11a_ch34 = BOOL(name=u'ch34', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11a_ch36 = BOOL(name=u'ch36', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11a_ch38 = BOOL(name=u'ch38', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11a_ch40 = BOOL(name=u'ch40', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11a_ch42 = BOOL(name=u'ch42', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11a_ch44 = BOOL(name=u'ch44', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11a_ch46 = BOOL(name=u'ch46', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11a_ch48 = BOOL(name=u'ch48', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11a_ch52 = BOOL(name=u'ch52', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11a_ch56 = BOOL(name=u'ch56', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11a_ch60 = BOOL(name=u'ch60', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11a_ch64 = BOOL(name=u'ch64', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11a_ch149 = BOOL(name=u'ch149', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11a_ch153 = BOOL(name=u'ch153', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11a_ch157 = BOOL(name=u'ch157', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11a_ch161 = BOOL(name=u'ch161', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    SupportedWLANApsChannel11a._cont = ASN1Dict([
        (u'ch34', _SupportedWLANApsChannel11a_ch34),
        (u'ch36', _SupportedWLANApsChannel11a_ch36),
        (u'ch38', _SupportedWLANApsChannel11a_ch38),
        (u'ch40', _SupportedWLANApsChannel11a_ch40),
        (u'ch42', _SupportedWLANApsChannel11a_ch42),
        (u'ch44', _SupportedWLANApsChannel11a_ch44),
        (u'ch46', _SupportedWLANApsChannel11a_ch46),
        (u'ch48', _SupportedWLANApsChannel11a_ch48),
        (u'ch52', _SupportedWLANApsChannel11a_ch52),
        (u'ch56', _SupportedWLANApsChannel11a_ch56),
        (u'ch60', _SupportedWLANApsChannel11a_ch60),
        (u'ch64', _SupportedWLANApsChannel11a_ch64),
        (u'ch149', _SupportedWLANApsChannel11a_ch149),
        (u'ch153', _SupportedWLANApsChannel11a_ch153),
        (u'ch157', _SupportedWLANApsChannel11a_ch157),
        (u'ch161', _SupportedWLANApsChannel11a_ch161),
        ])
    SupportedWLANApsChannel11a._ext = None
    
    #-----< SupportedWLANApsChannel11bg >-----#
    SupportedWLANApsChannel11bg = SEQ(name=u'SupportedWLANApsChannel11bg', mode=MODE_TYPE)
    _SupportedWLANApsChannel11bg_ch1 = BOOL(name=u'ch1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11bg_ch2 = BOOL(name=u'ch2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11bg_ch3 = BOOL(name=u'ch3', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11bg_ch4 = BOOL(name=u'ch4', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11bg_ch5 = BOOL(name=u'ch5', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11bg_ch6 = BOOL(name=u'ch6', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11bg_ch7 = BOOL(name=u'ch7', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11bg_ch8 = BOOL(name=u'ch8', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11bg_ch9 = BOOL(name=u'ch9', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11bg_ch10 = BOOL(name=u'ch10', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11bg_ch11 = BOOL(name=u'ch11', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11bg_ch12 = BOOL(name=u'ch12', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11bg_ch13 = BOOL(name=u'ch13', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApsChannel11bg_ch14 = BOOL(name=u'ch14', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    SupportedWLANApsChannel11bg._cont = ASN1Dict([
        (u'ch1', _SupportedWLANApsChannel11bg_ch1),
        (u'ch2', _SupportedWLANApsChannel11bg_ch2),
        (u'ch3', _SupportedWLANApsChannel11bg_ch3),
        (u'ch4', _SupportedWLANApsChannel11bg_ch4),
        (u'ch5', _SupportedWLANApsChannel11bg_ch5),
        (u'ch6', _SupportedWLANApsChannel11bg_ch6),
        (u'ch7', _SupportedWLANApsChannel11bg_ch7),
        (u'ch8', _SupportedWLANApsChannel11bg_ch8),
        (u'ch9', _SupportedWLANApsChannel11bg_ch9),
        (u'ch10', _SupportedWLANApsChannel11bg_ch10),
        (u'ch11', _SupportedWLANApsChannel11bg_ch11),
        (u'ch12', _SupportedWLANApsChannel11bg_ch12),
        (u'ch13', _SupportedWLANApsChannel11bg_ch13),
        (u'ch14', _SupportedWLANApsChannel11bg_ch14),
        ])
    SupportedWLANApsChannel11bg._ext = None
    
    #-----< SupportedWLANApData >-----#
    SupportedWLANApData = SEQ(name=u'SupportedWLANApData', mode=MODE_TYPE)
    _SupportedWLANApData_apMACAddress = BIT_STR(name=u'apMACAddress', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApData_apMACAddress._const_sz = ASN1Set(rv=[48], rr=[], ev=None, er=[])
    _SupportedWLANApData_apDevType = ENUM(name=u'apDevType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedWLANApData_apDevType._cont = ASN1Dict([(u'wlan802-11a', 0), (u'wlan802-11b', 1), (u'wlan802-11g', 2)])
    _SupportedWLANApData_apDevType._ext = []
    SupportedWLANApData._cont = ASN1Dict([
        (u'apMACAddress', _SupportedWLANApData_apMACAddress),
        (u'apDevType', _SupportedWLANApData_apDevType),
        ])
    SupportedWLANApData._ext = []
    
    #-----< SupportedWCDMAInfo >-----#
    SupportedWCDMAInfo = SEQ(name=u'SupportedWCDMAInfo', mode=MODE_TYPE)
    _SupportedWCDMAInfo_mrl = BOOL(name=u'mrl', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    SupportedWCDMAInfo._cont = ASN1Dict([
        (u'mrl', _SupportedWCDMAInfo_mrl),
        ])
    SupportedWCDMAInfo._ext = []
    
    #-----< Ver2-CellInfo-extension >-----#
    Ver2_CellInfo_extension = CHOICE(name=u'Ver2-CellInfo-extension', mode=MODE_TYPE)
    _Ver2_CellInfo_extension_hrpdCell = SEQ(name=u'hrpdCell', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'HrpdCellInformation')))
    _Ver2_CellInfo_extension_umbCell = SEQ(name=u'umbCell', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'UmbCellInformation')))
    _Ver2_CellInfo_extension_lteCell = SEQ(name=u'lteCell', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'LteCellInformation')))
    _Ver2_CellInfo_extension_wlanAP = SEQ(name=u'wlanAP', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'WlanAPInformation')))
    _Ver2_CellInfo_extension_wimaxBS = SEQ(name=u'wimaxBS', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'WimaxBSInformation')))
    Ver2_CellInfo_extension._cont = ASN1Dict([
        (u'hrpdCell', _Ver2_CellInfo_extension_hrpdCell),
        (u'umbCell', _Ver2_CellInfo_extension_umbCell),
        (u'lteCell', _Ver2_CellInfo_extension_lteCell),
        (u'wlanAP', _Ver2_CellInfo_extension_wlanAP),
        (u'wimaxBS', _Ver2_CellInfo_extension_wimaxBS),
        ])
    Ver2_CellInfo_extension._ext = []
    
    #-----< HrpdCellInformation >-----#
    HrpdCellInformation = SEQ(name=u'HrpdCellInformation', mode=MODE_TYPE)
    _HrpdCellInformation_refSECTORID = BIT_STR(name=u'refSECTORID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HrpdCellInformation_refSECTORID._const_sz = ASN1Set(rv=[128], rr=[], ev=None, er=[])
    _HrpdCellInformation_refBASELAT = INT(name=u'refBASELAT', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HrpdCellInformation_refBASELAT._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4194303)], ev=None, er=[])
    _HrpdCellInformation_reBASELONG = INT(name=u'reBASELONG', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HrpdCellInformation_reBASELONG._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8388607)], ev=None, er=[])
    _HrpdCellInformation_refWeekNumber = INT(name=u'refWeekNumber', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HrpdCellInformation_refWeekNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _HrpdCellInformation_refSeconds = INT(name=u'refSeconds', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HrpdCellInformation_refSeconds._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4194303)], ev=None, er=[])
    HrpdCellInformation._cont = ASN1Dict([
        (u'refSECTORID', _HrpdCellInformation_refSECTORID),
        (u'refBASELAT', _HrpdCellInformation_refBASELAT),
        (u'reBASELONG', _HrpdCellInformation_reBASELONG),
        (u'refWeekNumber', _HrpdCellInformation_refWeekNumber),
        (u'refSeconds', _HrpdCellInformation_refSeconds),
        ])
    HrpdCellInformation._ext = []
    
    #-----< UmbCellInformation >-----#
    UmbCellInformation = SEQ(name=u'UmbCellInformation', mode=MODE_TYPE)
    _UmbCellInformation_refSECTORID = BIT_STR(name=u'refSECTORID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UmbCellInformation_refSECTORID._const_sz = ASN1Set(rv=[128], rr=[], ev=None, er=[])
    _UmbCellInformation_refMCC = INT(name=u'refMCC', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UmbCellInformation_refMCC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=999)], ev=None, er=[])
    _UmbCellInformation_refMNC = INT(name=u'refMNC', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UmbCellInformation_refMNC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=999)], ev=None, er=[])
    _UmbCellInformation_refBASELAT = INT(name=u'refBASELAT', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UmbCellInformation_refBASELAT._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4194303)], ev=None, er=[])
    _UmbCellInformation_reBASELONG = INT(name=u'reBASELONG', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UmbCellInformation_reBASELONG._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8388607)], ev=None, er=[])
    _UmbCellInformation_refWeekNumber = INT(name=u'refWeekNumber', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UmbCellInformation_refWeekNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _UmbCellInformation_refSeconds = INT(name=u'refSeconds', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UmbCellInformation_refSeconds._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4194303)], ev=None, er=[])
    UmbCellInformation._cont = ASN1Dict([
        (u'refSECTORID', _UmbCellInformation_refSECTORID),
        (u'refMCC', _UmbCellInformation_refMCC),
        (u'refMNC', _UmbCellInformation_refMNC),
        (u'refBASELAT', _UmbCellInformation_refBASELAT),
        (u'reBASELONG', _UmbCellInformation_reBASELONG),
        (u'refWeekNumber', _UmbCellInformation_refWeekNumber),
        (u'refSeconds', _UmbCellInformation_refSeconds),
        ])
    UmbCellInformation._ext = []
    
    #-----< LteCellInformation >-----#
    LteCellInformation = SEQ(name=u'LteCellInformation', mode=MODE_TYPE)
    _LteCellInformation_cellGlobalIdEUTRA = SEQ(name=u'cellGlobalIdEUTRA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'CellGlobalIdEUTRA')))
    _LteCellInformation_physCellId = INT(name=u'physCellId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'PhysCellId')))
    _LteCellInformation_trackingAreaCode = BIT_STR(name=u'trackingAreaCode', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'TrackingAreaCode')))
    _LteCellInformation_rsrpResult = INT(name=u'rsrpResult', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'RSRP-Range')), opt=True)
    _LteCellInformation_rsrqResult = INT(name=u'rsrqResult', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'RSRQ-Range')), opt=True)
    _LteCellInformation_ta = INT(name=u'ta', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LteCellInformation_ta._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1282)], ev=None, er=[])
    _LteCellInformation_measResultListEUTRA = SEQ_OF(name=u'measResultListEUTRA', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'MeasResultListEUTRA')), opt=True)
    _LteCellInformation_earfcn = INT(name=u'earfcn', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LteCellInformation_earfcn._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _LteCellInformation_earfcn_ext = INT(name=u'earfcn-ext', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LteCellInformation_earfcn_ext._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=65536, ub=262143)], ev=None, er=[])
    LteCellInformation._cont = ASN1Dict([
        (u'cellGlobalIdEUTRA', _LteCellInformation_cellGlobalIdEUTRA),
        (u'physCellId', _LteCellInformation_physCellId),
        (u'trackingAreaCode', _LteCellInformation_trackingAreaCode),
        (u'rsrpResult', _LteCellInformation_rsrpResult),
        (u'rsrqResult', _LteCellInformation_rsrqResult),
        (u'ta', _LteCellInformation_ta),
        (u'measResultListEUTRA', _LteCellInformation_measResultListEUTRA),
        (u'earfcn', _LteCellInformation_earfcn),
        (u'earfcn-ext', _LteCellInformation_earfcn_ext),
        ])
    LteCellInformation._ext = [u'earfcn', u'earfcn-ext']
    
    #-----< MeasResultListEUTRA >-----#
    MeasResultListEUTRA = SEQ_OF(name=u'MeasResultListEUTRA', mode=MODE_TYPE)
    _MeasResultListEUTRA__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Ver2-ULP-Components', 'MeasResultEUTRA')))
    MeasResultListEUTRA._cont = _MeasResultListEUTRA__item_
    MeasResultListEUTRA._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< MeasResultEUTRA >-----#
    MeasResultEUTRA = SEQ(name=u'MeasResultEUTRA', mode=MODE_TYPE)
    _MeasResultEUTRA_physCellId = INT(name=u'physCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'PhysCellId')))
    _MeasResultEUTRA_cgi_Info = SEQ(name=u'cgi-Info', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MeasResultEUTRA_cgi_Info_cellGlobalId = SEQ(name=u'cellGlobalId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'CellGlobalIdEUTRA')))
    __MeasResultEUTRA_cgi_Info_trackingAreaCode = BIT_STR(name=u'trackingAreaCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'TrackingAreaCode')))
    _MeasResultEUTRA_cgi_Info._cont = ASN1Dict([
        (u'cellGlobalId', __MeasResultEUTRA_cgi_Info_cellGlobalId),
        (u'trackingAreaCode', __MeasResultEUTRA_cgi_Info_trackingAreaCode),
        ])
    _MeasResultEUTRA_cgi_Info._ext = None
    _MeasResultEUTRA_measResult = SEQ(name=u'measResult', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MeasResultEUTRA_measResult_rsrpResult = INT(name=u'rsrpResult', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'RSRP-Range')), opt=True)
    __MeasResultEUTRA_measResult_rsrqResult = INT(name=u'rsrqResult', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'RSRQ-Range')), opt=True)
    __MeasResultEUTRA_measResult_earfcn = INT(name=u'earfcn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MeasResultEUTRA_measResult_earfcn._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    __MeasResultEUTRA_measResult_earfcn_ext = INT(name=u'earfcn-ext', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MeasResultEUTRA_measResult_earfcn_ext._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=65536, ub=262143)], ev=None, er=[])
    _MeasResultEUTRA_measResult._cont = ASN1Dict([
        (u'rsrpResult', __MeasResultEUTRA_measResult_rsrpResult),
        (u'rsrqResult', __MeasResultEUTRA_measResult_rsrqResult),
        (u'earfcn', __MeasResultEUTRA_measResult_earfcn),
        (u'earfcn-ext', __MeasResultEUTRA_measResult_earfcn_ext),
        ])
    _MeasResultEUTRA_measResult._ext = [u'earfcn', u'earfcn-ext']
    MeasResultEUTRA._cont = ASN1Dict([
        (u'physCellId', _MeasResultEUTRA_physCellId),
        (u'cgi-Info', _MeasResultEUTRA_cgi_Info),
        (u'measResult', _MeasResultEUTRA_measResult),
        ])
    MeasResultEUTRA._ext = None
    
    #-----< PhysCellId >-----#
    PhysCellId = INT(name=u'PhysCellId', mode=MODE_TYPE)
    PhysCellId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=503)], ev=None, er=[])
    
    #-----< TrackingAreaCode >-----#
    TrackingAreaCode = BIT_STR(name=u'TrackingAreaCode', mode=MODE_TYPE)
    TrackingAreaCode._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< CellGlobalIdEUTRA >-----#
    CellGlobalIdEUTRA = SEQ(name=u'CellGlobalIdEUTRA', mode=MODE_TYPE)
    _CellGlobalIdEUTRA_plmn_Identity = SEQ(name=u'plmn-Identity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'PLMN-Identity')))
    _CellGlobalIdEUTRA_cellIdentity = BIT_STR(name=u'cellIdentity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'CellIdentity')))
    CellGlobalIdEUTRA._cont = ASN1Dict([
        (u'plmn-Identity', _CellGlobalIdEUTRA_plmn_Identity),
        (u'cellIdentity', _CellGlobalIdEUTRA_cellIdentity),
        ])
    CellGlobalIdEUTRA._ext = []
    
    #-----< PLMN-Identity >-----#
    PLMN_Identity = SEQ(name=u'PLMN-Identity', mode=MODE_TYPE)
    _PLMN_Identity_mcc = SEQ_OF(name=u'mcc', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'MCC')), opt=True)
    _PLMN_Identity_mnc = SEQ_OF(name=u'mnc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'MNC')))
    PLMN_Identity._cont = ASN1Dict([
        (u'mcc', _PLMN_Identity_mcc),
        (u'mnc', _PLMN_Identity_mnc),
        ])
    PLMN_Identity._ext = None
    
    #-----< CellIdentity >-----#
    CellIdentity = BIT_STR(name=u'CellIdentity', mode=MODE_TYPE)
    CellIdentity._const_sz = ASN1Set(rv=[28], rr=[], ev=None, er=[])
    
    #-----< MCC >-----#
    MCC = SEQ_OF(name=u'MCC', mode=MODE_TYPE)
    _MCC__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Ver2-ULP-Components', 'MCC-MNC-Digit')))
    MCC._cont = _MCC__item_
    MCC._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    
    #-----< MNC >-----#
    MNC = SEQ_OF(name=u'MNC', mode=MODE_TYPE)
    _MNC__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Ver2-ULP-Components', 'MCC-MNC-Digit')))
    MNC._cont = _MNC__item_
    MNC._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=3)], ev=None, er=[])
    
    #-----< MCC-MNC-Digit >-----#
    MCC_MNC_Digit = INT(name=u'MCC-MNC-Digit', mode=MODE_TYPE)
    MCC_MNC_Digit._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=9)], ev=None, er=[])
    
    #-----< RSRP-Range >-----#
    RSRP_Range = INT(name=u'RSRP-Range', mode=MODE_TYPE)
    RSRP_Range._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=97)], ev=None, er=[])
    
    #-----< RSRQ-Range >-----#
    RSRQ_Range = INT(name=u'RSRQ-Range', mode=MODE_TYPE)
    RSRQ_Range._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=34)], ev=None, er=[])
    
    #-----< maxCellReport >-----#
    maxCellReport = INT(name=u'maxCellReport', mode=MODE_VALUE)
    maxCellReport._val = 8
    
    #-----< WlanAPInformation >-----#
    WlanAPInformation = SEQ(name=u'WlanAPInformation', mode=MODE_TYPE)
    _WlanAPInformation_apMACAddress = BIT_STR(name=u'apMACAddress', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _WlanAPInformation_apMACAddress._const_sz = ASN1Set(rv=[48], rr=[], ev=None, er=[])
    _WlanAPInformation_apTransmitPower = INT(name=u'apTransmitPower', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_apTransmitPower._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=128)], ev=None, er=[])
    _WlanAPInformation_apAntennaGain = INT(name=u'apAntennaGain', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_apAntennaGain._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=128)], ev=None, er=[])
    _WlanAPInformation_apSignaltoNoise = INT(name=u'apSignaltoNoise', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_apSignaltoNoise._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=128)], ev=None, er=[])
    _WlanAPInformation_apDeviceType = ENUM(name=u'apDeviceType', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_apDeviceType._cont = ASN1Dict([(u'wlan802-11a', 0), (u'wlan802-11b', 1), (u'wlan802-11g', 2), (u'wlan802-11n', 3), (u'wlan802-11ac', 4), (u'wlan802-11ad', 5)])
    _WlanAPInformation_apDeviceType._ext = [u'wlan802-11n', u'wlan802-11ac', u'wlan802-11ad']
    _WlanAPInformation_apSignalStrength = INT(name=u'apSignalStrength', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_apSignalStrength._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=128)], ev=None, er=[])
    _WlanAPInformation_apChannelFrequency = INT(name=u'apChannelFrequency', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_apChannelFrequency._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=256)], ev=None, er=[])
    _WlanAPInformation_apRoundTripDelay = SEQ(name=u'apRoundTripDelay', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'RTD')), opt=True)
    _WlanAPInformation_setTransmitPower = INT(name=u'setTransmitPower', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_setTransmitPower._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=128)], ev=None, er=[])
    _WlanAPInformation_setAntennaGain = INT(name=u'setAntennaGain', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_setAntennaGain._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=128)], ev=None, er=[])
    _WlanAPInformation_setSignaltoNoise = INT(name=u'setSignaltoNoise', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_setSignaltoNoise._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=128)], ev=None, er=[])
    _WlanAPInformation_setSignalStrength = INT(name=u'setSignalStrength', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_setSignalStrength._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=128)], ev=None, er=[])
    _WlanAPInformation_apReportedLocation = SEQ(name=u'apReportedLocation', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'ReportedLocation')), opt=True)
    _WlanAPInformation_apRepLocation = CHOICE(name=u'apRepLocation', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'RepLocation')), opt=True)
    _WlanAPInformation_apSignalStrengthDelta = INT(name=u'apSignalStrengthDelta', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_apSignalStrengthDelta._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    _WlanAPInformation_apSignaltoNoiseDelta = INT(name=u'apSignaltoNoiseDelta', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_apSignaltoNoiseDelta._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    _WlanAPInformation_setSignalStrengthDelta = INT(name=u'setSignalStrengthDelta', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_setSignalStrengthDelta._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    _WlanAPInformation_setSignaltoNoiseDelta = INT(name=u'setSignaltoNoiseDelta', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_setSignaltoNoiseDelta._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    _WlanAPInformation_operatingClass = INT(name=u'operatingClass', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_operatingClass._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _WlanAPInformation_apSSID = OCT_STR(name=u'apSSID', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_apSSID._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _WlanAPInformation_apPHYType = ENUM(name=u'apPHYType', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_apPHYType._cont = ASN1Dict([(u'unknown', 0), (u'any', 1), (u'fhss', 2), (u'dsss', 3), (u'irbaseband', 4), (u'ofdm', 5), (u'hrdsss', 6), (u'erp', 7), (u'ht', 8), (u'ihv', 9)])
    _WlanAPInformation_apPHYType._ext = []
    _WlanAPInformation_setMACAddress = BIT_STR(name=u'setMACAddress', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_setMACAddress._const_sz = ASN1Set(rv=[48], rr=[], ev=None, er=[])
    WlanAPInformation._cont = ASN1Dict([
        (u'apMACAddress', _WlanAPInformation_apMACAddress),
        (u'apTransmitPower', _WlanAPInformation_apTransmitPower),
        (u'apAntennaGain', _WlanAPInformation_apAntennaGain),
        (u'apSignaltoNoise', _WlanAPInformation_apSignaltoNoise),
        (u'apDeviceType', _WlanAPInformation_apDeviceType),
        (u'apSignalStrength', _WlanAPInformation_apSignalStrength),
        (u'apChannelFrequency', _WlanAPInformation_apChannelFrequency),
        (u'apRoundTripDelay', _WlanAPInformation_apRoundTripDelay),
        (u'setTransmitPower', _WlanAPInformation_setTransmitPower),
        (u'setAntennaGain', _WlanAPInformation_setAntennaGain),
        (u'setSignaltoNoise', _WlanAPInformation_setSignaltoNoise),
        (u'setSignalStrength', _WlanAPInformation_setSignalStrength),
        (u'apReportedLocation', _WlanAPInformation_apReportedLocation),
        (u'apRepLocation', _WlanAPInformation_apRepLocation),
        (u'apSignalStrengthDelta', _WlanAPInformation_apSignalStrengthDelta),
        (u'apSignaltoNoiseDelta', _WlanAPInformation_apSignaltoNoiseDelta),
        (u'setSignalStrengthDelta', _WlanAPInformation_setSignalStrengthDelta),
        (u'setSignaltoNoiseDelta', _WlanAPInformation_setSignaltoNoiseDelta),
        (u'operatingClass', _WlanAPInformation_operatingClass),
        (u'apSSID', _WlanAPInformation_apSSID),
        (u'apPHYType', _WlanAPInformation_apPHYType),
        (u'setMACAddress', _WlanAPInformation_setMACAddress),
        ])
    WlanAPInformation._ext = [u'apRepLocation', u'apSignalStrengthDelta', u'apSignaltoNoiseDelta', u'setSignalStrengthDelta', u'setSignaltoNoiseDelta', u'operatingClass', u'apSSID', u'apPHYType', u'setMACAddress']
    
    #-----< RTD >-----#
    RTD = SEQ(name=u'RTD', mode=MODE_TYPE)
    _RTD_rTDValue = INT(name=u'rTDValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RTD_rTDValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16777216)], ev=None, er=[])
    _RTD_rTDUnits = ENUM(name=u'rTDUnits', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'RTDUnits')))
    _RTD_rTDAccuracy = INT(name=u'rTDAccuracy', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RTD_rTDAccuracy._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    RTD._cont = ASN1Dict([
        (u'rTDValue', _RTD_rTDValue),
        (u'rTDUnits', _RTD_rTDUnits),
        (u'rTDAccuracy', _RTD_rTDAccuracy),
        ])
    RTD._ext = []
    
    #-----< RTDUnits >-----#
    RTDUnits = ENUM(name=u'RTDUnits', mode=MODE_TYPE)
    RTDUnits._cont = ASN1Dict([(u'microseconds', 0), (u'hundredsofnanoseconds', 1), (u'tensofnanoseconds', 2), (u'nanoseconds', 3), (u'tenthsofnanoseconds', 4)])
    RTDUnits._ext = []
    
    #-----< ReportedLocation >-----#
    ReportedLocation = SEQ(name=u'ReportedLocation', mode=MODE_TYPE)
    _ReportedLocation_locationEncodingDescriptor = ENUM(name=u'locationEncodingDescriptor', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'LocationEncodingDescriptor')))
    _ReportedLocation_locationData = SEQ(name=u'locationData', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'LocationData')))
    ReportedLocation._cont = ASN1Dict([
        (u'locationEncodingDescriptor', _ReportedLocation_locationEncodingDescriptor),
        (u'locationData', _ReportedLocation_locationData),
        ])
    ReportedLocation._ext = []
    
    #-----< LocationEncodingDescriptor >-----#
    LocationEncodingDescriptor = ENUM(name=u'LocationEncodingDescriptor', mode=MODE_TYPE)
    LocationEncodingDescriptor._cont = ASN1Dict([(u'lci', 0), (u'asn1', 1)])
    LocationEncodingDescriptor._ext = []
    
    #-----< LocationData >-----#
    LocationData = SEQ(name=u'LocationData', mode=MODE_TYPE)
    _LocationData_locationAccuracy = INT(name=u'locationAccuracy', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LocationData_locationAccuracy._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    _LocationData_locationValue = OCT_STR(name=u'locationValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LocationData_locationValue._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    LocationData._cont = ASN1Dict([
        (u'locationAccuracy', _LocationData_locationAccuracy),
        (u'locationValue', _LocationData_locationValue),
        ])
    LocationData._ext = []
    
    #-----< RepLocation >-----#
    RepLocation = CHOICE(name=u'RepLocation', mode=MODE_TYPE)
    _RepLocation_lciLocData = SEQ(name=u'lciLocData', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'LciLocData')))
    RepLocation._cont = ASN1Dict([
        (u'lciLocData', _RepLocation_lciLocData),
        ])
    RepLocation._ext = []
    
    #-----< LciLocData >-----#
    LciLocData = SEQ(name=u'LciLocData', mode=MODE_TYPE)
    _LciLocData_locationDataLCI = SEQ(name=u'locationDataLCI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'LocationDataLCI')), opt=True)
    LciLocData._cont = ASN1Dict([
        (u'locationDataLCI', _LciLocData_locationDataLCI),
        ])
    LciLocData._ext = []
    
    #-----< LocationDataLCI >-----#
    LocationDataLCI = SEQ(name=u'LocationDataLCI', mode=MODE_TYPE)
    _LocationDataLCI_latitudeResolution = BIT_STR(name=u'latitudeResolution', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LocationDataLCI_latitudeResolution._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    _LocationDataLCI_latitude = BIT_STR(name=u'latitude', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LocationDataLCI_latitude._const_sz = ASN1Set(rv=[34], rr=[], ev=None, er=[])
    _LocationDataLCI_longitudeResolution = BIT_STR(name=u'longitudeResolution', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LocationDataLCI_longitudeResolution._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    _LocationDataLCI_longitude = BIT_STR(name=u'longitude', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LocationDataLCI_longitude._const_sz = ASN1Set(rv=[34], rr=[], ev=None, er=[])
    _LocationDataLCI_altitudeType = BIT_STR(name=u'altitudeType', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LocationDataLCI_altitudeType._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _LocationDataLCI_altitudeResolution = BIT_STR(name=u'altitudeResolution', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LocationDataLCI_altitudeResolution._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    _LocationDataLCI_altitude = BIT_STR(name=u'altitude', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LocationDataLCI_altitude._const_sz = ASN1Set(rv=[30], rr=[], ev=None, er=[])
    _LocationDataLCI_datum = BIT_STR(name=u'datum', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LocationDataLCI_datum._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    LocationDataLCI._cont = ASN1Dict([
        (u'latitudeResolution', _LocationDataLCI_latitudeResolution),
        (u'latitude', _LocationDataLCI_latitude),
        (u'longitudeResolution', _LocationDataLCI_longitudeResolution),
        (u'longitude', _LocationDataLCI_longitude),
        (u'altitudeType', _LocationDataLCI_altitudeType),
        (u'altitudeResolution', _LocationDataLCI_altitudeResolution),
        (u'altitude', _LocationDataLCI_altitude),
        (u'datum', _LocationDataLCI_datum),
        ])
    LocationDataLCI._ext = []
    
    #-----< WimaxBSInformation >-----#
    WimaxBSInformation = SEQ(name=u'WimaxBSInformation', mode=MODE_TYPE)
    _WimaxBSInformation_wimaxBsID = SEQ(name=u'wimaxBsID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'WimaxBsID')))
    _WimaxBSInformation_wimaxRTD = SEQ(name=u'wimaxRTD', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'WimaxRTD')), opt=True)
    _WimaxBSInformation_wimaxNMRList = SEQ_OF(name=u'wimaxNMRList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'WimaxNMRList')), opt=True)
    WimaxBSInformation._cont = ASN1Dict([
        (u'wimaxBsID', _WimaxBSInformation_wimaxBsID),
        (u'wimaxRTD', _WimaxBSInformation_wimaxRTD),
        (u'wimaxNMRList', _WimaxBSInformation_wimaxNMRList),
        ])
    WimaxBSInformation._ext = []
    
    #-----< WimaxBsID >-----#
    WimaxBsID = SEQ(name=u'WimaxBsID', mode=MODE_TYPE)
    _WimaxBsID_bsID_MSB = BIT_STR(name=u'bsID-MSB', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WimaxBsID_bsID_MSB._const_sz = ASN1Set(rv=[24], rr=[], ev=None, er=[])
    _WimaxBsID_bsID_LSB = BIT_STR(name=u'bsID-LSB', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _WimaxBsID_bsID_LSB._const_sz = ASN1Set(rv=[24], rr=[], ev=None, er=[])
    WimaxBsID._cont = ASN1Dict([
        (u'bsID-MSB', _WimaxBsID_bsID_MSB),
        (u'bsID-LSB', _WimaxBsID_bsID_LSB),
        ])
    WimaxBsID._ext = []
    
    #-----< WimaxRTD >-----#
    WimaxRTD = SEQ(name=u'WimaxRTD', mode=MODE_TYPE)
    _WimaxRTD_rtd = INT(name=u'rtd', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _WimaxRTD_rtd._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _WimaxRTD_rTDstd = INT(name=u'rTDstd', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WimaxRTD_rTDstd._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    WimaxRTD._cont = ASN1Dict([
        (u'rtd', _WimaxRTD_rtd),
        (u'rTDstd', _WimaxRTD_rTDstd),
        ])
    WimaxRTD._ext = []
    
    #-----< WimaxNMRList >-----#
    WimaxNMRList = SEQ_OF(name=u'WimaxNMRList', mode=MODE_TYPE)
    _WimaxNMRList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Ver2-ULP-Components', 'WimaxNMR')))
    WimaxNMRList._cont = _WimaxNMRList__item_
    WimaxNMRList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< WimaxNMR >-----#
    WimaxNMR = SEQ(name=u'WimaxNMR', mode=MODE_TYPE)
    _WimaxNMR_wimaxBsID = SEQ(name=u'wimaxBsID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'WimaxBsID')))
    _WimaxNMR_relDelay = INT(name=u'relDelay', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WimaxNMR_relDelay._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _WimaxNMR_relDelaystd = INT(name=u'relDelaystd', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WimaxNMR_relDelaystd._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    _WimaxNMR_rssi = INT(name=u'rssi', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WimaxNMR_rssi._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _WimaxNMR_rSSIstd = INT(name=u'rSSIstd', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WimaxNMR_rSSIstd._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _WimaxNMR_bSTxPower = INT(name=u'bSTxPower', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WimaxNMR_bSTxPower._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _WimaxNMR_cinr = INT(name=u'cinr', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WimaxNMR_cinr._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _WimaxNMR_cINRstd = INT(name=u'cINRstd', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WimaxNMR_cINRstd._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _WimaxNMR_bSLocation = SEQ(name=u'bSLocation', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'ReportedLocation')), opt=True)
    WimaxNMR._cont = ASN1Dict([
        (u'wimaxBsID', _WimaxNMR_wimaxBsID),
        (u'relDelay', _WimaxNMR_relDelay),
        (u'relDelaystd', _WimaxNMR_relDelaystd),
        (u'rssi', _WimaxNMR_rssi),
        (u'rSSIstd', _WimaxNMR_rSSIstd),
        (u'bSTxPower', _WimaxNMR_bSTxPower),
        (u'cinr', _WimaxNMR_cinr),
        (u'cINRstd', _WimaxNMR_cINRstd),
        (u'bSLocation', _WimaxNMR_bSLocation),
        ])
    WimaxNMR._ext = []
    
    #-----< maxWimaxBSMeas >-----#
    maxWimaxBSMeas = INT(name=u'maxWimaxBSMeas', mode=MODE_VALUE)
    maxWimaxBSMeas._val = 32
    
    #-----< UTRAN-GPSReferenceTimeAssistance >-----#
    UTRAN_GPSReferenceTimeAssistance = SEQ(name=u'UTRAN-GPSReferenceTimeAssistance', mode=MODE_TYPE)
    _UTRAN_GPSReferenceTimeAssistance_utran_GPSReferenceTime = SEQ(name=u'utran-GPSReferenceTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'UTRAN-GPSReferenceTime')))
    _UTRAN_GPSReferenceTimeAssistance_gpsReferenceTimeUncertainty = INT(name=u'gpsReferenceTimeUncertainty', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UTRAN_GPSReferenceTimeAssistance_gpsReferenceTimeUncertainty._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    _UTRAN_GPSReferenceTimeAssistance_utranGPSDriftRate = ENUM(name=u'utranGPSDriftRate', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'UTRANGPSDriftRate')), opt=True)
    UTRAN_GPSReferenceTimeAssistance._cont = ASN1Dict([
        (u'utran-GPSReferenceTime', _UTRAN_GPSReferenceTimeAssistance_utran_GPSReferenceTime),
        (u'gpsReferenceTimeUncertainty', _UTRAN_GPSReferenceTimeAssistance_gpsReferenceTimeUncertainty),
        (u'utranGPSDriftRate', _UTRAN_GPSReferenceTimeAssistance_utranGPSDriftRate),
        ])
    UTRAN_GPSReferenceTimeAssistance._ext = None
    
    #-----< UTRAN-GPSReferenceTime >-----#
    UTRAN_GPSReferenceTime = SEQ(name=u'UTRAN-GPSReferenceTime', mode=MODE_TYPE)
    _UTRAN_GPSReferenceTime_utran_GPSTimingOfCell = SEQ(name=u'utran-GPSTimingOfCell', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UTRAN_GPSReferenceTime_utran_GPSTimingOfCell_ms_part = INT(name=u'ms-part', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UTRAN_GPSReferenceTime_utran_GPSTimingOfCell_ms_part._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    __UTRAN_GPSReferenceTime_utran_GPSTimingOfCell_ls_part = INT(name=u'ls-part', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UTRAN_GPSReferenceTime_utran_GPSTimingOfCell_ls_part._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    _UTRAN_GPSReferenceTime_utran_GPSTimingOfCell._cont = ASN1Dict([
        (u'ms-part', __UTRAN_GPSReferenceTime_utran_GPSTimingOfCell_ms_part),
        (u'ls-part', __UTRAN_GPSReferenceTime_utran_GPSTimingOfCell_ls_part),
        ])
    _UTRAN_GPSReferenceTime_utran_GPSTimingOfCell._ext = None
    _UTRAN_GPSReferenceTime_modeSpecificInfo = CHOICE(name=u'modeSpecificInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __UTRAN_GPSReferenceTime_modeSpecificInfo_fdd = SEQ(name=u'fdd', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UTRAN_GPSReferenceTime_modeSpecificInfo_fdd_referenceIdentity = SEQ(name=u'referenceIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'PrimaryCPICH-Info')))
    __UTRAN_GPSReferenceTime_modeSpecificInfo_fdd._cont = ASN1Dict([
        (u'referenceIdentity', ___UTRAN_GPSReferenceTime_modeSpecificInfo_fdd_referenceIdentity),
        ])
    __UTRAN_GPSReferenceTime_modeSpecificInfo_fdd._ext = None
    __UTRAN_GPSReferenceTime_modeSpecificInfo_tdd = SEQ(name=u'tdd', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UTRAN_GPSReferenceTime_modeSpecificInfo_tdd_referenceIdentity = INT(name=u'referenceIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'CellParametersID')))
    __UTRAN_GPSReferenceTime_modeSpecificInfo_tdd._cont = ASN1Dict([
        (u'referenceIdentity', ___UTRAN_GPSReferenceTime_modeSpecificInfo_tdd_referenceIdentity),
        ])
    __UTRAN_GPSReferenceTime_modeSpecificInfo_tdd._ext = None
    _UTRAN_GPSReferenceTime_modeSpecificInfo._cont = ASN1Dict([
        (u'fdd', __UTRAN_GPSReferenceTime_modeSpecificInfo_fdd),
        (u'tdd', __UTRAN_GPSReferenceTime_modeSpecificInfo_tdd),
        ])
    _UTRAN_GPSReferenceTime_modeSpecificInfo._ext = None
    _UTRAN_GPSReferenceTime_sfn = INT(name=u'sfn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTRAN_GPSReferenceTime_sfn._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4095)], ev=None, er=[])
    UTRAN_GPSReferenceTime._cont = ASN1Dict([
        (u'utran-GPSTimingOfCell', _UTRAN_GPSReferenceTime_utran_GPSTimingOfCell),
        (u'modeSpecificInfo', _UTRAN_GPSReferenceTime_modeSpecificInfo),
        (u'sfn', _UTRAN_GPSReferenceTime_sfn),
        ])
    UTRAN_GPSReferenceTime._ext = None
    
    #-----< UTRANGPSDriftRate >-----#
    UTRANGPSDriftRate = ENUM(name=u'UTRANGPSDriftRate', mode=MODE_TYPE)
    UTRANGPSDriftRate._cont = ASN1Dict([(u'utran-GPSDrift0', 0), (u'utran-GPSDrift1', 1), (u'utran-GPSDrift2', 2), (u'utran-GPSDrift5', 3), (u'utran-GPSDrift10', 4), (u'utran-GPSDrift15', 5), (u'utran-GPSDrift25', 6), (u'utran-GPSDrift50', 7), (u'utran-GPSDrift-1', 8), (u'utran-GPSDrift-2', 9), (u'utran-GPSDrift-5', 10), (u'utran-GPSDrift-10', 11), (u'utran-GPSDrift-15', 12), (u'utran-GPSDrift-25', 13), (u'utran-GPSDrift-50', 14)])
    UTRANGPSDriftRate._ext = None
    
    #-----< UTRAN-GPSReferenceTimeResult >-----#
    UTRAN_GPSReferenceTimeResult = SEQ(name=u'UTRAN-GPSReferenceTimeResult', mode=MODE_TYPE)
    _UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell = SEQ(name=u'set-GPSTimingOfCell', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell_ms_part = INT(name=u'ms-part', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell_ms_part._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16383)], ev=None, er=[])
    __UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell_ls_part = INT(name=u'ls-part', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell_ls_part._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    _UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell._cont = ASN1Dict([
        (u'ms-part', __UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell_ms_part),
        (u'ls-part', __UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell_ls_part),
        ])
    _UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell._ext = None
    _UTRAN_GPSReferenceTimeResult_modeSpecificInfo = CHOICE(name=u'modeSpecificInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __UTRAN_GPSReferenceTimeResult_modeSpecificInfo_fdd = SEQ(name=u'fdd', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UTRAN_GPSReferenceTimeResult_modeSpecificInfo_fdd_referenceIdentity = SEQ(name=u'referenceIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'PrimaryCPICH-Info')))
    __UTRAN_GPSReferenceTimeResult_modeSpecificInfo_fdd._cont = ASN1Dict([
        (u'referenceIdentity', ___UTRAN_GPSReferenceTimeResult_modeSpecificInfo_fdd_referenceIdentity),
        ])
    __UTRAN_GPSReferenceTimeResult_modeSpecificInfo_fdd._ext = None
    __UTRAN_GPSReferenceTimeResult_modeSpecificInfo_tdd = SEQ(name=u'tdd', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UTRAN_GPSReferenceTimeResult_modeSpecificInfo_tdd_referenceIdentity = INT(name=u'referenceIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'CellParametersID')))
    __UTRAN_GPSReferenceTimeResult_modeSpecificInfo_tdd._cont = ASN1Dict([
        (u'referenceIdentity', ___UTRAN_GPSReferenceTimeResult_modeSpecificInfo_tdd_referenceIdentity),
        ])
    __UTRAN_GPSReferenceTimeResult_modeSpecificInfo_tdd._ext = None
    _UTRAN_GPSReferenceTimeResult_modeSpecificInfo._cont = ASN1Dict([
        (u'fdd', __UTRAN_GPSReferenceTimeResult_modeSpecificInfo_fdd),
        (u'tdd', __UTRAN_GPSReferenceTimeResult_modeSpecificInfo_tdd),
        ])
    _UTRAN_GPSReferenceTimeResult_modeSpecificInfo._ext = None
    _UTRAN_GPSReferenceTimeResult_sfn = INT(name=u'sfn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTRAN_GPSReferenceTimeResult_sfn._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4095)], ev=None, er=[])
    _UTRAN_GPSReferenceTimeResult_gpsReferenceTimeUncertainty = INT(name=u'gpsReferenceTimeUncertainty', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UTRAN_GPSReferenceTimeResult_gpsReferenceTimeUncertainty._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    UTRAN_GPSReferenceTimeResult._cont = ASN1Dict([
        (u'set-GPSTimingOfCell', _UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell),
        (u'modeSpecificInfo', _UTRAN_GPSReferenceTimeResult_modeSpecificInfo),
        (u'sfn', _UTRAN_GPSReferenceTimeResult_sfn),
        (u'gpsReferenceTimeUncertainty', _UTRAN_GPSReferenceTimeResult_gpsReferenceTimeUncertainty),
        ])
    UTRAN_GPSReferenceTimeResult._ext = []
    
    #-----< UTRAN-GANSSReferenceTimeAssistance >-----#
    UTRAN_GANSSReferenceTimeAssistance = SEQ(name=u'UTRAN-GANSSReferenceTimeAssistance', mode=MODE_TYPE)
    _UTRAN_GANSSReferenceTimeAssistance_ganssDay = INT(name=u'ganssDay', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UTRAN_GANSSReferenceTimeAssistance_ganssDay._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8191)], ev=None, er=[])
    _UTRAN_GANSSReferenceTimeAssistance_ganssTimeID = INT(name=u'ganssTimeID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTRAN_GANSSReferenceTimeAssistance_ganssTimeID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _UTRAN_GANSSReferenceTimeAssistance_utran_GANSSReferenceTime = SEQ(name=u'utran-GANSSReferenceTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'UTRAN-GANSSReferenceTime')))
    _UTRAN_GANSSReferenceTimeAssistance_utranGANSSDriftRate = ENUM(name=u'utranGANSSDriftRate', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'UTRANGANSSDriftRate')), opt=True)
    UTRAN_GANSSReferenceTimeAssistance._cont = ASN1Dict([
        (u'ganssDay', _UTRAN_GANSSReferenceTimeAssistance_ganssDay),
        (u'ganssTimeID', _UTRAN_GANSSReferenceTimeAssistance_ganssTimeID),
        (u'utran-GANSSReferenceTime', _UTRAN_GANSSReferenceTimeAssistance_utran_GANSSReferenceTime),
        (u'utranGANSSDriftRate', _UTRAN_GANSSReferenceTimeAssistance_utranGANSSDriftRate),
        ])
    UTRAN_GANSSReferenceTimeAssistance._ext = None
    
    #-----< UTRAN-GANSSReferenceTime >-----#
    UTRAN_GANSSReferenceTime = SEQ(name=u'UTRAN-GANSSReferenceTime', mode=MODE_TYPE)
    _UTRAN_GANSSReferenceTime_ganssTOD = INT(name=u'ganssTOD', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTRAN_GANSSReferenceTime_ganssTOD._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=86399)], ev=None, er=[])
    _UTRAN_GANSSReferenceTime_utran_GANSSTimingOfCell = INT(name=u'utran-GANSSTimingOfCell', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UTRAN_GANSSReferenceTime_utran_GANSSTimingOfCell._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3999999)], ev=None, er=[])
    _UTRAN_GANSSReferenceTime_modeSpecificInfo = CHOICE(name=u'modeSpecificInfo', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __UTRAN_GANSSReferenceTime_modeSpecificInfo_fdd = SEQ(name=u'fdd', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UTRAN_GANSSReferenceTime_modeSpecificInfo_fdd_referenceIdentity = SEQ(name=u'referenceIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'PrimaryCPICH-Info')))
    __UTRAN_GANSSReferenceTime_modeSpecificInfo_fdd._cont = ASN1Dict([
        (u'referenceIdentity', ___UTRAN_GANSSReferenceTime_modeSpecificInfo_fdd_referenceIdentity),
        ])
    __UTRAN_GANSSReferenceTime_modeSpecificInfo_fdd._ext = None
    __UTRAN_GANSSReferenceTime_modeSpecificInfo_tdd = SEQ(name=u'tdd', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UTRAN_GANSSReferenceTime_modeSpecificInfo_tdd_referenceIdentity = INT(name=u'referenceIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'CellParametersID')))
    __UTRAN_GANSSReferenceTime_modeSpecificInfo_tdd._cont = ASN1Dict([
        (u'referenceIdentity', ___UTRAN_GANSSReferenceTime_modeSpecificInfo_tdd_referenceIdentity),
        ])
    __UTRAN_GANSSReferenceTime_modeSpecificInfo_tdd._ext = None
    _UTRAN_GANSSReferenceTime_modeSpecificInfo._cont = ASN1Dict([
        (u'fdd', __UTRAN_GANSSReferenceTime_modeSpecificInfo_fdd),
        (u'tdd', __UTRAN_GANSSReferenceTime_modeSpecificInfo_tdd),
        ])
    _UTRAN_GANSSReferenceTime_modeSpecificInfo._ext = None
    _UTRAN_GANSSReferenceTime_sfn = INT(name=u'sfn', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTRAN_GANSSReferenceTime_sfn._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4095)], ev=None, er=[])
    _UTRAN_GANSSReferenceTime_ganss_TODUncertainty = INT(name=u'ganss-TODUncertainty', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UTRAN_GANSSReferenceTime_ganss_TODUncertainty._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    UTRAN_GANSSReferenceTime._cont = ASN1Dict([
        (u'ganssTOD', _UTRAN_GANSSReferenceTime_ganssTOD),
        (u'utran-GANSSTimingOfCell', _UTRAN_GANSSReferenceTime_utran_GANSSTimingOfCell),
        (u'modeSpecificInfo', _UTRAN_GANSSReferenceTime_modeSpecificInfo),
        (u'sfn', _UTRAN_GANSSReferenceTime_sfn),
        (u'ganss-TODUncertainty', _UTRAN_GANSSReferenceTime_ganss_TODUncertainty),
        ])
    UTRAN_GANSSReferenceTime._ext = []
    
    #-----< UTRANGANSSDriftRate >-----#
    UTRANGANSSDriftRate = ENUM(name=u'UTRANGANSSDriftRate', mode=MODE_TYPE)
    UTRANGANSSDriftRate._cont = ASN1Dict([(u'utran-GANSSDrift0', 0), (u'utran-GANSSDrift1', 1), (u'utran-GANSSDrift2', 2), (u'utran-GANSSDrift5', 3), (u'utran-GANSSDrift10', 4), (u'utran-GANSSDrift15', 5), (u'utran-GANSSDrift25', 6), (u'utran-GANSSDrift50', 7), (u'utran-GANSSDrift-1', 8), (u'utran-GANSSDrift-2', 9), (u'utran-GANSSDrift-5', 10), (u'utran-GANSSDrift-10', 11), (u'utran-GANSSDrift-15', 12), (u'utran-GANSSDrift-25', 13), (u'utran-GANSSDrift-50', 14)])
    UTRANGANSSDriftRate._ext = None
    
    #-----< UTRAN-GANSSReferenceTimeResult >-----#
    UTRAN_GANSSReferenceTimeResult = SEQ(name=u'UTRAN-GANSSReferenceTimeResult', mode=MODE_TYPE)
    _UTRAN_GANSSReferenceTimeResult_ganssTimeID = INT(name=u'ganssTimeID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTRAN_GANSSReferenceTimeResult_ganssTimeID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _UTRAN_GANSSReferenceTimeResult_set_GANSSReferenceTime = SEQ(name=u'set-GANSSReferenceTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'SET-GANSSReferenceTime')))
    UTRAN_GANSSReferenceTimeResult._cont = ASN1Dict([
        (u'ganssTimeID', _UTRAN_GANSSReferenceTimeResult_ganssTimeID),
        (u'set-GANSSReferenceTime', _UTRAN_GANSSReferenceTimeResult_set_GANSSReferenceTime),
        ])
    UTRAN_GANSSReferenceTimeResult._ext = []
    
    #-----< SET-GANSSReferenceTime >-----#
    SET_GANSSReferenceTime = SEQ(name=u'SET-GANSSReferenceTime', mode=MODE_TYPE)
    _SET_GANSSReferenceTime_set_GANSSTimingOfCell = SEQ(name=u'set-GANSSTimingOfCell', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SET_GANSSReferenceTime_set_GANSSTimingOfCell_ms_part = INT(name=u'ms-part', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SET_GANSSReferenceTime_set_GANSSTimingOfCell_ms_part._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=80)], ev=None, er=[])
    __SET_GANSSReferenceTime_set_GANSSTimingOfCell_ls_part = INT(name=u'ls-part', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SET_GANSSReferenceTime_set_GANSSTimingOfCell_ls_part._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    _SET_GANSSReferenceTime_set_GANSSTimingOfCell._cont = ASN1Dict([
        (u'ms-part', __SET_GANSSReferenceTime_set_GANSSTimingOfCell_ms_part),
        (u'ls-part', __SET_GANSSReferenceTime_set_GANSSTimingOfCell_ls_part),
        ])
    _SET_GANSSReferenceTime_set_GANSSTimingOfCell._ext = None
    _SET_GANSSReferenceTime_modeSpecificInfo = CHOICE(name=u'modeSpecificInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __SET_GANSSReferenceTime_modeSpecificInfo_fdd = SEQ(name=u'fdd', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SET_GANSSReferenceTime_modeSpecificInfo_fdd_referenceIdentity = SEQ(name=u'referenceIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'PrimaryCPICH-Info')))
    __SET_GANSSReferenceTime_modeSpecificInfo_fdd._cont = ASN1Dict([
        (u'referenceIdentity', ___SET_GANSSReferenceTime_modeSpecificInfo_fdd_referenceIdentity),
        ])
    __SET_GANSSReferenceTime_modeSpecificInfo_fdd._ext = None
    __SET_GANSSReferenceTime_modeSpecificInfo_tdd = SEQ(name=u'tdd', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SET_GANSSReferenceTime_modeSpecificInfo_tdd_referenceIdentity = INT(name=u'referenceIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'CellParametersID')))
    __SET_GANSSReferenceTime_modeSpecificInfo_tdd._cont = ASN1Dict([
        (u'referenceIdentity', ___SET_GANSSReferenceTime_modeSpecificInfo_tdd_referenceIdentity),
        ])
    __SET_GANSSReferenceTime_modeSpecificInfo_tdd._ext = None
    _SET_GANSSReferenceTime_modeSpecificInfo._cont = ASN1Dict([
        (u'fdd', __SET_GANSSReferenceTime_modeSpecificInfo_fdd),
        (u'tdd', __SET_GANSSReferenceTime_modeSpecificInfo_tdd),
        ])
    _SET_GANSSReferenceTime_modeSpecificInfo._ext = None
    _SET_GANSSReferenceTime_sfn = INT(name=u'sfn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SET_GANSSReferenceTime_sfn._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4095)], ev=None, er=[])
    _SET_GANSSReferenceTime_ganss_TODUncertainty = INT(name=u'ganss-TODUncertainty', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SET_GANSSReferenceTime_ganss_TODUncertainty._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    SET_GANSSReferenceTime._cont = ASN1Dict([
        (u'set-GANSSTimingOfCell', _SET_GANSSReferenceTime_set_GANSSTimingOfCell),
        (u'modeSpecificInfo', _SET_GANSSReferenceTime_modeSpecificInfo),
        (u'sfn', _SET_GANSSReferenceTime_sfn),
        (u'ganss-TODUncertainty', _SET_GANSSReferenceTime_ganss_TODUncertainty),
        ])
    SET_GANSSReferenceTime._ext = []
    
    #-----< GNSSPosTechnology >-----#
    GNSSPosTechnology = SEQ(name=u'GNSSPosTechnology', mode=MODE_TYPE)
    _GNSSPosTechnology_gps = BOOL(name=u'gps', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GNSSPosTechnology_galileo = BOOL(name=u'galileo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GNSSPosTechnology_sbas = BOOL(name=u'sbas', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GNSSPosTechnology_modernized_gps = BOOL(name=u'modernized-gps', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GNSSPosTechnology_qzss = BOOL(name=u'qzss', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GNSSPosTechnology_glonass = BOOL(name=u'glonass', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GNSSPosTechnology_bds = BOOL(name=u'bds', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    GNSSPosTechnology._cont = ASN1Dict([
        (u'gps', _GNSSPosTechnology_gps),
        (u'galileo', _GNSSPosTechnology_galileo),
        (u'sbas', _GNSSPosTechnology_sbas),
        (u'modernized-gps', _GNSSPosTechnology_modernized_gps),
        (u'qzss', _GNSSPosTechnology_qzss),
        (u'glonass', _GNSSPosTechnology_glonass),
        (u'bds', _GNSSPosTechnology_bds),
        ])
    GNSSPosTechnology._ext = [u'bds']
    
    #-----< GANSSSignals >-----#
    GANSSSignals = BIT_STR(name=u'GANSSSignals', mode=MODE_TYPE)
    GANSSSignals._cont = ASN1Dict([(u'signal1', 0), (u'signal2', 1), (u'signal3', 2), (u'signal4', 3), (u'signal5', 4), (u'signal6', 5), (u'signal7', 6), (u'signal8', 7)])
    GANSSSignals._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< SPCSETKey >-----#
    SPCSETKey = BIT_STR(name=u'SPCSETKey', mode=MODE_TYPE)
    SPCSETKey._const_sz = ASN1Set(rv=[128], rr=[], ev=None, er=[])
    
    #-----< SPCTID >-----#
    SPCTID = SEQ(name=u'SPCTID', mode=MODE_TYPE)
    _SPCTID_rand = BIT_STR(name=u'rand', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SPCTID_rand._const_sz = ASN1Set(rv=[128], rr=[], ev=None, er=[])
    _SPCTID_slpFQDN = STR_VIS(name=u'slpFQDN', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'FQDN')))
    _SPCTID_slpFQDN._const_alpha = ASN1Set(rv=[u'.', u'-'], rr=[ASN1RangeStr(lb=u'a', ub=u'z'), ASN1RangeStr(lb=u'A', ub=u'Z'), ASN1RangeStr(lb=u'0', ub=u'9')], ev=None, er=[])
    SPCTID._cont = ASN1Dict([
        (u'rand', _SPCTID_rand),
        (u'slpFQDN', _SPCTID_slpFQDN),
        ])
    SPCTID._ext = []
    
    #-----< SPCSETKeylifetime >-----#
    SPCSETKeylifetime = INT(name=u'SPCSETKeylifetime', mode=MODE_TYPE)
    SPCSETKeylifetime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=24)], ev=None, er=[])
    
    #-----< CauseCode >-----#
    CauseCode = ENUM(name=u'CauseCode', mode=MODE_TYPE)
    CauseCode._cont = ASN1Dict([(u'servingNetWorkNotInAreaIdList', 0), (u'sETCapabilitiesChanged', 1), (u'noSUPLCoverage', 2)])
    CauseCode._ext = []
    
    #-----< ThirdParty >-----#
    ThirdParty = SEQ_OF(name=u'ThirdParty', mode=MODE_TYPE)
    _ThirdParty__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Ver2-ULP-Components', 'ThirdPartyID')))
    ThirdParty._cont = _ThirdParty__item_
    ThirdParty._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< ThirdPartyID >-----#
    ThirdPartyID = CHOICE(name=u'ThirdPartyID', mode=MODE_TYPE)
    _ThirdPartyID_logicalName = STR_IA5(name=u'logicalName', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ThirdPartyID_logicalName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1000)], ev=None, er=[])
    _ThirdPartyID_msisdn = OCT_STR(name=u'msisdn', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ThirdPartyID_msisdn._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _ThirdPartyID_emailaddr = STR_IA5(name=u'emailaddr', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ThirdPartyID_emailaddr._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1000)], ev=None, er=[])
    _ThirdPartyID_sip_uri = STR_VIS(name=u'sip-uri', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ThirdPartyID_sip_uri._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=255)], ev=None, er=[])
    _ThirdPartyID_sip_uri._const_alpha = ASN1Set(rv=[u':', u'.', u'/', u'-', u'_', u'~', u'#', u'@', u'?'], rr=[ASN1RangeStr(lb=u'a', ub=u'z'), ASN1RangeStr(lb=u'A', ub=u'Z'), ASN1RangeStr(lb=u'0', ub=u'9')], ev=None, er=[])
    _ThirdPartyID_ims_public_identity = STR_VIS(name=u'ims-public-identity', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ThirdPartyID_ims_public_identity._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=255)], ev=None, er=[])
    _ThirdPartyID_ims_public_identity._const_alpha = ASN1Set(rv=[u':', u'.', u'/', u'-', u'_', u'~', u'#', u'@', u'?'], rr=[ASN1RangeStr(lb=u'a', ub=u'z'), ASN1RangeStr(lb=u'A', ub=u'Z'), ASN1RangeStr(lb=u'0', ub=u'9')], ev=None, er=[])
    _ThirdPartyID_min = BIT_STR(name=u'min', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ThirdPartyID_min._const_sz = ASN1Set(rv=[34], rr=[], ev=None, er=[])
    _ThirdPartyID_mdn = OCT_STR(name=u'mdn', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ThirdPartyID_mdn._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _ThirdPartyID_uri = STR_VIS(name=u'uri', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ThirdPartyID_uri._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=255)], ev=None, er=[])
    _ThirdPartyID_uri._const_alpha = ASN1Set(rv=[u'.', u'/', u'-', u'_', u'~', u'#'], rr=[ASN1RangeStr(lb=u'a', ub=u'z'), ASN1RangeStr(lb=u'A', ub=u'Z'), ASN1RangeStr(lb=u'0', ub=u'9')], ev=None, er=[])
    ThirdPartyID._cont = ASN1Dict([
        (u'logicalName', _ThirdPartyID_logicalName),
        (u'msisdn', _ThirdPartyID_msisdn),
        (u'emailaddr', _ThirdPartyID_emailaddr),
        (u'sip-uri', _ThirdPartyID_sip_uri),
        (u'ims-public-identity', _ThirdPartyID_ims_public_identity),
        (u'min', _ThirdPartyID_min),
        (u'mdn', _ThirdPartyID_mdn),
        (u'uri', _ThirdPartyID_uri),
        ])
    ThirdPartyID._ext = []
    
    #-----< ApplicationID >-----#
    ApplicationID = SEQ(name=u'ApplicationID', mode=MODE_TYPE)
    _ApplicationID_appProvider = STR_IA5(name=u'appProvider', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ApplicationID_appProvider._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=24)], ev=None, er=[])
    _ApplicationID_appName = STR_IA5(name=u'appName', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ApplicationID_appName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _ApplicationID_appVersion = STR_IA5(name=u'appVersion', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ApplicationID_appVersion._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    ApplicationID._cont = ASN1Dict([
        (u'appProvider', _ApplicationID_appProvider),
        (u'appName', _ApplicationID_appName),
        (u'appVersion', _ApplicationID_appVersion),
        ])
    ApplicationID._ext = []
    
    #-----< ReportingCap >-----#
    ReportingCap = SEQ(name=u'ReportingCap', mode=MODE_TYPE)
    _ReportingCap_minInt = INT(name=u'minInt', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReportingCap_minInt._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3600)], ev=None, er=[])
    _ReportingCap_maxInt = INT(name=u'maxInt', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ReportingCap_maxInt._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1440)], ev=None, er=[])
    _ReportingCap_repMode = SEQ(name=u'repMode', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'RepMode')))
    _ReportingCap_batchRepCap = SEQ(name=u'batchRepCap', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'BatchRepCap')), opt=True)
    ReportingCap._cont = ASN1Dict([
        (u'minInt', _ReportingCap_minInt),
        (u'maxInt', _ReportingCap_maxInt),
        (u'repMode', _ReportingCap_repMode),
        (u'batchRepCap', _ReportingCap_batchRepCap),
        ])
    ReportingCap._ext = []
    
    #-----< RepMode >-----#
    RepMode = SEQ(name=u'RepMode', mode=MODE_TYPE)
    _RepMode_realtime = BOOL(name=u'realtime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RepMode_quasirealtime = BOOL(name=u'quasirealtime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RepMode_batch = BOOL(name=u'batch', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    RepMode._cont = ASN1Dict([
        (u'realtime', _RepMode_realtime),
        (u'quasirealtime', _RepMode_quasirealtime),
        (u'batch', _RepMode_batch),
        ])
    RepMode._ext = []
    
    #-----< BatchRepCap >-----#
    BatchRepCap = SEQ(name=u'BatchRepCap', mode=MODE_TYPE)
    _BatchRepCap_report_position = BOOL(name=u'report-position', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BatchRepCap_report_measurements = BOOL(name=u'report-measurements', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BatchRepCap_max_num_positions = INT(name=u'max-num-positions', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BatchRepCap_max_num_positions._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1024)], ev=None, er=[])
    _BatchRepCap_max_num_measurements = INT(name=u'max-num-measurements', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BatchRepCap_max_num_measurements._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1024)], ev=None, er=[])
    BatchRepCap._cont = ASN1Dict([
        (u'report-position', _BatchRepCap_report_position),
        (u'report-measurements', _BatchRepCap_report_measurements),
        (u'max-num-positions', _BatchRepCap_max_num_positions),
        (u'max-num-measurements', _BatchRepCap_max_num_measurements),
        ])
    BatchRepCap._ext = []
    
    #-----< Coordinate >-----#
    Coordinate = SEQ(name=u'Coordinate', mode=MODE_TYPE)
    _Coordinate_latitudeSign = ENUM(name=u'latitudeSign', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Coordinate_latitudeSign._cont = ASN1Dict([(u'north', 0), (u'south', 1)])
    _Coordinate_latitudeSign._ext = None
    _Coordinate_latitude = INT(name=u'latitude', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Coordinate_latitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8388607)], ev=None, er=[])
    _Coordinate_longitude = INT(name=u'longitude', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Coordinate_longitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    Coordinate._cont = ASN1Dict([
        (u'latitudeSign', _Coordinate_latitudeSign),
        (u'latitude', _Coordinate_latitude),
        (u'longitude', _Coordinate_longitude),
        ])
    Coordinate._ext = None
    
    #-----< CircularArea >-----#
    CircularArea = SEQ(name=u'CircularArea', mode=MODE_TYPE)
    _CircularArea_coordinate = SEQ(name=u'coordinate', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'Coordinate')))
    _CircularArea_radius = INT(name=u'radius', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CircularArea_radius._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1000000)], ev=None, er=[])
    _CircularArea_radius_min = INT(name=u'radius-min', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CircularArea_radius_min._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1000000)], ev=None, er=[])
    _CircularArea_radius_max = INT(name=u'radius-max', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CircularArea_radius_max._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1500000)], ev=None, er=[])
    CircularArea._cont = ASN1Dict([
        (u'coordinate', _CircularArea_coordinate),
        (u'radius', _CircularArea_radius),
        (u'radius-min', _CircularArea_radius_min),
        (u'radius-max', _CircularArea_radius_max),
        ])
    CircularArea._ext = None
    
    #-----< EllipticalArea >-----#
    EllipticalArea = SEQ(name=u'EllipticalArea', mode=MODE_TYPE)
    _EllipticalArea_coordinate = SEQ(name=u'coordinate', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'Coordinate')))
    _EllipticalArea_semiMajor = INT(name=u'semiMajor', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EllipticalArea_semiMajor._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1000000)], ev=None, er=[])
    _EllipticalArea_semiMajor_min = INT(name=u'semiMajor-min', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EllipticalArea_semiMajor_min._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1000000)], ev=None, er=[])
    _EllipticalArea_semiMajor_max = INT(name=u'semiMajor-max', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EllipticalArea_semiMajor_max._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1500000)], ev=None, er=[])
    _EllipticalArea_semiMinor = INT(name=u'semiMinor', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EllipticalArea_semiMinor._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1000000)], ev=None, er=[])
    _EllipticalArea_semiMinor_min = INT(name=u'semiMinor-min', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EllipticalArea_semiMinor_min._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1000000)], ev=None, er=[])
    _EllipticalArea_semiMinor_max = INT(name=u'semiMinor-max', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EllipticalArea_semiMinor_max._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1500000)], ev=None, er=[])
    _EllipticalArea_angle = INT(name=u'angle', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EllipticalArea_angle._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=179)], ev=None, er=[])
    EllipticalArea._cont = ASN1Dict([
        (u'coordinate', _EllipticalArea_coordinate),
        (u'semiMajor', _EllipticalArea_semiMajor),
        (u'semiMajor-min', _EllipticalArea_semiMajor_min),
        (u'semiMajor-max', _EllipticalArea_semiMajor_max),
        (u'semiMinor', _EllipticalArea_semiMinor),
        (u'semiMinor-min', _EllipticalArea_semiMinor_min),
        (u'semiMinor-max', _EllipticalArea_semiMinor_max),
        (u'angle', _EllipticalArea_angle),
        ])
    EllipticalArea._ext = None
    
    #-----< PolygonArea >-----#
    PolygonArea = SEQ(name=u'PolygonArea', mode=MODE_TYPE)
    _PolygonArea_polygonDescription = SEQ_OF(name=u'polygonDescription', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'PolygonDescription')))
    _PolygonArea_polygonHysteresis = INT(name=u'polygonHysteresis', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PolygonArea_polygonHysteresis._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=100000)], ev=None, er=[])
    PolygonArea._cont = ASN1Dict([
        (u'polygonDescription', _PolygonArea_polygonDescription),
        (u'polygonHysteresis', _PolygonArea_polygonHysteresis),
        ])
    PolygonArea._ext = None
    
    #-----< PolygonDescription >-----#
    PolygonDescription = SEQ_OF(name=u'PolygonDescription', mode=MODE_TYPE)
    _PolygonDescription__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Ver2-ULP-Components', 'Coordinate')))
    PolygonDescription._cont = _PolygonDescription__item_
    PolygonDescription._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=15)], ev=None, er=[])
    
    _all_ = [
        _MultipleLocationIds__item_,
        MultipleLocationIds,
        _LocationIdData_locationId,
        _LocationIdData_relativetimestamp,
        _LocationIdData_servingFlag,
        LocationIdData,
        RelativeTime,
        maxLidSize,
        _SupportedNetworkInformation_wlan,
        _SupportedNetworkInformation_supportedWLANInfo,
        _SupportedNetworkInformation_supportedWLANApsList,
        _SupportedNetworkInformation_gsm,
        _SupportedNetworkInformation_wcdma,
        _SupportedNetworkInformation_supportedWCDMAInfo,
        _SupportedNetworkInformation_cdma,
        _SupportedNetworkInformation_hrdp,
        _SupportedNetworkInformation_umb,
        _SupportedNetworkInformation_lte,
        _SupportedNetworkInformation_wimax,
        _SupportedNetworkInformation_historic,
        _SupportedNetworkInformation_nonServing,
        _SupportedNetworkInformation_uTRANGPSReferenceTime,
        _SupportedNetworkInformation_uTRANGANSSReferenceTime,
        SupportedNetworkInformation,
        _SupportedWLANInfo_apTP,
        _SupportedWLANInfo_apAG,
        _SupportedWLANInfo_apSN,
        _SupportedWLANInfo_apDevType,
        _SupportedWLANInfo_apRSSI,
        _SupportedWLANInfo_apChanFreq,
        _SupportedWLANInfo_apRTD,
        _SupportedWLANInfo_setTP,
        _SupportedWLANInfo_setAG,
        _SupportedWLANInfo_setSN,
        _SupportedWLANInfo_setRSSI,
        _SupportedWLANInfo_apRepLoc,
        SupportedWLANInfo,
        maxWLANApDataSize,
        __SupportedWLANApsList_supportedWLANApDataList__item_,
        _SupportedWLANApsList_supportedWLANApDataList,
        _SupportedWLANApsList_supportedWLANapsChannel11a,
        _SupportedWLANApsList_supportedWLANapsChannel11bg,
        SupportedWLANApsList,
        _SupportedWLANApsChannel11a_ch34,
        _SupportedWLANApsChannel11a_ch36,
        _SupportedWLANApsChannel11a_ch38,
        _SupportedWLANApsChannel11a_ch40,
        _SupportedWLANApsChannel11a_ch42,
        _SupportedWLANApsChannel11a_ch44,
        _SupportedWLANApsChannel11a_ch46,
        _SupportedWLANApsChannel11a_ch48,
        _SupportedWLANApsChannel11a_ch52,
        _SupportedWLANApsChannel11a_ch56,
        _SupportedWLANApsChannel11a_ch60,
        _SupportedWLANApsChannel11a_ch64,
        _SupportedWLANApsChannel11a_ch149,
        _SupportedWLANApsChannel11a_ch153,
        _SupportedWLANApsChannel11a_ch157,
        _SupportedWLANApsChannel11a_ch161,
        SupportedWLANApsChannel11a,
        _SupportedWLANApsChannel11bg_ch1,
        _SupportedWLANApsChannel11bg_ch2,
        _SupportedWLANApsChannel11bg_ch3,
        _SupportedWLANApsChannel11bg_ch4,
        _SupportedWLANApsChannel11bg_ch5,
        _SupportedWLANApsChannel11bg_ch6,
        _SupportedWLANApsChannel11bg_ch7,
        _SupportedWLANApsChannel11bg_ch8,
        _SupportedWLANApsChannel11bg_ch9,
        _SupportedWLANApsChannel11bg_ch10,
        _SupportedWLANApsChannel11bg_ch11,
        _SupportedWLANApsChannel11bg_ch12,
        _SupportedWLANApsChannel11bg_ch13,
        _SupportedWLANApsChannel11bg_ch14,
        SupportedWLANApsChannel11bg,
        _SupportedWLANApData_apMACAddress,
        _SupportedWLANApData_apDevType,
        SupportedWLANApData,
        _SupportedWCDMAInfo_mrl,
        SupportedWCDMAInfo,
        _Ver2_CellInfo_extension_hrpdCell,
        _Ver2_CellInfo_extension_umbCell,
        _Ver2_CellInfo_extension_lteCell,
        _Ver2_CellInfo_extension_wlanAP,
        _Ver2_CellInfo_extension_wimaxBS,
        Ver2_CellInfo_extension,
        _HrpdCellInformation_refSECTORID,
        _HrpdCellInformation_refBASELAT,
        _HrpdCellInformation_reBASELONG,
        _HrpdCellInformation_refWeekNumber,
        _HrpdCellInformation_refSeconds,
        HrpdCellInformation,
        _UmbCellInformation_refSECTORID,
        _UmbCellInformation_refMCC,
        _UmbCellInformation_refMNC,
        _UmbCellInformation_refBASELAT,
        _UmbCellInformation_reBASELONG,
        _UmbCellInformation_refWeekNumber,
        _UmbCellInformation_refSeconds,
        UmbCellInformation,
        _LteCellInformation_cellGlobalIdEUTRA,
        _LteCellInformation_physCellId,
        _LteCellInformation_trackingAreaCode,
        _LteCellInformation_rsrpResult,
        _LteCellInformation_rsrqResult,
        _LteCellInformation_ta,
        _LteCellInformation_measResultListEUTRA,
        _LteCellInformation_earfcn,
        _LteCellInformation_earfcn_ext,
        LteCellInformation,
        _MeasResultListEUTRA__item_,
        MeasResultListEUTRA,
        _MeasResultEUTRA_physCellId,
        __MeasResultEUTRA_cgi_Info_cellGlobalId,
        __MeasResultEUTRA_cgi_Info_trackingAreaCode,
        _MeasResultEUTRA_cgi_Info,
        __MeasResultEUTRA_measResult_rsrpResult,
        __MeasResultEUTRA_measResult_rsrqResult,
        __MeasResultEUTRA_measResult_earfcn,
        __MeasResultEUTRA_measResult_earfcn_ext,
        _MeasResultEUTRA_measResult,
        MeasResultEUTRA,
        PhysCellId,
        TrackingAreaCode,
        _CellGlobalIdEUTRA_plmn_Identity,
        _CellGlobalIdEUTRA_cellIdentity,
        CellGlobalIdEUTRA,
        _PLMN_Identity_mcc,
        _PLMN_Identity_mnc,
        PLMN_Identity,
        CellIdentity,
        _MCC__item_,
        MCC,
        _MNC__item_,
        MNC,
        MCC_MNC_Digit,
        RSRP_Range,
        RSRQ_Range,
        maxCellReport,
        _WlanAPInformation_apMACAddress,
        _WlanAPInformation_apTransmitPower,
        _WlanAPInformation_apAntennaGain,
        _WlanAPInformation_apSignaltoNoise,
        _WlanAPInformation_apDeviceType,
        _WlanAPInformation_apSignalStrength,
        _WlanAPInformation_apChannelFrequency,
        _WlanAPInformation_apRoundTripDelay,
        _WlanAPInformation_setTransmitPower,
        _WlanAPInformation_setAntennaGain,
        _WlanAPInformation_setSignaltoNoise,
        _WlanAPInformation_setSignalStrength,
        _WlanAPInformation_apReportedLocation,
        _WlanAPInformation_apRepLocation,
        _WlanAPInformation_apSignalStrengthDelta,
        _WlanAPInformation_apSignaltoNoiseDelta,
        _WlanAPInformation_setSignalStrengthDelta,
        _WlanAPInformation_setSignaltoNoiseDelta,
        _WlanAPInformation_operatingClass,
        _WlanAPInformation_apSSID,
        _WlanAPInformation_apPHYType,
        _WlanAPInformation_setMACAddress,
        WlanAPInformation,
        _RTD_rTDValue,
        _RTD_rTDUnits,
        _RTD_rTDAccuracy,
        RTD,
        RTDUnits,
        _ReportedLocation_locationEncodingDescriptor,
        _ReportedLocation_locationData,
        ReportedLocation,
        LocationEncodingDescriptor,
        _LocationData_locationAccuracy,
        _LocationData_locationValue,
        LocationData,
        _RepLocation_lciLocData,
        RepLocation,
        _LciLocData_locationDataLCI,
        LciLocData,
        _LocationDataLCI_latitudeResolution,
        _LocationDataLCI_latitude,
        _LocationDataLCI_longitudeResolution,
        _LocationDataLCI_longitude,
        _LocationDataLCI_altitudeType,
        _LocationDataLCI_altitudeResolution,
        _LocationDataLCI_altitude,
        _LocationDataLCI_datum,
        LocationDataLCI,
        _WimaxBSInformation_wimaxBsID,
        _WimaxBSInformation_wimaxRTD,
        _WimaxBSInformation_wimaxNMRList,
        WimaxBSInformation,
        _WimaxBsID_bsID_MSB,
        _WimaxBsID_bsID_LSB,
        WimaxBsID,
        _WimaxRTD_rtd,
        _WimaxRTD_rTDstd,
        WimaxRTD,
        _WimaxNMRList__item_,
        WimaxNMRList,
        _WimaxNMR_wimaxBsID,
        _WimaxNMR_relDelay,
        _WimaxNMR_relDelaystd,
        _WimaxNMR_rssi,
        _WimaxNMR_rSSIstd,
        _WimaxNMR_bSTxPower,
        _WimaxNMR_cinr,
        _WimaxNMR_cINRstd,
        _WimaxNMR_bSLocation,
        WimaxNMR,
        maxWimaxBSMeas,
        _UTRAN_GPSReferenceTimeAssistance_utran_GPSReferenceTime,
        _UTRAN_GPSReferenceTimeAssistance_gpsReferenceTimeUncertainty,
        _UTRAN_GPSReferenceTimeAssistance_utranGPSDriftRate,
        UTRAN_GPSReferenceTimeAssistance,
        __UTRAN_GPSReferenceTime_utran_GPSTimingOfCell_ms_part,
        __UTRAN_GPSReferenceTime_utran_GPSTimingOfCell_ls_part,
        _UTRAN_GPSReferenceTime_utran_GPSTimingOfCell,
        ___UTRAN_GPSReferenceTime_modeSpecificInfo_fdd_referenceIdentity,
        __UTRAN_GPSReferenceTime_modeSpecificInfo_fdd,
        ___UTRAN_GPSReferenceTime_modeSpecificInfo_tdd_referenceIdentity,
        __UTRAN_GPSReferenceTime_modeSpecificInfo_tdd,
        _UTRAN_GPSReferenceTime_modeSpecificInfo,
        _UTRAN_GPSReferenceTime_sfn,
        UTRAN_GPSReferenceTime,
        UTRANGPSDriftRate,
        __UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell_ms_part,
        __UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell_ls_part,
        _UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell,
        ___UTRAN_GPSReferenceTimeResult_modeSpecificInfo_fdd_referenceIdentity,
        __UTRAN_GPSReferenceTimeResult_modeSpecificInfo_fdd,
        ___UTRAN_GPSReferenceTimeResult_modeSpecificInfo_tdd_referenceIdentity,
        __UTRAN_GPSReferenceTimeResult_modeSpecificInfo_tdd,
        _UTRAN_GPSReferenceTimeResult_modeSpecificInfo,
        _UTRAN_GPSReferenceTimeResult_sfn,
        _UTRAN_GPSReferenceTimeResult_gpsReferenceTimeUncertainty,
        UTRAN_GPSReferenceTimeResult,
        _UTRAN_GANSSReferenceTimeAssistance_ganssDay,
        _UTRAN_GANSSReferenceTimeAssistance_ganssTimeID,
        _UTRAN_GANSSReferenceTimeAssistance_utran_GANSSReferenceTime,
        _UTRAN_GANSSReferenceTimeAssistance_utranGANSSDriftRate,
        UTRAN_GANSSReferenceTimeAssistance,
        _UTRAN_GANSSReferenceTime_ganssTOD,
        _UTRAN_GANSSReferenceTime_utran_GANSSTimingOfCell,
        ___UTRAN_GANSSReferenceTime_modeSpecificInfo_fdd_referenceIdentity,
        __UTRAN_GANSSReferenceTime_modeSpecificInfo_fdd,
        ___UTRAN_GANSSReferenceTime_modeSpecificInfo_tdd_referenceIdentity,
        __UTRAN_GANSSReferenceTime_modeSpecificInfo_tdd,
        _UTRAN_GANSSReferenceTime_modeSpecificInfo,
        _UTRAN_GANSSReferenceTime_sfn,
        _UTRAN_GANSSReferenceTime_ganss_TODUncertainty,
        UTRAN_GANSSReferenceTime,
        UTRANGANSSDriftRate,
        _UTRAN_GANSSReferenceTimeResult_ganssTimeID,
        _UTRAN_GANSSReferenceTimeResult_set_GANSSReferenceTime,
        UTRAN_GANSSReferenceTimeResult,
        __SET_GANSSReferenceTime_set_GANSSTimingOfCell_ms_part,
        __SET_GANSSReferenceTime_set_GANSSTimingOfCell_ls_part,
        _SET_GANSSReferenceTime_set_GANSSTimingOfCell,
        ___SET_GANSSReferenceTime_modeSpecificInfo_fdd_referenceIdentity,
        __SET_GANSSReferenceTime_modeSpecificInfo_fdd,
        ___SET_GANSSReferenceTime_modeSpecificInfo_tdd_referenceIdentity,
        __SET_GANSSReferenceTime_modeSpecificInfo_tdd,
        _SET_GANSSReferenceTime_modeSpecificInfo,
        _SET_GANSSReferenceTime_sfn,
        _SET_GANSSReferenceTime_ganss_TODUncertainty,
        SET_GANSSReferenceTime,
        _GNSSPosTechnology_gps,
        _GNSSPosTechnology_galileo,
        _GNSSPosTechnology_sbas,
        _GNSSPosTechnology_modernized_gps,
        _GNSSPosTechnology_qzss,
        _GNSSPosTechnology_glonass,
        _GNSSPosTechnology_bds,
        GNSSPosTechnology,
        GANSSSignals,
        SPCSETKey,
        _SPCTID_rand,
        _SPCTID_slpFQDN,
        SPCTID,
        SPCSETKeylifetime,
        CauseCode,
        _ThirdParty__item_,
        ThirdParty,
        _ThirdPartyID_logicalName,
        _ThirdPartyID_msisdn,
        _ThirdPartyID_emailaddr,
        _ThirdPartyID_sip_uri,
        _ThirdPartyID_ims_public_identity,
        _ThirdPartyID_min,
        _ThirdPartyID_mdn,
        _ThirdPartyID_uri,
        ThirdPartyID,
        _ApplicationID_appProvider,
        _ApplicationID_appName,
        _ApplicationID_appVersion,
        ApplicationID,
        _ReportingCap_minInt,
        _ReportingCap_maxInt,
        _ReportingCap_repMode,
        _ReportingCap_batchRepCap,
        ReportingCap,
        _RepMode_realtime,
        _RepMode_quasirealtime,
        _RepMode_batch,
        RepMode,
        _BatchRepCap_report_position,
        _BatchRepCap_report_measurements,
        _BatchRepCap_max_num_positions,
        _BatchRepCap_max_num_measurements,
        BatchRepCap,
        _Coordinate_latitudeSign,
        _Coordinate_latitude,
        _Coordinate_longitude,
        Coordinate,
        _CircularArea_coordinate,
        _CircularArea_radius,
        _CircularArea_radius_min,
        _CircularArea_radius_max,
        CircularArea,
        _EllipticalArea_coordinate,
        _EllipticalArea_semiMajor,
        _EllipticalArea_semiMajor_min,
        _EllipticalArea_semiMajor_max,
        _EllipticalArea_semiMinor,
        _EllipticalArea_semiMinor_min,
        _EllipticalArea_semiMinor_max,
        _EllipticalArea_angle,
        EllipticalArea,
        _PolygonArea_polygonDescription,
        _PolygonArea_polygonHysteresis,
        PolygonArea,
        _PolygonDescription__item_,
        PolygonDescription,
    ]

class SUPL_INIT:

    _name_  = u'SUPL-INIT'
    _oid_   = []
    
    _obj_ = [
        u'SUPLINIT',
        u'Notification',
        u'NotificationType',
        u'EncodingType',
        u'maxReqLength',
        u'maxClientLength',
        u'FormatIndicator',
        u'SLPMode',
        u'MAC',
        u'KeyIdentity',
        ]
    _type_ = [
        u'SUPLINIT',
        u'Notification',
        u'NotificationType',
        u'EncodingType',
        u'FormatIndicator',
        u'SLPMode',
        u'MAC',
        u'KeyIdentity',
        ]
    _set_ = [
        ]
    _val_ = [
        u'maxReqLength',
        u'maxClientLength',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< SUPLINIT >-----#
    SUPLINIT = SEQ(name=u'SUPLINIT', mode=MODE_TYPE)
    _SUPLINIT_posMethod = ENUM(name=u'posMethod', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'PosMethod')))
    _SUPLINIT_notification = SEQ(name=u'notification', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-INIT', 'Notification')), opt=True)
    _SUPLINIT_sLPAddress = CHOICE(name=u'sLPAddress', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ULP-Components', 'SLPAddress')), opt=True)
    _SUPLINIT_qoP = SEQ(name=u'qoP', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'QoP')), opt=True)
    _SUPLINIT_sLPMode = ENUM(name=u'sLPMode', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-INIT', 'SLPMode')))
    _SUPLINIT_mac = BIT_STR(name=u'mac', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-INIT', 'MAC')), opt=True)
    _SUPLINIT_keyIdentity = BIT_STR(name=u'keyIdentity', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-INIT', 'KeyIdentity')), opt=True)
    _SUPLINIT_ver2_SUPL_INIT_extension = SEQ(name=u'ver2-SUPL-INIT-extension', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-message-extensions', 'Ver2-SUPL-INIT-extension')), opt=True)
    SUPLINIT._cont = ASN1Dict([
        (u'posMethod', _SUPLINIT_posMethod),
        (u'notification', _SUPLINIT_notification),
        (u'sLPAddress', _SUPLINIT_sLPAddress),
        (u'qoP', _SUPLINIT_qoP),
        (u'sLPMode', _SUPLINIT_sLPMode),
        (u'mac', _SUPLINIT_mac),
        (u'keyIdentity', _SUPLINIT_keyIdentity),
        (u'ver2-SUPL-INIT-extension', _SUPLINIT_ver2_SUPL_INIT_extension),
        ])
    SUPLINIT._ext = [u'ver2-SUPL-INIT-extension']
    
    #-----< Notification >-----#
    Notification = SEQ(name=u'Notification', mode=MODE_TYPE)
    _Notification_notificationType = ENUM(name=u'notificationType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-INIT', 'NotificationType')))
    _Notification_encodingType = ENUM(name=u'encodingType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-INIT', 'EncodingType')), opt=True)
    _Notification_requestorId = OCT_STR(name=u'requestorId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Notification_requestorId._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    _Notification_requestorIdType = ENUM(name=u'requestorIdType', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-INIT', 'FormatIndicator')), opt=True)
    _Notification_clientName = OCT_STR(name=u'clientName', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Notification_clientName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    _Notification_clientNameType = ENUM(name=u'clientNameType', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-INIT', 'FormatIndicator')), opt=True)
    _Notification_ver2_Notification_extension = SEQ(name=u'ver2-Notification-extension', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'Ver2-Notification-extension')), opt=True)
    Notification._cont = ASN1Dict([
        (u'notificationType', _Notification_notificationType),
        (u'encodingType', _Notification_encodingType),
        (u'requestorId', _Notification_requestorId),
        (u'requestorIdType', _Notification_requestorIdType),
        (u'clientName', _Notification_clientName),
        (u'clientNameType', _Notification_clientNameType),
        (u'ver2-Notification-extension', _Notification_ver2_Notification_extension),
        ])
    Notification._ext = [u'ver2-Notification-extension']
    
    #-----< NotificationType >-----#
    NotificationType = ENUM(name=u'NotificationType', mode=MODE_TYPE)
    NotificationType._cont = ASN1Dict([(u'noNotificationNoVerification', 0), (u'notificationOnly', 1), (u'notificationAndVerficationAllowedNA', 2), (u'notificationAndVerficationDeniedNA', 3), (u'privacyOverride', 4)])
    NotificationType._ext = []
    
    #-----< EncodingType >-----#
    EncodingType = ENUM(name=u'EncodingType', mode=MODE_TYPE)
    EncodingType._cont = ASN1Dict([(u'ucs2', 0), (u'gsmDefault', 1), (u'utf8', 2)])
    EncodingType._ext = []
    
    #-----< maxReqLength >-----#
    maxReqLength = INT(name=u'maxReqLength', mode=MODE_VALUE)
    maxReqLength._val = 50
    
    #-----< maxClientLength >-----#
    maxClientLength = INT(name=u'maxClientLength', mode=MODE_VALUE)
    maxClientLength._val = 50
    
    #-----< FormatIndicator >-----#
    FormatIndicator = ENUM(name=u'FormatIndicator', mode=MODE_TYPE)
    FormatIndicator._cont = ASN1Dict([(u'logicalName', 0), (u'e-mailAddress', 1), (u'msisdn', 2), (u'url', 3), (u'sipUrl', 4), (u'min', 5), (u'mdn', 6), (u'iMSPublicidentity', 7)])
    FormatIndicator._ext = []
    
    #-----< SLPMode >-----#
    SLPMode = ENUM(name=u'SLPMode', mode=MODE_TYPE)
    SLPMode._cont = ASN1Dict([(u'proxy', 0), (u'nonProxy', 1)])
    SLPMode._ext = None
    
    #-----< MAC >-----#
    MAC = BIT_STR(name=u'MAC', mode=MODE_TYPE)
    MAC._const_sz = ASN1Set(rv=[64], rr=[], ev=None, er=[])
    
    #-----< KeyIdentity >-----#
    KeyIdentity = BIT_STR(name=u'KeyIdentity', mode=MODE_TYPE)
    KeyIdentity._const_sz = ASN1Set(rv=[128], rr=[], ev=None, er=[])
    
    _all_ = [
        _SUPLINIT_posMethod,
        _SUPLINIT_notification,
        _SUPLINIT_sLPAddress,
        _SUPLINIT_qoP,
        _SUPLINIT_sLPMode,
        _SUPLINIT_mac,
        _SUPLINIT_keyIdentity,
        _SUPLINIT_ver2_SUPL_INIT_extension,
        SUPLINIT,
        _Notification_notificationType,
        _Notification_encodingType,
        _Notification_requestorId,
        _Notification_requestorIdType,
        _Notification_clientName,
        _Notification_clientNameType,
        _Notification_ver2_Notification_extension,
        Notification,
        NotificationType,
        EncodingType,
        maxReqLength,
        maxClientLength,
        FormatIndicator,
        SLPMode,
        MAC,
        KeyIdentity,
    ]

class SUPL_START:

    _name_  = u'SUPL-START'
    _oid_   = []
    
    _obj_ = [
        u'SUPLSTART',
        u'SETCapabilities',
        u'PosTechnology',
        u'PrefMethod',
        u'PosProtocol',
        ]
    _type_ = [
        u'SUPLSTART',
        u'SETCapabilities',
        u'PosTechnology',
        u'PrefMethod',
        u'PosProtocol',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< SUPLSTART >-----#
    SUPLSTART = SEQ(name=u'SUPLSTART', mode=MODE_TYPE)
    _SUPLSTART_sETCapabilities = SEQ(name=u'sETCapabilities', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-START', 'SETCapabilities')))
    _SUPLSTART_locationId = SEQ(name=u'locationId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'LocationId')))
    _SUPLSTART_qoP = SEQ(name=u'qoP', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'QoP')), opt=True)
    _SUPLSTART_ver2_SUPL_START_extension = SEQ(name=u'ver2-SUPL-START-extension', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-message-extensions', 'Ver2-SUPL-START-extension')), opt=True)
    SUPLSTART._cont = ASN1Dict([
        (u'sETCapabilities', _SUPLSTART_sETCapabilities),
        (u'locationId', _SUPLSTART_locationId),
        (u'qoP', _SUPLSTART_qoP),
        (u'ver2-SUPL-START-extension', _SUPLSTART_ver2_SUPL_START_extension),
        ])
    SUPLSTART._ext = [u'ver2-SUPL-START-extension']
    
    #-----< SETCapabilities >-----#
    SETCapabilities = SEQ(name=u'SETCapabilities', mode=MODE_TYPE)
    _SETCapabilities_posTechnology = SEQ(name=u'posTechnology', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-START', 'PosTechnology')))
    _SETCapabilities_prefMethod = ENUM(name=u'prefMethod', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-START', 'PrefMethod')))
    _SETCapabilities_posProtocol = SEQ(name=u'posProtocol', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-START', 'PosProtocol')))
    _SETCapabilities_ver2_SETCapabilities_extension = SEQ(name=u'ver2-SETCapabilities-extension', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'Ver2-SETCapabilities-extension')), opt=True)
    SETCapabilities._cont = ASN1Dict([
        (u'posTechnology', _SETCapabilities_posTechnology),
        (u'prefMethod', _SETCapabilities_prefMethod),
        (u'posProtocol', _SETCapabilities_posProtocol),
        (u'ver2-SETCapabilities-extension', _SETCapabilities_ver2_SETCapabilities_extension),
        ])
    SETCapabilities._ext = [u'ver2-SETCapabilities-extension']
    
    #-----< PosTechnology >-----#
    PosTechnology = SEQ(name=u'PosTechnology', mode=MODE_TYPE)
    _PosTechnology_agpsSETassisted = BOOL(name=u'agpsSETassisted', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosTechnology_agpsSETBased = BOOL(name=u'agpsSETBased', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosTechnology_autonomousGPS = BOOL(name=u'autonomousGPS', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosTechnology_aflt = BOOL(name=u'aflt', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosTechnology_ecid = BOOL(name=u'ecid', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosTechnology_eotd = BOOL(name=u'eotd', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosTechnology_otdoa = BOOL(name=u'otdoa', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosTechnology_ver2_PosTechnology_extension = SEQ(name=u'ver2-PosTechnology-extension', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'Ver2-PosTechnology-extension')), opt=True)
    PosTechnology._cont = ASN1Dict([
        (u'agpsSETassisted', _PosTechnology_agpsSETassisted),
        (u'agpsSETBased', _PosTechnology_agpsSETBased),
        (u'autonomousGPS', _PosTechnology_autonomousGPS),
        (u'aflt', _PosTechnology_aflt),
        (u'ecid', _PosTechnology_ecid),
        (u'eotd', _PosTechnology_eotd),
        (u'otdoa', _PosTechnology_otdoa),
        (u'ver2-PosTechnology-extension', _PosTechnology_ver2_PosTechnology_extension),
        ])
    PosTechnology._ext = [u'ver2-PosTechnology-extension']
    
    #-----< PrefMethod >-----#
    PrefMethod = ENUM(name=u'PrefMethod', mode=MODE_TYPE)
    PrefMethod._cont = ASN1Dict([(u'agpsSETassistedPreferred', 0), (u'agpsSETBasedPreferred', 1), (u'noPreference', 2)])
    PrefMethod._ext = None
    
    #-----< PosProtocol >-----#
    PosProtocol = SEQ(name=u'PosProtocol', mode=MODE_TYPE)
    _PosProtocol_tia801 = BOOL(name=u'tia801', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosProtocol_rrlp = BOOL(name=u'rrlp', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosProtocol_rrc = BOOL(name=u'rrc', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosProtocol_ver2_PosProtocol_extension = SEQ(name=u'ver2-PosProtocol-extension', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'Ver2-PosProtocol-extension')), opt=True)
    PosProtocol._cont = ASN1Dict([
        (u'tia801', _PosProtocol_tia801),
        (u'rrlp', _PosProtocol_rrlp),
        (u'rrc', _PosProtocol_rrc),
        (u'ver2-PosProtocol-extension', _PosProtocol_ver2_PosProtocol_extension),
        ])
    PosProtocol._ext = [u'ver2-PosProtocol-extension']
    
    _all_ = [
        _SUPLSTART_sETCapabilities,
        _SUPLSTART_locationId,
        _SUPLSTART_qoP,
        _SUPLSTART_ver2_SUPL_START_extension,
        SUPLSTART,
        _SETCapabilities_posTechnology,
        _SETCapabilities_prefMethod,
        _SETCapabilities_posProtocol,
        _SETCapabilities_ver2_SETCapabilities_extension,
        SETCapabilities,
        _PosTechnology_agpsSETassisted,
        _PosTechnology_agpsSETBased,
        _PosTechnology_autonomousGPS,
        _PosTechnology_aflt,
        _PosTechnology_ecid,
        _PosTechnology_eotd,
        _PosTechnology_otdoa,
        _PosTechnology_ver2_PosTechnology_extension,
        PosTechnology,
        PrefMethod,
        _PosProtocol_tia801,
        _PosProtocol_rrlp,
        _PosProtocol_rrc,
        _PosProtocol_ver2_PosProtocol_extension,
        PosProtocol,
    ]

class SUPL_RESPONSE:

    _name_  = u'SUPL-RESPONSE'
    _oid_   = []
    
    _obj_ = [
        u'SUPLRESPONSE',
        u'SETAuthKey',
        u'KeyIdentity4',
        ]
    _type_ = [
        u'SUPLRESPONSE',
        u'SETAuthKey',
        u'KeyIdentity4',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< SUPLRESPONSE >-----#
    SUPLRESPONSE = SEQ(name=u'SUPLRESPONSE', mode=MODE_TYPE)
    _SUPLRESPONSE_posMethod = ENUM(name=u'posMethod', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'PosMethod')))
    _SUPLRESPONSE_sLPAddress = CHOICE(name=u'sLPAddress', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ULP-Components', 'SLPAddress')), opt=True)
    _SUPLRESPONSE_sETAuthKey = CHOICE(name=u'sETAuthKey', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('SUPL-RESPONSE', 'SETAuthKey')), opt=True)
    _SUPLRESPONSE_keyIdentity4 = BIT_STR(name=u'keyIdentity4', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-RESPONSE', 'KeyIdentity4')), opt=True)
    _SUPLRESPONSE_ver2_SUPL_RESPONSE_extension = SEQ(name=u'ver2-SUPL-RESPONSE-extension', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-message-extensions', 'Ver2-SUPL-RESPONSE-extension')), opt=True)
    SUPLRESPONSE._cont = ASN1Dict([
        (u'posMethod', _SUPLRESPONSE_posMethod),
        (u'sLPAddress', _SUPLRESPONSE_sLPAddress),
        (u'sETAuthKey', _SUPLRESPONSE_sETAuthKey),
        (u'keyIdentity4', _SUPLRESPONSE_keyIdentity4),
        (u'ver2-SUPL-RESPONSE-extension', _SUPLRESPONSE_ver2_SUPL_RESPONSE_extension),
        ])
    SUPLRESPONSE._ext = [u'ver2-SUPL-RESPONSE-extension']
    
    #-----< SETAuthKey >-----#
    SETAuthKey = CHOICE(name=u'SETAuthKey', mode=MODE_TYPE)
    _SETAuthKey_shortKey = BIT_STR(name=u'shortKey', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SETAuthKey_shortKey._const_sz = ASN1Set(rv=[128], rr=[], ev=None, er=[])
    _SETAuthKey_longKey = BIT_STR(name=u'longKey', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SETAuthKey_longKey._const_sz = ASN1Set(rv=[256], rr=[], ev=None, er=[])
    SETAuthKey._cont = ASN1Dict([
        (u'shortKey', _SETAuthKey_shortKey),
        (u'longKey', _SETAuthKey_longKey),
        ])
    SETAuthKey._ext = []
    
    #-----< KeyIdentity4 >-----#
    KeyIdentity4 = BIT_STR(name=u'KeyIdentity4', mode=MODE_TYPE)
    KeyIdentity4._const_sz = ASN1Set(rv=[128], rr=[], ev=None, er=[])
    
    _all_ = [
        _SUPLRESPONSE_posMethod,
        _SUPLRESPONSE_sLPAddress,
        _SUPLRESPONSE_sETAuthKey,
        _SUPLRESPONSE_keyIdentity4,
        _SUPLRESPONSE_ver2_SUPL_RESPONSE_extension,
        SUPLRESPONSE,
        _SETAuthKey_shortKey,
        _SETAuthKey_longKey,
        SETAuthKey,
        KeyIdentity4,
    ]

class SUPL_POS_INIT:

    _name_  = u'SUPL-POS-INIT'
    _oid_   = []
    
    _obj_ = [
        u'SUPLPOSINIT',
        u'RequestedAssistData',
        u'NavigationModel',
        u'SatelliteInfo',
        u'SatelliteInfoElement',
        ]
    _type_ = [
        u'SUPLPOSINIT',
        u'RequestedAssistData',
        u'NavigationModel',
        u'SatelliteInfo',
        u'SatelliteInfoElement',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< SUPLPOSINIT >-----#
    SUPLPOSINIT = SEQ(name=u'SUPLPOSINIT', mode=MODE_TYPE)
    _SUPLPOSINIT_sETCapabilities = SEQ(name=u'sETCapabilities', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-START', 'SETCapabilities')))
    _SUPLPOSINIT_requestedAssistData = SEQ(name=u'requestedAssistData', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-POS-INIT', 'RequestedAssistData')), opt=True)
    _SUPLPOSINIT_locationId = SEQ(name=u'locationId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'LocationId')))
    _SUPLPOSINIT_position = SEQ(name=u'position', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'Position')), opt=True)
    _SUPLPOSINIT_suplpos = SEQ(name=u'suplpos', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-POS', 'SUPLPOS')), opt=True)
    _SUPLPOSINIT_ver = BIT_STR(name=u'ver', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'Ver')), opt=True)
    _SUPLPOSINIT_ver2_SUPL_POS_INIT_extension = SEQ(name=u'ver2-SUPL-POS-INIT-extension', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-message-extensions', 'Ver2-SUPL-POS-INIT-extension')), opt=True)
    SUPLPOSINIT._cont = ASN1Dict([
        (u'sETCapabilities', _SUPLPOSINIT_sETCapabilities),
        (u'requestedAssistData', _SUPLPOSINIT_requestedAssistData),
        (u'locationId', _SUPLPOSINIT_locationId),
        (u'position', _SUPLPOSINIT_position),
        (u'suplpos', _SUPLPOSINIT_suplpos),
        (u'ver', _SUPLPOSINIT_ver),
        (u'ver2-SUPL-POS-INIT-extension', _SUPLPOSINIT_ver2_SUPL_POS_INIT_extension),
        ])
    SUPLPOSINIT._ext = [u'ver2-SUPL-POS-INIT-extension']
    
    #-----< RequestedAssistData >-----#
    RequestedAssistData = SEQ(name=u'RequestedAssistData', mode=MODE_TYPE)
    _RequestedAssistData_almanacRequested = BOOL(name=u'almanacRequested', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RequestedAssistData_utcModelRequested = BOOL(name=u'utcModelRequested', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RequestedAssistData_ionosphericModelRequested = BOOL(name=u'ionosphericModelRequested', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RequestedAssistData_dgpsCorrectionsRequested = BOOL(name=u'dgpsCorrectionsRequested', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RequestedAssistData_referenceLocationRequested = BOOL(name=u'referenceLocationRequested', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RequestedAssistData_referenceTimeRequested = BOOL(name=u'referenceTimeRequested', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RequestedAssistData_acquisitionAssistanceRequested = BOOL(name=u'acquisitionAssistanceRequested', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RequestedAssistData_realTimeIntegrityRequested = BOOL(name=u'realTimeIntegrityRequested', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RequestedAssistData_navigationModelRequested = BOOL(name=u'navigationModelRequested', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RequestedAssistData_navigationModelData = SEQ(name=u'navigationModelData', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-POS-INIT', 'NavigationModel')), opt=True)
    _RequestedAssistData_ver2_RequestedAssistData_extension = SEQ(name=u'ver2-RequestedAssistData-extension', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'Ver2-RequestedAssistData-extension')), opt=True)
    RequestedAssistData._cont = ASN1Dict([
        (u'almanacRequested', _RequestedAssistData_almanacRequested),
        (u'utcModelRequested', _RequestedAssistData_utcModelRequested),
        (u'ionosphericModelRequested', _RequestedAssistData_ionosphericModelRequested),
        (u'dgpsCorrectionsRequested', _RequestedAssistData_dgpsCorrectionsRequested),
        (u'referenceLocationRequested', _RequestedAssistData_referenceLocationRequested),
        (u'referenceTimeRequested', _RequestedAssistData_referenceTimeRequested),
        (u'acquisitionAssistanceRequested', _RequestedAssistData_acquisitionAssistanceRequested),
        (u'realTimeIntegrityRequested', _RequestedAssistData_realTimeIntegrityRequested),
        (u'navigationModelRequested', _RequestedAssistData_navigationModelRequested),
        (u'navigationModelData', _RequestedAssistData_navigationModelData),
        (u'ver2-RequestedAssistData-extension', _RequestedAssistData_ver2_RequestedAssistData_extension),
        ])
    RequestedAssistData._ext = [u'ver2-RequestedAssistData-extension']
    
    #-----< NavigationModel >-----#
    NavigationModel = SEQ(name=u'NavigationModel', mode=MODE_TYPE)
    _NavigationModel_gpsWeek = INT(name=u'gpsWeek', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavigationModel_gpsWeek._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    _NavigationModel_gpsToe = INT(name=u'gpsToe', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavigationModel_gpsToe._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=167)], ev=None, er=[])
    _NavigationModel_nsat = INT(name=u'nsat', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavigationModel_nsat._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    _NavigationModel_toeLimit = INT(name=u'toeLimit', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavigationModel_toeLimit._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=10)], ev=None, er=[])
    _NavigationModel_satInfo = SEQ_OF(name=u'satInfo', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-POS-INIT', 'SatelliteInfo')), opt=True)
    NavigationModel._cont = ASN1Dict([
        (u'gpsWeek', _NavigationModel_gpsWeek),
        (u'gpsToe', _NavigationModel_gpsToe),
        (u'nsat', _NavigationModel_nsat),
        (u'toeLimit', _NavigationModel_toeLimit),
        (u'satInfo', _NavigationModel_satInfo),
        ])
    NavigationModel._ext = []
    
    #-----< SatelliteInfo >-----#
    SatelliteInfo = SEQ_OF(name=u'SatelliteInfo', mode=MODE_TYPE)
    _SatelliteInfo__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('SUPL-POS-INIT', 'SatelliteInfoElement')))
    SatelliteInfo._cont = _SatelliteInfo__item_
    SatelliteInfo._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=31)], ev=None, er=[])
    
    #-----< SatelliteInfoElement >-----#
    SatelliteInfoElement = SEQ(name=u'SatelliteInfoElement', mode=MODE_TYPE)
    _SatelliteInfoElement_satId = INT(name=u'satId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SatelliteInfoElement_satId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _SatelliteInfoElement_iode = INT(name=u'iode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SatelliteInfoElement_iode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    SatelliteInfoElement._cont = ASN1Dict([
        (u'satId', _SatelliteInfoElement_satId),
        (u'iode', _SatelliteInfoElement_iode),
        ])
    SatelliteInfoElement._ext = []
    
    _all_ = [
        _SUPLPOSINIT_sETCapabilities,
        _SUPLPOSINIT_requestedAssistData,
        _SUPLPOSINIT_locationId,
        _SUPLPOSINIT_position,
        _SUPLPOSINIT_suplpos,
        _SUPLPOSINIT_ver,
        _SUPLPOSINIT_ver2_SUPL_POS_INIT_extension,
        SUPLPOSINIT,
        _RequestedAssistData_almanacRequested,
        _RequestedAssistData_utcModelRequested,
        _RequestedAssistData_ionosphericModelRequested,
        _RequestedAssistData_dgpsCorrectionsRequested,
        _RequestedAssistData_referenceLocationRequested,
        _RequestedAssistData_referenceTimeRequested,
        _RequestedAssistData_acquisitionAssistanceRequested,
        _RequestedAssistData_realTimeIntegrityRequested,
        _RequestedAssistData_navigationModelRequested,
        _RequestedAssistData_navigationModelData,
        _RequestedAssistData_ver2_RequestedAssistData_extension,
        RequestedAssistData,
        _NavigationModel_gpsWeek,
        _NavigationModel_gpsToe,
        _NavigationModel_nsat,
        _NavigationModel_toeLimit,
        _NavigationModel_satInfo,
        NavigationModel,
        _SatelliteInfo__item_,
        SatelliteInfo,
        _SatelliteInfoElement_satId,
        _SatelliteInfoElement_iode,
        SatelliteInfoElement,
    ]

class SUPL_POS:

    _name_  = u'SUPL-POS'
    _oid_   = []
    
    _obj_ = [
        u'SUPLPOS',
        u'PosPayLoad',
        ]
    _type_ = [
        u'SUPLPOS',
        u'PosPayLoad',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< SUPLPOS >-----#
    SUPLPOS = SEQ(name=u'SUPLPOS', mode=MODE_TYPE)
    _SUPLPOS_posPayLoad = CHOICE(name=u'posPayLoad', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('SUPL-POS', 'PosPayLoad')))
    _SUPLPOS_velocity = CHOICE(name=u'velocity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ULP-Components', 'Velocity')), opt=True)
    _SUPLPOS_ver2_SUPL_POS_extension = SEQ(name=u'ver2-SUPL-POS-extension', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-message-extensions', 'Ver2-SUPL-POS-extension')), opt=True)
    SUPLPOS._cont = ASN1Dict([
        (u'posPayLoad', _SUPLPOS_posPayLoad),
        (u'velocity', _SUPLPOS_velocity),
        (u'ver2-SUPL-POS-extension', _SUPLPOS_ver2_SUPL_POS_extension),
        ])
    SUPLPOS._ext = [u'ver2-SUPL-POS-extension']
    
    #-----< PosPayLoad >-----#
    PosPayLoad = CHOICE(name=u'PosPayLoad', mode=MODE_TYPE)
    _PosPayLoad_tia801payload = OCT_STR(name=u'tia801payload', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosPayLoad_tia801payload._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8192)], ev=None, er=[])
    _PosPayLoad_rrcPayload = OCT_STR(name=u'rrcPayload', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosPayLoad_rrcPayload._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8192)], ev=None, er=[])
    _PosPayLoad_rrlpPayload = OCT_STR(name=u'rrlpPayload', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosPayLoad_rrlpPayload._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8192)], ev=None, er=[])
    _PosPayLoad_ver2_PosPayLoad_extension = SEQ(name=u'ver2-PosPayLoad-extension', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'Ver2-PosPayLoad-extension')))
    PosPayLoad._cont = ASN1Dict([
        (u'tia801payload', _PosPayLoad_tia801payload),
        (u'rrcPayload', _PosPayLoad_rrcPayload),
        (u'rrlpPayload', _PosPayLoad_rrlpPayload),
        (u'ver2-PosPayLoad-extension', _PosPayLoad_ver2_PosPayLoad_extension),
        ])
    PosPayLoad._ext = [u'ver2-PosPayLoad-extension']
    
    _all_ = [
        _SUPLPOS_posPayLoad,
        _SUPLPOS_velocity,
        _SUPLPOS_ver2_SUPL_POS_extension,
        SUPLPOS,
        _PosPayLoad_tia801payload,
        _PosPayLoad_rrcPayload,
        _PosPayLoad_rrlpPayload,
        _PosPayLoad_ver2_PosPayLoad_extension,
        PosPayLoad,
    ]

class SUPL_END:

    _name_  = u'SUPL-END'
    _oid_   = []
    
    _obj_ = [
        u'SUPLEND',
        ]
    _type_ = [
        u'SUPLEND',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< SUPLEND >-----#
    SUPLEND = SEQ(name=u'SUPLEND', mode=MODE_TYPE)
    _SUPLEND_position = SEQ(name=u'position', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'Position')), opt=True)
    _SUPLEND_statusCode = ENUM(name=u'statusCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'StatusCode')), opt=True)
    _SUPLEND_ver = BIT_STR(name=u'ver', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'Ver')), opt=True)
    _SUPLEND_ver2_SUPL_END_extension = SEQ(name=u'ver2-SUPL-END-extension', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-message-extensions', 'Ver2-SUPL-END-extension')), opt=True)
    SUPLEND._cont = ASN1Dict([
        (u'position', _SUPLEND_position),
        (u'statusCode', _SUPLEND_statusCode),
        (u'ver', _SUPLEND_ver),
        (u'ver2-SUPL-END-extension', _SUPLEND_ver2_SUPL_END_extension),
        ])
    SUPLEND._ext = [u'ver2-SUPL-END-extension']
    
    _all_ = [
        _SUPLEND_position,
        _SUPLEND_statusCode,
        _SUPLEND_ver,
        _SUPLEND_ver2_SUPL_END_extension,
        SUPLEND,
    ]

class SUPL_AUTH_REQ:

    _name_  = u'SUPL-AUTH-REQ'
    _oid_   = []
    
    _obj_ = [
        u'SUPLAUTHREQ',
        ]
    _type_ = [
        u'SUPLAUTHREQ',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< SUPLAUTHREQ >-----#
    SUPLAUTHREQ = SEQ(name=u'SUPLAUTHREQ', mode=MODE_TYPE)
    _SUPLAUTHREQ_ver = BIT_STR(name=u'ver', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'Ver')), opt=True)
    _SUPLAUTHREQ_sETCapabilities = SEQ(name=u'sETCapabilities', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-START', 'SETCapabilities')), opt=True)
    SUPLAUTHREQ._cont = ASN1Dict([
        (u'ver', _SUPLAUTHREQ_ver),
        (u'sETCapabilities', _SUPLAUTHREQ_sETCapabilities),
        ])
    SUPLAUTHREQ._ext = []
    
    _all_ = [
        _SUPLAUTHREQ_ver,
        _SUPLAUTHREQ_sETCapabilities,
        SUPLAUTHREQ,
    ]

class SUPL_AUTH_RESP:

    _name_  = u'SUPL-AUTH-RESP'
    _oid_   = []
    
    _obj_ = [
        u'SUPLAUTHRESP',
        ]
    _type_ = [
        u'SUPLAUTHRESP',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< SUPLAUTHRESP >-----#
    SUPLAUTHRESP = SEQ(name=u'SUPLAUTHRESP', mode=MODE_TYPE)
    _SUPLAUTHRESP_sPCSETKey = BIT_STR(name=u'sPCSETKey', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'SPCSETKey')))
    _SUPLAUTHRESP_spctid = SEQ(name=u'spctid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'SPCTID')))
    _SUPLAUTHRESP_sPCSETKeylifetime = INT(name=u'sPCSETKeylifetime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'SPCSETKeylifetime')), opt=True)
    SUPLAUTHRESP._cont = ASN1Dict([
        (u'sPCSETKey', _SUPLAUTHRESP_sPCSETKey),
        (u'spctid', _SUPLAUTHRESP_spctid),
        (u'sPCSETKeylifetime', _SUPLAUTHRESP_sPCSETKeylifetime),
        ])
    SUPLAUTHRESP._ext = []
    
    _all_ = [
        _SUPLAUTHRESP_sPCSETKey,
        _SUPLAUTHRESP_spctid,
        _SUPLAUTHRESP_sPCSETKeylifetime,
        SUPLAUTHRESP,
    ]

class SUPL_NOTIFY:

    _name_  = u'SUPL-NOTIFY'
    _oid_   = []
    
    _obj_ = [
        u'Ver2-SUPLNOTIFY',
        ]
    _type_ = [
        u'Ver2-SUPLNOTIFY',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Ver2-SUPLNOTIFY >-----#
    Ver2_SUPLNOTIFY = SEQ(name=u'Ver2-SUPLNOTIFY', mode=MODE_TYPE)
    _Ver2_SUPLNOTIFY_notification = SEQ(name=u'notification', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-INIT', 'Notification')))
    Ver2_SUPLNOTIFY._cont = ASN1Dict([
        (u'notification', _Ver2_SUPLNOTIFY_notification),
        ])
    Ver2_SUPLNOTIFY._ext = []
    
    _all_ = [
        _Ver2_SUPLNOTIFY_notification,
        Ver2_SUPLNOTIFY,
    ]

class SUPL_NOTIFY_RESPONSE:

    _name_  = u'SUPL-NOTIFY-RESPONSE'
    _oid_   = []
    
    _obj_ = [
        u'Ver2-SUPLNOTIFYRESPONSE',
        u'NotificationResponse',
        ]
    _type_ = [
        u'Ver2-SUPLNOTIFYRESPONSE',
        u'NotificationResponse',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Ver2-SUPLNOTIFYRESPONSE >-----#
    Ver2_SUPLNOTIFYRESPONSE = SEQ(name=u'Ver2-SUPLNOTIFYRESPONSE', mode=MODE_TYPE)
    _Ver2_SUPLNOTIFYRESPONSE_notificationResponse = ENUM(name=u'notificationResponse', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-NOTIFY-RESPONSE', 'NotificationResponse')), opt=True)
    Ver2_SUPLNOTIFYRESPONSE._cont = ASN1Dict([
        (u'notificationResponse', _Ver2_SUPLNOTIFYRESPONSE_notificationResponse),
        ])
    Ver2_SUPLNOTIFYRESPONSE._ext = []
    
    #-----< NotificationResponse >-----#
    NotificationResponse = ENUM(name=u'NotificationResponse', mode=MODE_TYPE)
    NotificationResponse._cont = ASN1Dict([(u'allowed', 0), (u'notAllowed', 1)])
    NotificationResponse._ext = []
    
    _all_ = [
        _Ver2_SUPLNOTIFYRESPONSE_notificationResponse,
        Ver2_SUPLNOTIFYRESPONSE,
        NotificationResponse,
    ]

class SUPL_SET_INIT:

    _name_  = u'SUPL-SET-INIT'
    _oid_   = []
    
    _obj_ = [
        u'Ver2-SUPLSETINIT',
        ]
    _type_ = [
        u'Ver2-SUPLSETINIT',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Ver2-SUPLSETINIT >-----#
    Ver2_SUPLSETINIT = SEQ(name=u'Ver2-SUPLSETINIT', mode=MODE_TYPE)
    _Ver2_SUPLSETINIT_targetSETID = CHOICE(name=u'targetSETID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ULP-Components', 'SETId')))
    _Ver2_SUPLSETINIT_qoP = SEQ(name=u'qoP', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'QoP')), opt=True)
    _Ver2_SUPLSETINIT_applicationID = SEQ(name=u'applicationID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'ApplicationID')), opt=True)
    Ver2_SUPLSETINIT._cont = ASN1Dict([
        (u'targetSETID', _Ver2_SUPLSETINIT_targetSETID),
        (u'qoP', _Ver2_SUPLSETINIT_qoP),
        (u'applicationID', _Ver2_SUPLSETINIT_applicationID),
        ])
    Ver2_SUPLSETINIT._ext = []
    
    _all_ = [
        _Ver2_SUPLSETINIT_targetSETID,
        _Ver2_SUPLSETINIT_qoP,
        _Ver2_SUPLSETINIT_applicationID,
        Ver2_SUPLSETINIT,
    ]

class SUPL_TRIGGERED_START:

    _name_  = u'SUPL-TRIGGERED-START'
    _oid_   = []
    
    _obj_ = [
        u'Ver2-SUPLTRIGGEREDSTART',
        u'TriggerType',
        u'TriggerParams',
        u'PeriodicParams',
        u'AreaEventParams',
        u'AreaEventType',
        u'RepeatedReportingParams',
        u'GeographicTargetAreaList',
        u'GeographicTargetArea',
        u'AreaIdList',
        u'AreaIdSet',
        u'AreaId',
        u'GSMAreaId',
        u'WCDMAAreaId',
        u'CDMAAreaId',
        u'HRPDAreaId',
        u'UMBAreaId',
        u'LTEAreaId',
        u'WLANAreaId',
        u'WimaxAreaId',
        u'AreaIdSetType',
        u'GeoAreaMappingList',
        u'GeoAreaIndex',
        u'maxNumGeoArea',
        u'maxAreaId',
        u'maxAreaIdList',
        ]
    _type_ = [
        u'Ver2-SUPLTRIGGEREDSTART',
        u'TriggerType',
        u'TriggerParams',
        u'PeriodicParams',
        u'AreaEventParams',
        u'AreaEventType',
        u'RepeatedReportingParams',
        u'GeographicTargetAreaList',
        u'GeographicTargetArea',
        u'AreaIdList',
        u'AreaIdSet',
        u'AreaId',
        u'GSMAreaId',
        u'WCDMAAreaId',
        u'CDMAAreaId',
        u'HRPDAreaId',
        u'UMBAreaId',
        u'LTEAreaId',
        u'WLANAreaId',
        u'WimaxAreaId',
        u'AreaIdSetType',
        u'GeoAreaMappingList',
        u'GeoAreaIndex',
        ]
    _set_ = [
        ]
    _val_ = [
        u'maxNumGeoArea',
        u'maxAreaId',
        u'maxAreaIdList',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Ver2-SUPLTRIGGEREDSTART >-----#
    Ver2_SUPLTRIGGEREDSTART = SEQ(name=u'Ver2-SUPLTRIGGEREDSTART', mode=MODE_TYPE)
    _Ver2_SUPLTRIGGEREDSTART_sETCapabilities = SEQ(name=u'sETCapabilities', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-START', 'SETCapabilities')))
    _Ver2_SUPLTRIGGEREDSTART_locationId = SEQ(name=u'locationId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'LocationId')))
    _Ver2_SUPLTRIGGEREDSTART_ver = BIT_STR(name=u'ver', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'Ver')), opt=True)
    _Ver2_SUPLTRIGGEREDSTART_qoP = SEQ(name=u'qoP', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'QoP')), opt=True)
    _Ver2_SUPLTRIGGEREDSTART_multipleLocationIds = SEQ_OF(name=u'multipleLocationIds', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'MultipleLocationIds')), opt=True)
    _Ver2_SUPLTRIGGEREDSTART_thirdParty = SEQ_OF(name=u'thirdParty', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'ThirdParty')), opt=True)
    _Ver2_SUPLTRIGGEREDSTART_applicationID = SEQ(name=u'applicationID', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'ApplicationID')), opt=True)
    _Ver2_SUPLTRIGGEREDSTART_triggerType = ENUM(name=u'triggerType', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'TriggerType')), opt=True)
    _Ver2_SUPLTRIGGEREDSTART_triggerParams = CHOICE(name=u'triggerParams', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'TriggerParams')), opt=True)
    _Ver2_SUPLTRIGGEREDSTART_position = SEQ(name=u'position', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'Position')), opt=True)
    _Ver2_SUPLTRIGGEREDSTART_reportingCap = SEQ(name=u'reportingCap', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'ReportingCap')), opt=True)
    _Ver2_SUPLTRIGGEREDSTART_causeCode = ENUM(name=u'causeCode', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'CauseCode')), opt=True)
    Ver2_SUPLTRIGGEREDSTART._cont = ASN1Dict([
        (u'sETCapabilities', _Ver2_SUPLTRIGGEREDSTART_sETCapabilities),
        (u'locationId', _Ver2_SUPLTRIGGEREDSTART_locationId),
        (u'ver', _Ver2_SUPLTRIGGEREDSTART_ver),
        (u'qoP', _Ver2_SUPLTRIGGEREDSTART_qoP),
        (u'multipleLocationIds', _Ver2_SUPLTRIGGEREDSTART_multipleLocationIds),
        (u'thirdParty', _Ver2_SUPLTRIGGEREDSTART_thirdParty),
        (u'applicationID', _Ver2_SUPLTRIGGEREDSTART_applicationID),
        (u'triggerType', _Ver2_SUPLTRIGGEREDSTART_triggerType),
        (u'triggerParams', _Ver2_SUPLTRIGGEREDSTART_triggerParams),
        (u'position', _Ver2_SUPLTRIGGEREDSTART_position),
        (u'reportingCap', _Ver2_SUPLTRIGGEREDSTART_reportingCap),
        (u'causeCode', _Ver2_SUPLTRIGGEREDSTART_causeCode),
        ])
    Ver2_SUPLTRIGGEREDSTART._ext = []
    
    #-----< TriggerType >-----#
    TriggerType = ENUM(name=u'TriggerType', mode=MODE_TYPE)
    TriggerType._cont = ASN1Dict([(u'periodic', 0), (u'areaEvent', 1)])
    TriggerType._ext = []
    
    #-----< TriggerParams >-----#
    TriggerParams = CHOICE(name=u'TriggerParams', mode=MODE_TYPE)
    _TriggerParams_periodicParams = SEQ(name=u'periodicParams', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'PeriodicParams')))
    _TriggerParams_areaEventParams = SEQ(name=u'areaEventParams', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'AreaEventParams')))
    TriggerParams._cont = ASN1Dict([
        (u'periodicParams', _TriggerParams_periodicParams),
        (u'areaEventParams', _TriggerParams_areaEventParams),
        ])
    TriggerParams._ext = []
    
    #-----< PeriodicParams >-----#
    PeriodicParams = SEQ(name=u'PeriodicParams', mode=MODE_TYPE)
    _PeriodicParams_numberOfFixes = INT(name=u'numberOfFixes', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PeriodicParams_numberOfFixes._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8639999)], ev=None, er=[])
    _PeriodicParams_intervalBetweenFixes = INT(name=u'intervalBetweenFixes', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PeriodicParams_intervalBetweenFixes._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8639999)], ev=None, er=[])
    _PeriodicParams_startTime = INT(name=u'startTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PeriodicParams_startTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2678400)], ev=None, er=[])
    PeriodicParams._cont = ASN1Dict([
        (u'numberOfFixes', _PeriodicParams_numberOfFixes),
        (u'intervalBetweenFixes', _PeriodicParams_intervalBetweenFixes),
        (u'startTime', _PeriodicParams_startTime),
        ])
    PeriodicParams._ext = []
    
    #-----< AreaEventParams >-----#
    AreaEventParams = SEQ(name=u'AreaEventParams', mode=MODE_TYPE)
    _AreaEventParams_areaEventType = ENUM(name=u'areaEventType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'AreaEventType')))
    _AreaEventParams_locationEstimate = BOOL(name=u'locationEstimate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AreaEventParams_repeatedReportingParams = SEQ(name=u'repeatedReportingParams', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'RepeatedReportingParams')), opt=True)
    _AreaEventParams_startTime = INT(name=u'startTime', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _AreaEventParams_startTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2678400)], ev=None, er=[])
    _AreaEventParams_stopTime = INT(name=u'stopTime', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _AreaEventParams_stopTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=11318399)], ev=None, er=[])
    _AreaEventParams_geographicTargetAreaList = SEQ_OF(name=u'geographicTargetAreaList', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'GeographicTargetAreaList')), opt=True)
    _AreaEventParams_areaIdLists = SEQ_OF(name=u'areaIdLists', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __AreaEventParams_areaIdLists__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'AreaIdList')))
    _AreaEventParams_areaIdLists._cont = __AreaEventParams_areaIdLists__item_
    _AreaEventParams_areaIdLists._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    AreaEventParams._cont = ASN1Dict([
        (u'areaEventType', _AreaEventParams_areaEventType),
        (u'locationEstimate', _AreaEventParams_locationEstimate),
        (u'repeatedReportingParams', _AreaEventParams_repeatedReportingParams),
        (u'startTime', _AreaEventParams_startTime),
        (u'stopTime', _AreaEventParams_stopTime),
        (u'geographicTargetAreaList', _AreaEventParams_geographicTargetAreaList),
        (u'areaIdLists', _AreaEventParams_areaIdLists),
        ])
    AreaEventParams._ext = []
    
    #-----< AreaEventType >-----#
    AreaEventType = ENUM(name=u'AreaEventType', mode=MODE_TYPE)
    AreaEventType._cont = ASN1Dict([(u'enteringArea', 0), (u'insideArea', 1), (u'outsideArea', 2), (u'leavingArea', 3)])
    AreaEventType._ext = []
    
    #-----< RepeatedReportingParams >-----#
    RepeatedReportingParams = SEQ(name=u'RepeatedReportingParams', mode=MODE_TYPE)
    _RepeatedReportingParams_minimumIntervalTime = INT(name=u'minimumIntervalTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RepeatedReportingParams_minimumIntervalTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=604800)], ev=None, er=[])
    _RepeatedReportingParams_maximumNumberOfReports = INT(name=u'maximumNumberOfReports', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RepeatedReportingParams_maximumNumberOfReports._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1024)], ev=None, er=[])
    RepeatedReportingParams._cont = ASN1Dict([
        (u'minimumIntervalTime', _RepeatedReportingParams_minimumIntervalTime),
        (u'maximumNumberOfReports', _RepeatedReportingParams_maximumNumberOfReports),
        ])
    RepeatedReportingParams._ext = []
    
    #-----< GeographicTargetAreaList >-----#
    GeographicTargetAreaList = SEQ_OF(name=u'GeographicTargetAreaList', mode=MODE_TYPE)
    _GeographicTargetAreaList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'GeographicTargetArea')))
    GeographicTargetAreaList._cont = _GeographicTargetAreaList__item_
    GeographicTargetAreaList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< GeographicTargetArea >-----#
    GeographicTargetArea = CHOICE(name=u'GeographicTargetArea', mode=MODE_TYPE)
    _GeographicTargetArea_circularArea = SEQ(name=u'circularArea', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'CircularArea')))
    _GeographicTargetArea_ellipticalArea = SEQ(name=u'ellipticalArea', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'EllipticalArea')))
    _GeographicTargetArea_polygonArea = SEQ(name=u'polygonArea', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'PolygonArea')))
    GeographicTargetArea._cont = ASN1Dict([
        (u'circularArea', _GeographicTargetArea_circularArea),
        (u'ellipticalArea', _GeographicTargetArea_ellipticalArea),
        (u'polygonArea', _GeographicTargetArea_polygonArea),
        ])
    GeographicTargetArea._ext = []
    
    #-----< AreaIdList >-----#
    AreaIdList = SEQ(name=u'AreaIdList', mode=MODE_TYPE)
    _AreaIdList_areaIdSet = SEQ_OF(name=u'areaIdSet', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'AreaIdSet')))
    _AreaIdList_areaIdSetType = ENUM(name=u'areaIdSetType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'AreaIdSetType')), opt=True)
    _AreaIdList_geoAreaMappingList = SEQ_OF(name=u'geoAreaMappingList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'GeoAreaMappingList')), opt=True)
    AreaIdList._cont = ASN1Dict([
        (u'areaIdSet', _AreaIdList_areaIdSet),
        (u'areaIdSetType', _AreaIdList_areaIdSetType),
        (u'geoAreaMappingList', _AreaIdList_geoAreaMappingList),
        ])
    AreaIdList._ext = None
    
    #-----< AreaIdSet >-----#
    AreaIdSet = SEQ_OF(name=u'AreaIdSet', mode=MODE_TYPE)
    _AreaIdSet__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'AreaId')))
    AreaIdSet._cont = _AreaIdSet__item_
    AreaIdSet._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    
    #-----< AreaId >-----#
    AreaId = CHOICE(name=u'AreaId', mode=MODE_TYPE)
    _AreaId_gSMAreaId = SEQ(name=u'gSMAreaId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'GSMAreaId')))
    _AreaId_wCDMAAreaId = SEQ(name=u'wCDMAAreaId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'WCDMAAreaId')))
    _AreaId_cDMAAreaId = SEQ(name=u'cDMAAreaId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'CDMAAreaId')))
    _AreaId_hRPDAreaId = SEQ(name=u'hRPDAreaId', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'HRPDAreaId')))
    _AreaId_uMBAreaId = SEQ(name=u'uMBAreaId', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'UMBAreaId')))
    _AreaId_lTEAreaId = SEQ(name=u'lTEAreaId', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'LTEAreaId')))
    _AreaId_wLANAreaId = SEQ(name=u'wLANAreaId', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'WLANAreaId')))
    _AreaId_wiMAXAreaId = SEQ(name=u'wiMAXAreaId', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'WimaxAreaId')))
    AreaId._cont = ASN1Dict([
        (u'gSMAreaId', _AreaId_gSMAreaId),
        (u'wCDMAAreaId', _AreaId_wCDMAAreaId),
        (u'cDMAAreaId', _AreaId_cDMAAreaId),
        (u'hRPDAreaId', _AreaId_hRPDAreaId),
        (u'uMBAreaId', _AreaId_uMBAreaId),
        (u'lTEAreaId', _AreaId_lTEAreaId),
        (u'wLANAreaId', _AreaId_wLANAreaId),
        (u'wiMAXAreaId', _AreaId_wiMAXAreaId),
        ])
    AreaId._ext = []
    
    #-----< GSMAreaId >-----#
    GSMAreaId = SEQ(name=u'GSMAreaId', mode=MODE_TYPE)
    _GSMAreaId_refMCC = INT(name=u'refMCC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GSMAreaId_refMCC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=999)], ev=None, er=[])
    _GSMAreaId_refMNC = INT(name=u'refMNC', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GSMAreaId_refMNC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=999)], ev=None, er=[])
    _GSMAreaId_refLAC = INT(name=u'refLAC', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GSMAreaId_refLAC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _GSMAreaId_refCI = INT(name=u'refCI', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GSMAreaId_refCI._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    GSMAreaId._cont = ASN1Dict([
        (u'refMCC', _GSMAreaId_refMCC),
        (u'refMNC', _GSMAreaId_refMNC),
        (u'refLAC', _GSMAreaId_refLAC),
        (u'refCI', _GSMAreaId_refCI),
        ])
    GSMAreaId._ext = []
    
    #-----< WCDMAAreaId >-----#
    WCDMAAreaId = SEQ(name=u'WCDMAAreaId', mode=MODE_TYPE)
    _WCDMAAreaId_refMCC = INT(name=u'refMCC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WCDMAAreaId_refMCC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=999)], ev=None, er=[])
    _WCDMAAreaId_refMNC = INT(name=u'refMNC', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WCDMAAreaId_refMNC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=999)], ev=None, er=[])
    _WCDMAAreaId_refLAC = INT(name=u'refLAC', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WCDMAAreaId_refLAC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _WCDMAAreaId_refUC = INT(name=u'refUC', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WCDMAAreaId_refUC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=268435455)], ev=None, er=[])
    WCDMAAreaId._cont = ASN1Dict([
        (u'refMCC', _WCDMAAreaId_refMCC),
        (u'refMNC', _WCDMAAreaId_refMNC),
        (u'refLAC', _WCDMAAreaId_refLAC),
        (u'refUC', _WCDMAAreaId_refUC),
        ])
    WCDMAAreaId._ext = []
    
    #-----< CDMAAreaId >-----#
    CDMAAreaId = SEQ(name=u'CDMAAreaId', mode=MODE_TYPE)
    _CDMAAreaId_refSID = INT(name=u'refSID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CDMAAreaId_refSID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _CDMAAreaId_refNID = INT(name=u'refNID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CDMAAreaId_refNID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    _CDMAAreaId_refBASEID = INT(name=u'refBASEID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CDMAAreaId_refBASEID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    CDMAAreaId._cont = ASN1Dict([
        (u'refSID', _CDMAAreaId_refSID),
        (u'refNID', _CDMAAreaId_refNID),
        (u'refBASEID', _CDMAAreaId_refBASEID),
        ])
    CDMAAreaId._ext = []
    
    #-----< HRPDAreaId >-----#
    HRPDAreaId = SEQ(name=u'HRPDAreaId', mode=MODE_TYPE)
    _HRPDAreaId_refSECTORID = BIT_STR(name=u'refSECTORID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HRPDAreaId_refSECTORID._const_sz = ASN1Set(rv=[128], rr=[], ev=None, er=[])
    HRPDAreaId._cont = ASN1Dict([
        (u'refSECTORID', _HRPDAreaId_refSECTORID),
        ])
    HRPDAreaId._ext = []
    
    #-----< UMBAreaId >-----#
    UMBAreaId = SEQ(name=u'UMBAreaId', mode=MODE_TYPE)
    _UMBAreaId_refMCC = INT(name=u'refMCC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UMBAreaId_refMCC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=999)], ev=None, er=[])
    _UMBAreaId_refMNC = INT(name=u'refMNC', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UMBAreaId_refMNC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=999)], ev=None, er=[])
    _UMBAreaId_refSECTORID = BIT_STR(name=u'refSECTORID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UMBAreaId_refSECTORID._const_sz = ASN1Set(rv=[128], rr=[], ev=None, er=[])
    UMBAreaId._cont = ASN1Dict([
        (u'refMCC', _UMBAreaId_refMCC),
        (u'refMNC', _UMBAreaId_refMNC),
        (u'refSECTORID', _UMBAreaId_refSECTORID),
        ])
    UMBAreaId._ext = []
    
    #-----< LTEAreaId >-----#
    LTEAreaId = SEQ(name=u'LTEAreaId', mode=MODE_TYPE)
    _LTEAreaId_refMCC = INT(name=u'refMCC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LTEAreaId_refMCC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=999)], ev=None, er=[])
    _LTEAreaId_refMNC = INT(name=u'refMNC', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LTEAreaId_refMNC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=999)], ev=None, er=[])
    _LTEAreaId_refCI = BIT_STR(name=u'refCI', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LTEAreaId_refCI._const_sz = ASN1Set(rv=[29], rr=[], ev=None, er=[])
    LTEAreaId._cont = ASN1Dict([
        (u'refMCC', _LTEAreaId_refMCC),
        (u'refMNC', _LTEAreaId_refMNC),
        (u'refCI', _LTEAreaId_refCI),
        ])
    LTEAreaId._ext = []
    
    #-----< WLANAreaId >-----#
    WLANAreaId = SEQ(name=u'WLANAreaId', mode=MODE_TYPE)
    _WLANAreaId_apMACAddress = BIT_STR(name=u'apMACAddress', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _WLANAreaId_apMACAddress._const_sz = ASN1Set(rv=[48], rr=[], ev=None, er=[])
    WLANAreaId._cont = ASN1Dict([
        (u'apMACAddress', _WLANAreaId_apMACAddress),
        ])
    WLANAreaId._ext = []
    
    #-----< WimaxAreaId >-----#
    WimaxAreaId = SEQ(name=u'WimaxAreaId', mode=MODE_TYPE)
    _WimaxAreaId_bsID_MSB = BIT_STR(name=u'bsID-MSB', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WimaxAreaId_bsID_MSB._const_sz = ASN1Set(rv=[24], rr=[], ev=None, er=[])
    _WimaxAreaId_bsID_LSB = BIT_STR(name=u'bsID-LSB', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _WimaxAreaId_bsID_LSB._const_sz = ASN1Set(rv=[24], rr=[], ev=None, er=[])
    WimaxAreaId._cont = ASN1Dict([
        (u'bsID-MSB', _WimaxAreaId_bsID_MSB),
        (u'bsID-LSB', _WimaxAreaId_bsID_LSB),
        ])
    WimaxAreaId._ext = None
    
    #-----< AreaIdSetType >-----#
    AreaIdSetType = ENUM(name=u'AreaIdSetType', mode=MODE_TYPE)
    AreaIdSetType._cont = ASN1Dict([(u'border', 0), (u'within', 1)])
    AreaIdSetType._ext = []
    
    #-----< GeoAreaMappingList >-----#
    GeoAreaMappingList = SEQ_OF(name=u'GeoAreaMappingList', mode=MODE_TYPE)
    _GeoAreaMappingList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'GeoAreaIndex')))
    GeoAreaMappingList._cont = _GeoAreaMappingList__item_
    GeoAreaMappingList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< GeoAreaIndex >-----#
    GeoAreaIndex = INT(name=u'GeoAreaIndex', mode=MODE_TYPE)
    GeoAreaIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< maxNumGeoArea >-----#
    maxNumGeoArea = INT(name=u'maxNumGeoArea', mode=MODE_VALUE)
    maxNumGeoArea._val = 32
    
    #-----< maxAreaId >-----#
    maxAreaId = INT(name=u'maxAreaId', mode=MODE_VALUE)
    maxAreaId._val = 256
    
    #-----< maxAreaIdList >-----#
    maxAreaIdList = INT(name=u'maxAreaIdList', mode=MODE_VALUE)
    maxAreaIdList._val = 32
    
    _all_ = [
        _Ver2_SUPLTRIGGEREDSTART_sETCapabilities,
        _Ver2_SUPLTRIGGEREDSTART_locationId,
        _Ver2_SUPLTRIGGEREDSTART_ver,
        _Ver2_SUPLTRIGGEREDSTART_qoP,
        _Ver2_SUPLTRIGGEREDSTART_multipleLocationIds,
        _Ver2_SUPLTRIGGEREDSTART_thirdParty,
        _Ver2_SUPLTRIGGEREDSTART_applicationID,
        _Ver2_SUPLTRIGGEREDSTART_triggerType,
        _Ver2_SUPLTRIGGEREDSTART_triggerParams,
        _Ver2_SUPLTRIGGEREDSTART_position,
        _Ver2_SUPLTRIGGEREDSTART_reportingCap,
        _Ver2_SUPLTRIGGEREDSTART_causeCode,
        Ver2_SUPLTRIGGEREDSTART,
        TriggerType,
        _TriggerParams_periodicParams,
        _TriggerParams_areaEventParams,
        TriggerParams,
        _PeriodicParams_numberOfFixes,
        _PeriodicParams_intervalBetweenFixes,
        _PeriodicParams_startTime,
        PeriodicParams,
        _AreaEventParams_areaEventType,
        _AreaEventParams_locationEstimate,
        _AreaEventParams_repeatedReportingParams,
        _AreaEventParams_startTime,
        _AreaEventParams_stopTime,
        _AreaEventParams_geographicTargetAreaList,
        __AreaEventParams_areaIdLists__item_,
        _AreaEventParams_areaIdLists,
        AreaEventParams,
        AreaEventType,
        _RepeatedReportingParams_minimumIntervalTime,
        _RepeatedReportingParams_maximumNumberOfReports,
        RepeatedReportingParams,
        _GeographicTargetAreaList__item_,
        GeographicTargetAreaList,
        _GeographicTargetArea_circularArea,
        _GeographicTargetArea_ellipticalArea,
        _GeographicTargetArea_polygonArea,
        GeographicTargetArea,
        _AreaIdList_areaIdSet,
        _AreaIdList_areaIdSetType,
        _AreaIdList_geoAreaMappingList,
        AreaIdList,
        _AreaIdSet__item_,
        AreaIdSet,
        _AreaId_gSMAreaId,
        _AreaId_wCDMAAreaId,
        _AreaId_cDMAAreaId,
        _AreaId_hRPDAreaId,
        _AreaId_uMBAreaId,
        _AreaId_lTEAreaId,
        _AreaId_wLANAreaId,
        _AreaId_wiMAXAreaId,
        AreaId,
        _GSMAreaId_refMCC,
        _GSMAreaId_refMNC,
        _GSMAreaId_refLAC,
        _GSMAreaId_refCI,
        GSMAreaId,
        _WCDMAAreaId_refMCC,
        _WCDMAAreaId_refMNC,
        _WCDMAAreaId_refLAC,
        _WCDMAAreaId_refUC,
        WCDMAAreaId,
        _CDMAAreaId_refSID,
        _CDMAAreaId_refNID,
        _CDMAAreaId_refBASEID,
        CDMAAreaId,
        _HRPDAreaId_refSECTORID,
        HRPDAreaId,
        _UMBAreaId_refMCC,
        _UMBAreaId_refMNC,
        _UMBAreaId_refSECTORID,
        UMBAreaId,
        _LTEAreaId_refMCC,
        _LTEAreaId_refMNC,
        _LTEAreaId_refCI,
        LTEAreaId,
        _WLANAreaId_apMACAddress,
        WLANAreaId,
        _WimaxAreaId_bsID_MSB,
        _WimaxAreaId_bsID_LSB,
        WimaxAreaId,
        AreaIdSetType,
        _GeoAreaMappingList__item_,
        GeoAreaMappingList,
        GeoAreaIndex,
        maxNumGeoArea,
        maxAreaId,
        maxAreaIdList,
    ]

class SUPL_TRIGGERED_RESPONSE:

    _name_  = u'SUPL-TRIGGERED-RESPONSE'
    _oid_   = []
    
    _obj_ = [
        u'Ver2-SUPLTRIGGEREDRESPONSE',
        u'ReportingMode',
        u'RepModee',
        u'BatchRepConditions',
        u'BatchRepType',
        ]
    _type_ = [
        u'Ver2-SUPLTRIGGEREDRESPONSE',
        u'ReportingMode',
        u'RepModee',
        u'BatchRepConditions',
        u'BatchRepType',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Ver2-SUPLTRIGGEREDRESPONSE >-----#
    Ver2_SUPLTRIGGEREDRESPONSE = SEQ(name=u'Ver2-SUPLTRIGGEREDRESPONSE', mode=MODE_TYPE)
    _Ver2_SUPLTRIGGEREDRESPONSE_posMethod = ENUM(name=u'posMethod', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'PosMethod')))
    _Ver2_SUPLTRIGGEREDRESPONSE_triggerParams = CHOICE(name=u'triggerParams', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'TriggerParams')), opt=True)
    _Ver2_SUPLTRIGGEREDRESPONSE_sLPAddress = CHOICE(name=u'sLPAddress', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ULP-Components', 'SLPAddress')), opt=True)
    _Ver2_SUPLTRIGGEREDRESPONSE_supportedNetworkInformation = SEQ(name=u'supportedNetworkInformation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'SupportedNetworkInformation')), opt=True)
    _Ver2_SUPLTRIGGEREDRESPONSE_reportingMode = SEQ(name=u'reportingMode', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-RESPONSE', 'ReportingMode')), opt=True)
    _Ver2_SUPLTRIGGEREDRESPONSE_sPCSETKey = BIT_STR(name=u'sPCSETKey', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'SPCSETKey')), opt=True)
    _Ver2_SUPLTRIGGEREDRESPONSE_spctid = SEQ(name=u'spctid', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'SPCTID')), opt=True)
    _Ver2_SUPLTRIGGEREDRESPONSE_sPCSETKeylifetime = INT(name=u'sPCSETKeylifetime', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'SPCSETKeylifetime')), opt=True)
    _Ver2_SUPLTRIGGEREDRESPONSE_gnssPosTechnology = SEQ(name=u'gnssPosTechnology', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'GNSSPosTechnology')), opt=True)
    Ver2_SUPLTRIGGEREDRESPONSE._cont = ASN1Dict([
        (u'posMethod', _Ver2_SUPLTRIGGEREDRESPONSE_posMethod),
        (u'triggerParams', _Ver2_SUPLTRIGGEREDRESPONSE_triggerParams),
        (u'sLPAddress', _Ver2_SUPLTRIGGEREDRESPONSE_sLPAddress),
        (u'supportedNetworkInformation', _Ver2_SUPLTRIGGEREDRESPONSE_supportedNetworkInformation),
        (u'reportingMode', _Ver2_SUPLTRIGGEREDRESPONSE_reportingMode),
        (u'sPCSETKey', _Ver2_SUPLTRIGGEREDRESPONSE_sPCSETKey),
        (u'spctid', _Ver2_SUPLTRIGGEREDRESPONSE_spctid),
        (u'sPCSETKeylifetime', _Ver2_SUPLTRIGGEREDRESPONSE_sPCSETKeylifetime),
        (u'gnssPosTechnology', _Ver2_SUPLTRIGGEREDRESPONSE_gnssPosTechnology),
        ])
    Ver2_SUPLTRIGGEREDRESPONSE._ext = []
    
    #-----< ReportingMode >-----#
    ReportingMode = SEQ(name=u'ReportingMode', mode=MODE_TYPE)
    _ReportingMode_repMode = ENUM(name=u'repMode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-RESPONSE', 'RepModee')))
    _ReportingMode_batchRepConditions = CHOICE(name=u'batchRepConditions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-RESPONSE', 'BatchRepConditions')), opt=True)
    _ReportingMode_batchRepType = SEQ(name=u'batchRepType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-RESPONSE', 'BatchRepType')), opt=True)
    ReportingMode._cont = ASN1Dict([
        (u'repMode', _ReportingMode_repMode),
        (u'batchRepConditions', _ReportingMode_batchRepConditions),
        (u'batchRepType', _ReportingMode_batchRepType),
        ])
    ReportingMode._ext = []
    
    #-----< RepModee >-----#
    RepModee = ENUM(name=u'RepModee', mode=MODE_TYPE)
    RepModee._cont = ASN1Dict([(u'realtime', 1), (u'quasirealtime', 2), (u'batch', 3)])
    RepModee._ext = []
    
    #-----< BatchRepConditions >-----#
    BatchRepConditions = CHOICE(name=u'BatchRepConditions', mode=MODE_TYPE)
    _BatchRepConditions_num_interval = INT(name=u'num-interval', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BatchRepConditions_num_interval._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1024)], ev=None, er=[])
    _BatchRepConditions_num_minutes = INT(name=u'num-minutes', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BatchRepConditions_num_minutes._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2048)], ev=None, er=[])
    _BatchRepConditions_endofsession = NULL(name=u'endofsession', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    BatchRepConditions._cont = ASN1Dict([
        (u'num-interval', _BatchRepConditions_num_interval),
        (u'num-minutes', _BatchRepConditions_num_minutes),
        (u'endofsession', _BatchRepConditions_endofsession),
        ])
    BatchRepConditions._ext = []
    
    #-----< BatchRepType >-----#
    BatchRepType = SEQ(name=u'BatchRepType', mode=MODE_TYPE)
    _BatchRepType_reportPosition = BOOL(name=u'reportPosition', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BatchRepType_reportMeasurements = BOOL(name=u'reportMeasurements', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BatchRepType_intermediateReports = BOOL(name=u'intermediateReports', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BatchRepType_discardOldest = BOOL(name=u'discardOldest', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    BatchRepType._cont = ASN1Dict([
        (u'reportPosition', _BatchRepType_reportPosition),
        (u'reportMeasurements', _BatchRepType_reportMeasurements),
        (u'intermediateReports', _BatchRepType_intermediateReports),
        (u'discardOldest', _BatchRepType_discardOldest),
        ])
    BatchRepType._ext = []
    
    _all_ = [
        _Ver2_SUPLTRIGGEREDRESPONSE_posMethod,
        _Ver2_SUPLTRIGGEREDRESPONSE_triggerParams,
        _Ver2_SUPLTRIGGEREDRESPONSE_sLPAddress,
        _Ver2_SUPLTRIGGEREDRESPONSE_supportedNetworkInformation,
        _Ver2_SUPLTRIGGEREDRESPONSE_reportingMode,
        _Ver2_SUPLTRIGGEREDRESPONSE_sPCSETKey,
        _Ver2_SUPLTRIGGEREDRESPONSE_spctid,
        _Ver2_SUPLTRIGGEREDRESPONSE_sPCSETKeylifetime,
        _Ver2_SUPLTRIGGEREDRESPONSE_gnssPosTechnology,
        Ver2_SUPLTRIGGEREDRESPONSE,
        _ReportingMode_repMode,
        _ReportingMode_batchRepConditions,
        _ReportingMode_batchRepType,
        ReportingMode,
        RepModee,
        _BatchRepConditions_num_interval,
        _BatchRepConditions_num_minutes,
        _BatchRepConditions_endofsession,
        BatchRepConditions,
        _BatchRepType_reportPosition,
        _BatchRepType_reportMeasurements,
        _BatchRepType_intermediateReports,
        _BatchRepType_discardOldest,
        BatchRepType,
    ]

class SUPL_REPORT:

    _name_  = u'SUPL-REPORT'
    _oid_   = []
    
    _obj_ = [
        u'Ver2-SUPLREPORT',
        u'SessionList',
        u'SessionInformation',
        u'maxnumSessions',
        u'ReportDataList',
        u'ReportData',
        u'PositionData',
        u'GANSSsignalsInfo',
        u'GANSSSignalsDescription',
        u'ResultCode',
        u'TimeStamp',
        ]
    _type_ = [
        u'Ver2-SUPLREPORT',
        u'SessionList',
        u'SessionInformation',
        u'ReportDataList',
        u'ReportData',
        u'PositionData',
        u'GANSSsignalsInfo',
        u'GANSSSignalsDescription',
        u'ResultCode',
        u'TimeStamp',
        ]
    _set_ = [
        ]
    _val_ = [
        u'maxnumSessions',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Ver2-SUPLREPORT >-----#
    Ver2_SUPLREPORT = SEQ(name=u'Ver2-SUPLREPORT', mode=MODE_TYPE)
    _Ver2_SUPLREPORT_sessionList = SEQ_OF(name=u'sessionList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-REPORT', 'SessionList')), opt=True)
    _Ver2_SUPLREPORT_sETCapabilities = SEQ(name=u'sETCapabilities', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-START', 'SETCapabilities')), opt=True)
    _Ver2_SUPLREPORT_reportDataList = SEQ_OF(name=u'reportDataList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-REPORT', 'ReportDataList')), opt=True)
    _Ver2_SUPLREPORT_ver = BIT_STR(name=u'ver', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'Ver')), opt=True)
    _Ver2_SUPLREPORT_moreComponents = NULL(name=u'moreComponents', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Ver2_SUPLREPORT._cont = ASN1Dict([
        (u'sessionList', _Ver2_SUPLREPORT_sessionList),
        (u'sETCapabilities', _Ver2_SUPLREPORT_sETCapabilities),
        (u'reportDataList', _Ver2_SUPLREPORT_reportDataList),
        (u'ver', _Ver2_SUPLREPORT_ver),
        (u'moreComponents', _Ver2_SUPLREPORT_moreComponents),
        ])
    Ver2_SUPLREPORT._ext = []
    
    #-----< SessionList >-----#
    SessionList = SEQ_OF(name=u'SessionList', mode=MODE_TYPE)
    _SessionList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('SUPL-REPORT', 'SessionInformation')))
    SessionList._cont = _SessionList__item_
    SessionList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< SessionInformation >-----#
    SessionInformation = SEQ(name=u'SessionInformation', mode=MODE_TYPE)
    _SessionInformation_sessionID = SEQ(name=u'sessionID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'SessionID')))
    SessionInformation._cont = ASN1Dict([
        (u'sessionID', _SessionInformation_sessionID),
        ])
    SessionInformation._ext = []
    
    #-----< maxnumSessions >-----#
    maxnumSessions = INT(name=u'maxnumSessions', mode=MODE_VALUE)
    maxnumSessions._val = 64
    
    #-----< ReportDataList >-----#
    ReportDataList = SEQ_OF(name=u'ReportDataList', mode=MODE_TYPE)
    _ReportDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('SUPL-REPORT', 'ReportData')))
    ReportDataList._cont = _ReportDataList__item_
    ReportDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1024)], ev=None, er=[])
    
    #-----< ReportData >-----#
    ReportData = SEQ(name=u'ReportData', mode=MODE_TYPE)
    _ReportData_positionData = SEQ(name=u'positionData', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-REPORT', 'PositionData')), opt=True)
    _ReportData_multipleLocationIds = SEQ_OF(name=u'multipleLocationIds', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'MultipleLocationIds')), opt=True)
    _ReportData_resultCode = ENUM(name=u'resultCode', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-REPORT', 'ResultCode')), opt=True)
    _ReportData_timestamp = CHOICE(name=u'timestamp', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('SUPL-REPORT', 'TimeStamp')), opt=True)
    ReportData._cont = ASN1Dict([
        (u'positionData', _ReportData_positionData),
        (u'multipleLocationIds', _ReportData_multipleLocationIds),
        (u'resultCode', _ReportData_resultCode),
        (u'timestamp', _ReportData_timestamp),
        ])
    ReportData._ext = []
    
    #-----< PositionData >-----#
    PositionData = SEQ(name=u'PositionData', mode=MODE_TYPE)
    _PositionData_position = SEQ(name=u'position', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'Position')))
    _PositionData_posMethod = ENUM(name=u'posMethod', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'PosMethod')), opt=True)
    _PositionData_gnssPosTechnology = SEQ(name=u'gnssPosTechnology', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'GNSSPosTechnology')), opt=True)
    _PositionData_ganssSignalsInfo = SEQ_OF(name=u'ganssSignalsInfo', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-REPORT', 'GANSSsignalsInfo')), opt=True)
    PositionData._cont = ASN1Dict([
        (u'position', _PositionData_position),
        (u'posMethod', _PositionData_posMethod),
        (u'gnssPosTechnology', _PositionData_gnssPosTechnology),
        (u'ganssSignalsInfo', _PositionData_ganssSignalsInfo),
        ])
    PositionData._ext = []
    
    #-----< GANSSsignalsInfo >-----#
    GANSSsignalsInfo = SEQ_OF(name=u'GANSSsignalsInfo', mode=MODE_TYPE)
    _GANSSsignalsInfo__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('SUPL-REPORT', 'GANSSSignalsDescription')))
    GANSSsignalsInfo._cont = _GANSSsignalsInfo__item_
    GANSSsignalsInfo._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< GANSSSignalsDescription >-----#
    GANSSSignalsDescription = SEQ(name=u'GANSSSignalsDescription', mode=MODE_TYPE)
    _GANSSSignalsDescription_ganssId = INT(name=u'ganssId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSSignalsDescription_ganssId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _GANSSSignalsDescription_gANSSSignals = BIT_STR(name=u'gANSSSignals', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'GANSSSignals')))
    GANSSSignalsDescription._cont = ASN1Dict([
        (u'ganssId', _GANSSSignalsDescription_ganssId),
        (u'gANSSSignals', _GANSSSignalsDescription_gANSSSignals),
        ])
    GANSSSignalsDescription._ext = []
    
    #-----< ResultCode >-----#
    ResultCode = ENUM(name=u'ResultCode', mode=MODE_TYPE)
    ResultCode._cont = ASN1Dict([(u'outofradiocoverage', 1), (u'noposition', 2), (u'nomeasurement', 3), (u'nopositionnomeasurement', 4), (u'outofmemory', 5), (u'outofmemoryintermediatereporting', 6), (u'other', 7)])
    ResultCode._ext = []
    
    #-----< TimeStamp >-----#
    TimeStamp = CHOICE(name=u'TimeStamp', mode=MODE_TYPE)
    _TimeStamp_absoluteTime = TIME_UTC(name=u'absoluteTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TimeStamp_relativeTime = INT(name=u'relativeTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TimeStamp_relativeTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31536000)], ev=None, er=[])
    TimeStamp._cont = ASN1Dict([
        (u'absoluteTime', _TimeStamp_absoluteTime),
        (u'relativeTime', _TimeStamp_relativeTime),
        ])
    TimeStamp._ext = None
    
    _all_ = [
        _Ver2_SUPLREPORT_sessionList,
        _Ver2_SUPLREPORT_sETCapabilities,
        _Ver2_SUPLREPORT_reportDataList,
        _Ver2_SUPLREPORT_ver,
        _Ver2_SUPLREPORT_moreComponents,
        Ver2_SUPLREPORT,
        _SessionList__item_,
        SessionList,
        _SessionInformation_sessionID,
        SessionInformation,
        maxnumSessions,
        _ReportDataList__item_,
        ReportDataList,
        _ReportData_positionData,
        _ReportData_multipleLocationIds,
        _ReportData_resultCode,
        _ReportData_timestamp,
        ReportData,
        _PositionData_position,
        _PositionData_posMethod,
        _PositionData_gnssPosTechnology,
        _PositionData_ganssSignalsInfo,
        PositionData,
        _GANSSsignalsInfo__item_,
        GANSSsignalsInfo,
        _GANSSSignalsDescription_ganssId,
        _GANSSSignalsDescription_gANSSSignals,
        GANSSSignalsDescription,
        ResultCode,
        _TimeStamp_absoluteTime,
        _TimeStamp_relativeTime,
        TimeStamp,
    ]

class SUPL_TRIGGERED_STOP:

    _name_  = u'SUPL-TRIGGERED-STOP'
    _oid_   = []
    
    _obj_ = [
        u'Ver2-SUPLTRIGGEREDSTOP',
        ]
    _type_ = [
        u'Ver2-SUPLTRIGGEREDSTOP',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Ver2-SUPLTRIGGEREDSTOP >-----#
    Ver2_SUPLTRIGGEREDSTOP = SEQ(name=u'Ver2-SUPLTRIGGEREDSTOP', mode=MODE_TYPE)
    _Ver2_SUPLTRIGGEREDSTOP_statusCode = ENUM(name=u'statusCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'StatusCode')), opt=True)
    Ver2_SUPLTRIGGEREDSTOP._cont = ASN1Dict([
        (u'statusCode', _Ver2_SUPLTRIGGEREDSTOP_statusCode),
        ])
    Ver2_SUPLTRIGGEREDSTOP._ext = []
    
    _all_ = [
        _Ver2_SUPLTRIGGEREDSTOP_statusCode,
        Ver2_SUPLTRIGGEREDSTOP,
    ]

class ULP_Version_2_message_extensions:

    _name_  = u'ULP-Version-2-message-extensions'
    _oid_   = []
    
    _obj_ = [
        u'Ver2-SUPL-INIT-extension',
        u'NotificationMode',
        u'HistoricReporting',
        u'AllowedReportingType',
        u'ReportingCriteria',
        u'TimeWindow',
        u'ProtectionLevel',
        u'ProtLevel',
        u'BasicProtectionParams',
        u'Ver2-SUPL-START-extension',
        u'Ver2-SUPL-RESPONSE-extension',
        u'Ver2-SUPL-POS-INIT-extension',
        u'Ver2-SUPL-POS-extension',
        u'Ver2-SUPL-END-extension',
        ]
    _type_ = [
        u'Ver2-SUPL-INIT-extension',
        u'NotificationMode',
        u'HistoricReporting',
        u'AllowedReportingType',
        u'ReportingCriteria',
        u'TimeWindow',
        u'ProtectionLevel',
        u'ProtLevel',
        u'BasicProtectionParams',
        u'Ver2-SUPL-START-extension',
        u'Ver2-SUPL-RESPONSE-extension',
        u'Ver2-SUPL-POS-INIT-extension',
        u'Ver2-SUPL-POS-extension',
        u'Ver2-SUPL-END-extension',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Ver2-SUPL-INIT-extension >-----#
    Ver2_SUPL_INIT_extension = SEQ(name=u'Ver2-SUPL-INIT-extension', mode=MODE_TYPE)
    _Ver2_SUPL_INIT_extension_notificationMode = ENUM(name=u'notificationMode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-message-extensions', 'NotificationMode')), opt=True)
    _Ver2_SUPL_INIT_extension_supportedNetworkInformation = SEQ(name=u'supportedNetworkInformation', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'SupportedNetworkInformation')), opt=True)
    _Ver2_SUPL_INIT_extension_triggerType = ENUM(name=u'triggerType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'TriggerType')), opt=True)
    _Ver2_SUPL_INIT_extension_e_SLPAddress = CHOICE(name=u'e-SLPAddress', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ULP-Components', 'SLPAddress')), opt=True)
    _Ver2_SUPL_INIT_extension_historicReporting = SEQ(name=u'historicReporting', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-message-extensions', 'HistoricReporting')), opt=True)
    _Ver2_SUPL_INIT_extension_protectionLevel = SEQ(name=u'protectionLevel', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-message-extensions', 'ProtectionLevel')), opt=True)
    _Ver2_SUPL_INIT_extension_gnssPosTechnology = SEQ(name=u'gnssPosTechnology', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'GNSSPosTechnology')), opt=True)
    _Ver2_SUPL_INIT_extension_minimumMajorVersion = INT(name=u'minimumMajorVersion', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Ver2_SUPL_INIT_extension_minimumMajorVersion._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    Ver2_SUPL_INIT_extension._cont = ASN1Dict([
        (u'notificationMode', _Ver2_SUPL_INIT_extension_notificationMode),
        (u'supportedNetworkInformation', _Ver2_SUPL_INIT_extension_supportedNetworkInformation),
        (u'triggerType', _Ver2_SUPL_INIT_extension_triggerType),
        (u'e-SLPAddress', _Ver2_SUPL_INIT_extension_e_SLPAddress),
        (u'historicReporting', _Ver2_SUPL_INIT_extension_historicReporting),
        (u'protectionLevel', _Ver2_SUPL_INIT_extension_protectionLevel),
        (u'gnssPosTechnology', _Ver2_SUPL_INIT_extension_gnssPosTechnology),
        (u'minimumMajorVersion', _Ver2_SUPL_INIT_extension_minimumMajorVersion),
        ])
    Ver2_SUPL_INIT_extension._ext = []
    
    #-----< NotificationMode >-----#
    NotificationMode = ENUM(name=u'NotificationMode', mode=MODE_TYPE)
    NotificationMode._cont = ASN1Dict([(u'normal', 0), (u'basedOnLocation', 1)])
    NotificationMode._ext = []
    
    #-----< HistoricReporting >-----#
    HistoricReporting = SEQ(name=u'HistoricReporting', mode=MODE_TYPE)
    _HistoricReporting_allowedReportingType = ENUM(name=u'allowedReportingType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-message-extensions', 'AllowedReportingType')))
    _HistoricReporting_reportingCriteria = SEQ(name=u'reportingCriteria', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-message-extensions', 'ReportingCriteria')), opt=True)
    HistoricReporting._cont = ASN1Dict([
        (u'allowedReportingType', _HistoricReporting_allowedReportingType),
        (u'reportingCriteria', _HistoricReporting_reportingCriteria),
        ])
    HistoricReporting._ext = []
    
    #-----< AllowedReportingType >-----#
    AllowedReportingType = ENUM(name=u'AllowedReportingType', mode=MODE_TYPE)
    AllowedReportingType._cont = ASN1Dict([(u'positionsOnly', 0), (u'measurementsOnly', 1), (u'positionsAndMeasurements', 2)])
    AllowedReportingType._ext = []
    
    #-----< ReportingCriteria >-----#
    ReportingCriteria = SEQ(name=u'ReportingCriteria', mode=MODE_TYPE)
    _ReportingCriteria_timeWindow = SEQ(name=u'timeWindow', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-message-extensions', 'TimeWindow')), opt=True)
    _ReportingCriteria_maxNumberofReports = INT(name=u'maxNumberofReports', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ReportingCriteria_maxNumberofReports._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=65536)], ev=None, er=[])
    _ReportingCriteria_minTimeInterval = INT(name=u'minTimeInterval', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ReportingCriteria_minTimeInterval._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=86400)], ev=None, er=[])
    ReportingCriteria._cont = ASN1Dict([
        (u'timeWindow', _ReportingCriteria_timeWindow),
        (u'maxNumberofReports', _ReportingCriteria_maxNumberofReports),
        (u'minTimeInterval', _ReportingCriteria_minTimeInterval),
        ])
    ReportingCriteria._ext = []
    
    #-----< TimeWindow >-----#
    TimeWindow = SEQ(name=u'TimeWindow', mode=MODE_TYPE)
    _TimeWindow_startTime = INT(name=u'startTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TimeWindow_startTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-525600, ub=-1)], ev=None, er=[])
    _TimeWindow_stopTime = INT(name=u'stopTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TimeWindow_stopTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-525599, ub=0)], ev=None, er=[])
    TimeWindow._cont = ASN1Dict([
        (u'startTime', _TimeWindow_startTime),
        (u'stopTime', _TimeWindow_stopTime),
        ])
    TimeWindow._ext = None
    
    #-----< ProtectionLevel >-----#
    ProtectionLevel = SEQ(name=u'ProtectionLevel', mode=MODE_TYPE)
    _ProtectionLevel_protlevel = ENUM(name=u'protlevel', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-message-extensions', 'ProtLevel')))
    _ProtectionLevel_basicProtectionParams = SEQ(name=u'basicProtectionParams', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-message-extensions', 'BasicProtectionParams')), opt=True)
    ProtectionLevel._cont = ASN1Dict([
        (u'protlevel', _ProtectionLevel_protlevel),
        (u'basicProtectionParams', _ProtectionLevel_basicProtectionParams),
        ])
    ProtectionLevel._ext = []
    
    #-----< ProtLevel >-----#
    ProtLevel = ENUM(name=u'ProtLevel', mode=MODE_TYPE)
    ProtLevel._cont = ASN1Dict([(u'nullProtection', 0), (u'basicProtection', 1)])
    ProtLevel._ext = []
    
    #-----< BasicProtectionParams >-----#
    BasicProtectionParams = SEQ(name=u'BasicProtectionParams', mode=MODE_TYPE)
    _BasicProtectionParams_keyIdentifier = OCT_STR(name=u'keyIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BasicProtectionParams_keyIdentifier._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _BasicProtectionParams_basicReplayCounter = INT(name=u'basicReplayCounter', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BasicProtectionParams_basicReplayCounter._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _BasicProtectionParams_basicMAC = BIT_STR(name=u'basicMAC', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BasicProtectionParams_basicMAC._const_sz = ASN1Set(rv=[32], rr=[], ev=None, er=[])
    BasicProtectionParams._cont = ASN1Dict([
        (u'keyIdentifier', _BasicProtectionParams_keyIdentifier),
        (u'basicReplayCounter', _BasicProtectionParams_basicReplayCounter),
        (u'basicMAC', _BasicProtectionParams_basicMAC),
        ])
    BasicProtectionParams._ext = []
    
    #-----< Ver2-SUPL-START-extension >-----#
    Ver2_SUPL_START_extension = SEQ(name=u'Ver2-SUPL-START-extension', mode=MODE_TYPE)
    _Ver2_SUPL_START_extension_multipleLocationIds = SEQ_OF(name=u'multipleLocationIds', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'MultipleLocationIds')), opt=True)
    _Ver2_SUPL_START_extension_thirdParty = SEQ_OF(name=u'thirdParty', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'ThirdParty')), opt=True)
    _Ver2_SUPL_START_extension_applicationID = SEQ(name=u'applicationID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'ApplicationID')), opt=True)
    _Ver2_SUPL_START_extension_position = SEQ(name=u'position', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'Position')), opt=True)
    Ver2_SUPL_START_extension._cont = ASN1Dict([
        (u'multipleLocationIds', _Ver2_SUPL_START_extension_multipleLocationIds),
        (u'thirdParty', _Ver2_SUPL_START_extension_thirdParty),
        (u'applicationID', _Ver2_SUPL_START_extension_applicationID),
        (u'position', _Ver2_SUPL_START_extension_position),
        ])
    Ver2_SUPL_START_extension._ext = []
    
    #-----< Ver2-SUPL-RESPONSE-extension >-----#
    Ver2_SUPL_RESPONSE_extension = SEQ(name=u'Ver2-SUPL-RESPONSE-extension', mode=MODE_TYPE)
    _Ver2_SUPL_RESPONSE_extension_supportedNetworkInformation = SEQ(name=u'supportedNetworkInformation', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'SupportedNetworkInformation')), opt=True)
    _Ver2_SUPL_RESPONSE_extension_sPCSETKey = BIT_STR(name=u'sPCSETKey', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'SPCSETKey')), opt=True)
    _Ver2_SUPL_RESPONSE_extension_spctid = SEQ(name=u'spctid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'SPCTID')), opt=True)
    _Ver2_SUPL_RESPONSE_extension_sPCSETKeylifetime = INT(name=u'sPCSETKeylifetime', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'SPCSETKeylifetime')), opt=True)
    _Ver2_SUPL_RESPONSE_extension_initialApproximateposition = SEQ(name=u'initialApproximateposition', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'Position')), opt=True)
    _Ver2_SUPL_RESPONSE_extension_gnssPosTechnology = SEQ(name=u'gnssPosTechnology', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'GNSSPosTechnology')), opt=True)
    Ver2_SUPL_RESPONSE_extension._cont = ASN1Dict([
        (u'supportedNetworkInformation', _Ver2_SUPL_RESPONSE_extension_supportedNetworkInformation),
        (u'sPCSETKey', _Ver2_SUPL_RESPONSE_extension_sPCSETKey),
        (u'spctid', _Ver2_SUPL_RESPONSE_extension_spctid),
        (u'sPCSETKeylifetime', _Ver2_SUPL_RESPONSE_extension_sPCSETKeylifetime),
        (u'initialApproximateposition', _Ver2_SUPL_RESPONSE_extension_initialApproximateposition),
        (u'gnssPosTechnology', _Ver2_SUPL_RESPONSE_extension_gnssPosTechnology),
        ])
    Ver2_SUPL_RESPONSE_extension._ext = []
    
    #-----< Ver2-SUPL-POS-INIT-extension >-----#
    Ver2_SUPL_POS_INIT_extension = SEQ(name=u'Ver2-SUPL-POS-INIT-extension', mode=MODE_TYPE)
    _Ver2_SUPL_POS_INIT_extension_multipleLocationIds = SEQ_OF(name=u'multipleLocationIds', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'MultipleLocationIds')), opt=True)
    _Ver2_SUPL_POS_INIT_extension_utran_GPSReferenceTimeResult = SEQ(name=u'utran-GPSReferenceTimeResult', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'UTRAN-GPSReferenceTimeResult')), opt=True)
    _Ver2_SUPL_POS_INIT_extension_utran_GANSSReferenceTimeResult = SEQ(name=u'utran-GANSSReferenceTimeResult', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'UTRAN-GANSSReferenceTimeResult')), opt=True)
    Ver2_SUPL_POS_INIT_extension._cont = ASN1Dict([
        (u'multipleLocationIds', _Ver2_SUPL_POS_INIT_extension_multipleLocationIds),
        (u'utran-GPSReferenceTimeResult', _Ver2_SUPL_POS_INIT_extension_utran_GPSReferenceTimeResult),
        (u'utran-GANSSReferenceTimeResult', _Ver2_SUPL_POS_INIT_extension_utran_GANSSReferenceTimeResult),
        ])
    Ver2_SUPL_POS_INIT_extension._ext = []
    
    #-----< Ver2-SUPL-POS-extension >-----#
    Ver2_SUPL_POS_extension = SEQ(name=u'Ver2-SUPL-POS-extension', mode=MODE_TYPE)
    _Ver2_SUPL_POS_extension_utran_GPSReferenceTimeAssistance = SEQ(name=u'utran-GPSReferenceTimeAssistance', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'UTRAN-GPSReferenceTimeAssistance')), opt=True)
    _Ver2_SUPL_POS_extension_utran_GPSReferenceTimeResult = SEQ(name=u'utran-GPSReferenceTimeResult', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'UTRAN-GPSReferenceTimeResult')), opt=True)
    _Ver2_SUPL_POS_extension_utran_GANSSReferenceTimeAssistance = SEQ(name=u'utran-GANSSReferenceTimeAssistance', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'UTRAN-GANSSReferenceTimeAssistance')), opt=True)
    _Ver2_SUPL_POS_extension_utran_GANSSReferenceTimeResult = SEQ(name=u'utran-GANSSReferenceTimeResult', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'UTRAN-GANSSReferenceTimeResult')), opt=True)
    Ver2_SUPL_POS_extension._cont = ASN1Dict([
        (u'utran-GPSReferenceTimeAssistance', _Ver2_SUPL_POS_extension_utran_GPSReferenceTimeAssistance),
        (u'utran-GPSReferenceTimeResult', _Ver2_SUPL_POS_extension_utran_GPSReferenceTimeResult),
        (u'utran-GANSSReferenceTimeAssistance', _Ver2_SUPL_POS_extension_utran_GANSSReferenceTimeAssistance),
        (u'utran-GANSSReferenceTimeResult', _Ver2_SUPL_POS_extension_utran_GANSSReferenceTimeResult),
        ])
    Ver2_SUPL_POS_extension._ext = []
    
    #-----< Ver2-SUPL-END-extension >-----#
    Ver2_SUPL_END_extension = SEQ(name=u'Ver2-SUPL-END-extension', mode=MODE_TYPE)
    _Ver2_SUPL_END_extension_sETCapabilities = SEQ(name=u'sETCapabilities', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-START', 'SETCapabilities')), opt=True)
    Ver2_SUPL_END_extension._cont = ASN1Dict([
        (u'sETCapabilities', _Ver2_SUPL_END_extension_sETCapabilities),
        ])
    Ver2_SUPL_END_extension._ext = []
    
    _all_ = [
        _Ver2_SUPL_INIT_extension_notificationMode,
        _Ver2_SUPL_INIT_extension_supportedNetworkInformation,
        _Ver2_SUPL_INIT_extension_triggerType,
        _Ver2_SUPL_INIT_extension_e_SLPAddress,
        _Ver2_SUPL_INIT_extension_historicReporting,
        _Ver2_SUPL_INIT_extension_protectionLevel,
        _Ver2_SUPL_INIT_extension_gnssPosTechnology,
        _Ver2_SUPL_INIT_extension_minimumMajorVersion,
        Ver2_SUPL_INIT_extension,
        NotificationMode,
        _HistoricReporting_allowedReportingType,
        _HistoricReporting_reportingCriteria,
        HistoricReporting,
        AllowedReportingType,
        _ReportingCriteria_timeWindow,
        _ReportingCriteria_maxNumberofReports,
        _ReportingCriteria_minTimeInterval,
        ReportingCriteria,
        _TimeWindow_startTime,
        _TimeWindow_stopTime,
        TimeWindow,
        _ProtectionLevel_protlevel,
        _ProtectionLevel_basicProtectionParams,
        ProtectionLevel,
        ProtLevel,
        _BasicProtectionParams_keyIdentifier,
        _BasicProtectionParams_basicReplayCounter,
        _BasicProtectionParams_basicMAC,
        BasicProtectionParams,
        _Ver2_SUPL_START_extension_multipleLocationIds,
        _Ver2_SUPL_START_extension_thirdParty,
        _Ver2_SUPL_START_extension_applicationID,
        _Ver2_SUPL_START_extension_position,
        Ver2_SUPL_START_extension,
        _Ver2_SUPL_RESPONSE_extension_supportedNetworkInformation,
        _Ver2_SUPL_RESPONSE_extension_sPCSETKey,
        _Ver2_SUPL_RESPONSE_extension_spctid,
        _Ver2_SUPL_RESPONSE_extension_sPCSETKeylifetime,
        _Ver2_SUPL_RESPONSE_extension_initialApproximateposition,
        _Ver2_SUPL_RESPONSE_extension_gnssPosTechnology,
        Ver2_SUPL_RESPONSE_extension,
        _Ver2_SUPL_POS_INIT_extension_multipleLocationIds,
        _Ver2_SUPL_POS_INIT_extension_utran_GPSReferenceTimeResult,
        _Ver2_SUPL_POS_INIT_extension_utran_GANSSReferenceTimeResult,
        Ver2_SUPL_POS_INIT_extension,
        _Ver2_SUPL_POS_extension_utran_GPSReferenceTimeAssistance,
        _Ver2_SUPL_POS_extension_utran_GPSReferenceTimeResult,
        _Ver2_SUPL_POS_extension_utran_GANSSReferenceTimeAssistance,
        _Ver2_SUPL_POS_extension_utran_GANSSReferenceTimeResult,
        Ver2_SUPL_POS_extension,
        _Ver2_SUPL_END_extension_sETCapabilities,
        Ver2_SUPL_END_extension,
    ]

class ULP_Version_2_parameter_extensions:

    _name_  = u'ULP-Version-2-parameter-extensions'
    _oid_   = []
    
    _obj_ = [
        u'Ver2-Notification-extension',
        u'Ver2-SETCapabilities-extension',
        u'ServiceCapabilities',
        u'ServicesSupported',
        u'EventTriggerCapabilities',
        u'GeoAreaShapesSupported',
        u'SessionCapabilities',
        u'SupportedBearers',
        u'Ver2-PosProtocol-extension',
        u'PosProtocolVersion3GPP',
        u'PosProtocolVersion3GPP2',
        u'Supported3GPP2PosProtocolVersion',
        u'PosProtocolVersionOMA',
        u'Ver2-PosTechnology-extension',
        u'GANSSPositionMethods',
        u'GANSSPositionMethod',
        u'GANSSPositioningMethodTypes',
        u'Ver2-RequestedAssistData-extension',
        u'GanssRequestedCommonAssistanceDataList',
        u'GanssRequestedGenericAssistanceDataList',
        u'GanssReqGenericData',
        u'DGANSS-Sig-Id-Req',
        u'BDS-Sig-Id-Req',
        u'GanssNavigationModelData',
        u'SatellitesListRelatedDataList',
        u'SatellitesListRelatedData',
        u'maxGANSS',
        u'maxGANSSSat',
        u'GanssDataBits',
        u'ReqDataBitAssistanceList',
        u'GanssAdditionalDataChoices',
        u'ExtendedEphemeris',
        u'ExtendedEphCheck',
        u'GanssExtendedEphCheck',
        u'GPSTime',
        u'GANSSextEphTime',
        u'Ver2-PosPayLoad-extension',
        ]
    _type_ = [
        u'Ver2-Notification-extension',
        u'Ver2-SETCapabilities-extension',
        u'ServiceCapabilities',
        u'ServicesSupported',
        u'EventTriggerCapabilities',
        u'GeoAreaShapesSupported',
        u'SessionCapabilities',
        u'SupportedBearers',
        u'Ver2-PosProtocol-extension',
        u'PosProtocolVersion3GPP',
        u'PosProtocolVersion3GPP2',
        u'Supported3GPP2PosProtocolVersion',
        u'PosProtocolVersionOMA',
        u'Ver2-PosTechnology-extension',
        u'GANSSPositionMethods',
        u'GANSSPositionMethod',
        u'GANSSPositioningMethodTypes',
        u'Ver2-RequestedAssistData-extension',
        u'GanssRequestedCommonAssistanceDataList',
        u'GanssRequestedGenericAssistanceDataList',
        u'GanssReqGenericData',
        u'DGANSS-Sig-Id-Req',
        u'BDS-Sig-Id-Req',
        u'GanssNavigationModelData',
        u'SatellitesListRelatedDataList',
        u'SatellitesListRelatedData',
        u'GanssDataBits',
        u'ReqDataBitAssistanceList',
        u'GanssAdditionalDataChoices',
        u'ExtendedEphemeris',
        u'ExtendedEphCheck',
        u'GanssExtendedEphCheck',
        u'GPSTime',
        u'GANSSextEphTime',
        u'Ver2-PosPayLoad-extension',
        ]
    _set_ = [
        ]
    _val_ = [
        u'maxGANSS',
        u'maxGANSSSat',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Ver2-Notification-extension >-----#
    Ver2_Notification_extension = SEQ(name=u'Ver2-Notification-extension', mode=MODE_TYPE)
    _Ver2_Notification_extension_emergencyCallLocation = NULL(name=u'emergencyCallLocation', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Ver2_Notification_extension._cont = ASN1Dict([
        (u'emergencyCallLocation', _Ver2_Notification_extension_emergencyCallLocation),
        ])
    Ver2_Notification_extension._ext = []
    
    #-----< Ver2-SETCapabilities-extension >-----#
    Ver2_SETCapabilities_extension = SEQ(name=u'Ver2-SETCapabilities-extension', mode=MODE_TYPE)
    _Ver2_SETCapabilities_extension_serviceCapabilities = SEQ(name=u'serviceCapabilities', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'ServiceCapabilities')), opt=True)
    _Ver2_SETCapabilities_extension_supportedBearers = SEQ(name=u'supportedBearers', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'SupportedBearers')), opt=True)
    Ver2_SETCapabilities_extension._cont = ASN1Dict([
        (u'serviceCapabilities', _Ver2_SETCapabilities_extension_serviceCapabilities),
        (u'supportedBearers', _Ver2_SETCapabilities_extension_supportedBearers),
        ])
    Ver2_SETCapabilities_extension._ext = [u'supportedBearers']
    
    #-----< ServiceCapabilities >-----#
    ServiceCapabilities = SEQ(name=u'ServiceCapabilities', mode=MODE_TYPE)
    _ServiceCapabilities_servicesSupported = SEQ(name=u'servicesSupported', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'ServicesSupported')))
    _ServiceCapabilities_reportingCapabilities = SEQ(name=u'reportingCapabilities', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'ReportingCap')), opt=True)
    _ServiceCapabilities_eventTriggerCapabilities = SEQ(name=u'eventTriggerCapabilities', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'EventTriggerCapabilities')), opt=True)
    _ServiceCapabilities_sessionCapabilities = SEQ(name=u'sessionCapabilities', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'SessionCapabilities')))
    ServiceCapabilities._cont = ASN1Dict([
        (u'servicesSupported', _ServiceCapabilities_servicesSupported),
        (u'reportingCapabilities', _ServiceCapabilities_reportingCapabilities),
        (u'eventTriggerCapabilities', _ServiceCapabilities_eventTriggerCapabilities),
        (u'sessionCapabilities', _ServiceCapabilities_sessionCapabilities),
        ])
    ServiceCapabilities._ext = []
    
    #-----< ServicesSupported >-----#
    ServicesSupported = SEQ(name=u'ServicesSupported', mode=MODE_TYPE)
    _ServicesSupported_periodicTrigger = BOOL(name=u'periodicTrigger', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ServicesSupported_areaEventTrigger = BOOL(name=u'areaEventTrigger', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ServicesSupported._cont = ASN1Dict([
        (u'periodicTrigger', _ServicesSupported_periodicTrigger),
        (u'areaEventTrigger', _ServicesSupported_areaEventTrigger),
        ])
    ServicesSupported._ext = []
    
    #-----< EventTriggerCapabilities >-----#
    EventTriggerCapabilities = SEQ(name=u'EventTriggerCapabilities', mode=MODE_TYPE)
    _EventTriggerCapabilities_geoAreaShapesSupported = SEQ(name=u'geoAreaShapesSupported', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'GeoAreaShapesSupported')))
    _EventTriggerCapabilities_maxNumGeoAreaSupported = INT(name=u'maxNumGeoAreaSupported', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EventTriggerCapabilities_maxNumGeoAreaSupported._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32)], ev=None, er=[])
    _EventTriggerCapabilities_maxAreaIdListSupported = INT(name=u'maxAreaIdListSupported', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EventTriggerCapabilities_maxAreaIdListSupported._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32)], ev=None, er=[])
    _EventTriggerCapabilities_maxAreaIdSupportedPerList = INT(name=u'maxAreaIdSupportedPerList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EventTriggerCapabilities_maxAreaIdSupportedPerList._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=256)], ev=None, er=[])
    EventTriggerCapabilities._cont = ASN1Dict([
        (u'geoAreaShapesSupported', _EventTriggerCapabilities_geoAreaShapesSupported),
        (u'maxNumGeoAreaSupported', _EventTriggerCapabilities_maxNumGeoAreaSupported),
        (u'maxAreaIdListSupported', _EventTriggerCapabilities_maxAreaIdListSupported),
        (u'maxAreaIdSupportedPerList', _EventTriggerCapabilities_maxAreaIdSupportedPerList),
        ])
    EventTriggerCapabilities._ext = []
    
    #-----< GeoAreaShapesSupported >-----#
    GeoAreaShapesSupported = SEQ(name=u'GeoAreaShapesSupported', mode=MODE_TYPE)
    _GeoAreaShapesSupported_ellipticalArea = BOOL(name=u'ellipticalArea', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GeoAreaShapesSupported_polygonArea = BOOL(name=u'polygonArea', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    GeoAreaShapesSupported._cont = ASN1Dict([
        (u'ellipticalArea', _GeoAreaShapesSupported_ellipticalArea),
        (u'polygonArea', _GeoAreaShapesSupported_polygonArea),
        ])
    GeoAreaShapesSupported._ext = []
    
    #-----< SessionCapabilities >-----#
    SessionCapabilities = SEQ(name=u'SessionCapabilities', mode=MODE_TYPE)
    _SessionCapabilities_maxNumberTotalSessions = INT(name=u'maxNumberTotalSessions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SessionCapabilities_maxNumberTotalSessions._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    _SessionCapabilities_maxNumberPeriodicSessions = INT(name=u'maxNumberPeriodicSessions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SessionCapabilities_maxNumberPeriodicSessions._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _SessionCapabilities_maxNumberTriggeredSessions = INT(name=u'maxNumberTriggeredSessions', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SessionCapabilities_maxNumberTriggeredSessions._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    SessionCapabilities._cont = ASN1Dict([
        (u'maxNumberTotalSessions', _SessionCapabilities_maxNumberTotalSessions),
        (u'maxNumberPeriodicSessions', _SessionCapabilities_maxNumberPeriodicSessions),
        (u'maxNumberTriggeredSessions', _SessionCapabilities_maxNumberTriggeredSessions),
        ])
    SessionCapabilities._ext = []
    
    #-----< SupportedBearers >-----#
    SupportedBearers = SEQ(name=u'SupportedBearers', mode=MODE_TYPE)
    _SupportedBearers_gsm = BOOL(name=u'gsm', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedBearers_wcdma = BOOL(name=u'wcdma', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedBearers_lte = BOOL(name=u'lte', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedBearers_cdma = BOOL(name=u'cdma', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedBearers_hprd = BOOL(name=u'hprd', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedBearers_umb = BOOL(name=u'umb', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedBearers_wlan = BOOL(name=u'wlan', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedBearers_wiMAX = BOOL(name=u'wiMAX', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    SupportedBearers._cont = ASN1Dict([
        (u'gsm', _SupportedBearers_gsm),
        (u'wcdma', _SupportedBearers_wcdma),
        (u'lte', _SupportedBearers_lte),
        (u'cdma', _SupportedBearers_cdma),
        (u'hprd', _SupportedBearers_hprd),
        (u'umb', _SupportedBearers_umb),
        (u'wlan', _SupportedBearers_wlan),
        (u'wiMAX', _SupportedBearers_wiMAX),
        ])
    SupportedBearers._ext = []
    
    #-----< Ver2-PosProtocol-extension >-----#
    Ver2_PosProtocol_extension = SEQ(name=u'Ver2-PosProtocol-extension', mode=MODE_TYPE)
    _Ver2_PosProtocol_extension_lpp = BOOL(name=u'lpp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Ver2_PosProtocol_extension_posProtocolVersionRRLP = SEQ(name=u'posProtocolVersionRRLP', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'PosProtocolVersion3GPP')), opt=True)
    _Ver2_PosProtocol_extension_posProtocolVersionRRC = SEQ(name=u'posProtocolVersionRRC', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'PosProtocolVersion3GPP')), opt=True)
    _Ver2_PosProtocol_extension_posProtocolVersionTIA801 = SEQ_OF(name=u'posProtocolVersionTIA801', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'PosProtocolVersion3GPP2')), opt=True)
    _Ver2_PosProtocol_extension_posProtocolVersionLPP = SEQ(name=u'posProtocolVersionLPP', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'PosProtocolVersion3GPP')), opt=True)
    _Ver2_PosProtocol_extension_lppe = BOOL(name=u'lppe', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Ver2_PosProtocol_extension_posProtocolVersionLPPe = SEQ(name=u'posProtocolVersionLPPe', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'PosProtocolVersionOMA')), opt=True)
    Ver2_PosProtocol_extension._cont = ASN1Dict([
        (u'lpp', _Ver2_PosProtocol_extension_lpp),
        (u'posProtocolVersionRRLP', _Ver2_PosProtocol_extension_posProtocolVersionRRLP),
        (u'posProtocolVersionRRC', _Ver2_PosProtocol_extension_posProtocolVersionRRC),
        (u'posProtocolVersionTIA801', _Ver2_PosProtocol_extension_posProtocolVersionTIA801),
        (u'posProtocolVersionLPP', _Ver2_PosProtocol_extension_posProtocolVersionLPP),
        (u'lppe', _Ver2_PosProtocol_extension_lppe),
        (u'posProtocolVersionLPPe', _Ver2_PosProtocol_extension_posProtocolVersionLPPe),
        ])
    Ver2_PosProtocol_extension._ext = [u'lppe', u'posProtocolVersionLPPe']
    
    #-----< PosProtocolVersion3GPP >-----#
    PosProtocolVersion3GPP = SEQ(name=u'PosProtocolVersion3GPP', mode=MODE_TYPE)
    _PosProtocolVersion3GPP_majorVersionField = INT(name=u'majorVersionField', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosProtocolVersion3GPP_majorVersionField._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _PosProtocolVersion3GPP_technicalVersionField = INT(name=u'technicalVersionField', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosProtocolVersion3GPP_technicalVersionField._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _PosProtocolVersion3GPP_editorialVersionField = INT(name=u'editorialVersionField', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosProtocolVersion3GPP_editorialVersionField._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    PosProtocolVersion3GPP._cont = ASN1Dict([
        (u'majorVersionField', _PosProtocolVersion3GPP_majorVersionField),
        (u'technicalVersionField', _PosProtocolVersion3GPP_technicalVersionField),
        (u'editorialVersionField', _PosProtocolVersion3GPP_editorialVersionField),
        ])
    PosProtocolVersion3GPP._ext = []
    
    #-----< PosProtocolVersion3GPP2 >-----#
    PosProtocolVersion3GPP2 = SEQ_OF(name=u'PosProtocolVersion3GPP2', mode=MODE_TYPE)
    _PosProtocolVersion3GPP2__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'Supported3GPP2PosProtocolVersion')))
    PosProtocolVersion3GPP2._cont = _PosProtocolVersion3GPP2__item_
    PosProtocolVersion3GPP2._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< Supported3GPP2PosProtocolVersion >-----#
    Supported3GPP2PosProtocolVersion = SEQ(name=u'Supported3GPP2PosProtocolVersion', mode=MODE_TYPE)
    _Supported3GPP2PosProtocolVersion_revisionNumber = BIT_STR(name=u'revisionNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Supported3GPP2PosProtocolVersion_revisionNumber._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    _Supported3GPP2PosProtocolVersion_pointReleaseNumber = INT(name=u'pointReleaseNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Supported3GPP2PosProtocolVersion_pointReleaseNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _Supported3GPP2PosProtocolVersion_internalEditLevel = INT(name=u'internalEditLevel', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Supported3GPP2PosProtocolVersion_internalEditLevel._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    Supported3GPP2PosProtocolVersion._cont = ASN1Dict([
        (u'revisionNumber', _Supported3GPP2PosProtocolVersion_revisionNumber),
        (u'pointReleaseNumber', _Supported3GPP2PosProtocolVersion_pointReleaseNumber),
        (u'internalEditLevel', _Supported3GPP2PosProtocolVersion_internalEditLevel),
        ])
    Supported3GPP2PosProtocolVersion._ext = []
    
    #-----< PosProtocolVersionOMA >-----#
    PosProtocolVersionOMA = SEQ(name=u'PosProtocolVersionOMA', mode=MODE_TYPE)
    _PosProtocolVersionOMA_majorVersionField = INT(name=u'majorVersionField', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosProtocolVersionOMA_majorVersionField._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _PosProtocolVersionOMA_minorVersionField = INT(name=u'minorVersionField', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosProtocolVersionOMA_minorVersionField._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    PosProtocolVersionOMA._cont = ASN1Dict([
        (u'majorVersionField', _PosProtocolVersionOMA_majorVersionField),
        (u'minorVersionField', _PosProtocolVersionOMA_minorVersionField),
        ])
    PosProtocolVersionOMA._ext = []
    
    #-----< Ver2-PosTechnology-extension >-----#
    Ver2_PosTechnology_extension = SEQ(name=u'Ver2-PosTechnology-extension', mode=MODE_TYPE)
    _Ver2_PosTechnology_extension_gANSSPositionMethods = SEQ_OF(name=u'gANSSPositionMethods', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'GANSSPositionMethods')), opt=True)
    Ver2_PosTechnology_extension._cont = ASN1Dict([
        (u'gANSSPositionMethods', _Ver2_PosTechnology_extension_gANSSPositionMethods),
        ])
    Ver2_PosTechnology_extension._ext = []
    
    #-----< GANSSPositionMethods >-----#
    GANSSPositionMethods = SEQ_OF(name=u'GANSSPositionMethods', mode=MODE_TYPE)
    _GANSSPositionMethods__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'GANSSPositionMethod')))
    GANSSPositionMethods._cont = _GANSSPositionMethods__item_
    GANSSPositionMethods._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< GANSSPositionMethod >-----#
    GANSSPositionMethod = SEQ(name=u'GANSSPositionMethod', mode=MODE_TYPE)
    _GANSSPositionMethod_ganssId = INT(name=u'ganssId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSPositionMethod_ganssId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _GANSSPositionMethod_ganssSBASid = BIT_STR(name=u'ganssSBASid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSSPositionMethod_ganssSBASid._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    _GANSSPositionMethod_gANSSPositioningMethodTypes = SEQ(name=u'gANSSPositioningMethodTypes', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'GANSSPositioningMethodTypes')))
    _GANSSPositionMethod_gANSSSignals = BIT_STR(name=u'gANSSSignals', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'GANSSSignals')))
    GANSSPositionMethod._cont = ASN1Dict([
        (u'ganssId', _GANSSPositionMethod_ganssId),
        (u'ganssSBASid', _GANSSPositionMethod_ganssSBASid),
        (u'gANSSPositioningMethodTypes', _GANSSPositionMethod_gANSSPositioningMethodTypes),
        (u'gANSSSignals', _GANSSPositionMethod_gANSSSignals),
        ])
    GANSSPositionMethod._ext = []
    
    #-----< GANSSPositioningMethodTypes >-----#
    GANSSPositioningMethodTypes = SEQ(name=u'GANSSPositioningMethodTypes', mode=MODE_TYPE)
    _GANSSPositioningMethodTypes_setAssisted = BOOL(name=u'setAssisted', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSPositioningMethodTypes_setBased = BOOL(name=u'setBased', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSPositioningMethodTypes_autonomous = BOOL(name=u'autonomous', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    GANSSPositioningMethodTypes._cont = ASN1Dict([
        (u'setAssisted', _GANSSPositioningMethodTypes_setAssisted),
        (u'setBased', _GANSSPositioningMethodTypes_setBased),
        (u'autonomous', _GANSSPositioningMethodTypes_autonomous),
        ])
    GANSSPositioningMethodTypes._ext = []
    
    #-----< Ver2-RequestedAssistData-extension >-----#
    Ver2_RequestedAssistData_extension = SEQ(name=u'Ver2-RequestedAssistData-extension', mode=MODE_TYPE)
    _Ver2_RequestedAssistData_extension_ganssRequestedCommonAssistanceDataList = SEQ(name=u'ganssRequestedCommonAssistanceDataList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'GanssRequestedCommonAssistanceDataList')), opt=True)
    _Ver2_RequestedAssistData_extension_ganssRequestedGenericAssistanceDataList = SEQ_OF(name=u'ganssRequestedGenericAssistanceDataList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'GanssRequestedGenericAssistanceDataList')), opt=True)
    _Ver2_RequestedAssistData_extension_extendedEphemeris = SEQ(name=u'extendedEphemeris', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'ExtendedEphemeris')), opt=True)
    _Ver2_RequestedAssistData_extension_extendedEphemerisCheck = SEQ(name=u'extendedEphemerisCheck', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'ExtendedEphCheck')), opt=True)
    Ver2_RequestedAssistData_extension._cont = ASN1Dict([
        (u'ganssRequestedCommonAssistanceDataList', _Ver2_RequestedAssistData_extension_ganssRequestedCommonAssistanceDataList),
        (u'ganssRequestedGenericAssistanceDataList', _Ver2_RequestedAssistData_extension_ganssRequestedGenericAssistanceDataList),
        (u'extendedEphemeris', _Ver2_RequestedAssistData_extension_extendedEphemeris),
        (u'extendedEphemerisCheck', _Ver2_RequestedAssistData_extension_extendedEphemerisCheck),
        ])
    Ver2_RequestedAssistData_extension._ext = []
    
    #-----< GanssRequestedCommonAssistanceDataList >-----#
    GanssRequestedCommonAssistanceDataList = SEQ(name=u'GanssRequestedCommonAssistanceDataList', mode=MODE_TYPE)
    _GanssRequestedCommonAssistanceDataList_ganssReferenceTime = BOOL(name=u'ganssReferenceTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssRequestedCommonAssistanceDataList_ganssIonosphericModel = BOOL(name=u'ganssIonosphericModel', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssRequestedCommonAssistanceDataList_ganssAdditionalIonosphericModelForDataID00 = BOOL(name=u'ganssAdditionalIonosphericModelForDataID00', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssRequestedCommonAssistanceDataList_ganssAdditionalIonosphericModelForDataID11 = BOOL(name=u'ganssAdditionalIonosphericModelForDataID11', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssRequestedCommonAssistanceDataList_ganssEarthOrientationParameters = BOOL(name=u'ganssEarthOrientationParameters', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssRequestedCommonAssistanceDataList_ganssAdditionalIonosphericModelForDataID01 = BOOL(name=u'ganssAdditionalIonosphericModelForDataID01', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    GanssRequestedCommonAssistanceDataList._cont = ASN1Dict([
        (u'ganssReferenceTime', _GanssRequestedCommonAssistanceDataList_ganssReferenceTime),
        (u'ganssIonosphericModel', _GanssRequestedCommonAssistanceDataList_ganssIonosphericModel),
        (u'ganssAdditionalIonosphericModelForDataID00', _GanssRequestedCommonAssistanceDataList_ganssAdditionalIonosphericModelForDataID00),
        (u'ganssAdditionalIonosphericModelForDataID11', _GanssRequestedCommonAssistanceDataList_ganssAdditionalIonosphericModelForDataID11),
        (u'ganssEarthOrientationParameters', _GanssRequestedCommonAssistanceDataList_ganssEarthOrientationParameters),
        (u'ganssAdditionalIonosphericModelForDataID01', _GanssRequestedCommonAssistanceDataList_ganssAdditionalIonosphericModelForDataID01),
        ])
    GanssRequestedCommonAssistanceDataList._ext = [u'ganssAdditionalIonosphericModelForDataID01']
    
    #-----< GanssRequestedGenericAssistanceDataList >-----#
    GanssRequestedGenericAssistanceDataList = SEQ_OF(name=u'GanssRequestedGenericAssistanceDataList', mode=MODE_TYPE)
    _GanssRequestedGenericAssistanceDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'GanssReqGenericData')))
    GanssRequestedGenericAssistanceDataList._cont = _GanssRequestedGenericAssistanceDataList__item_
    GanssRequestedGenericAssistanceDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< GanssReqGenericData >-----#
    GanssReqGenericData = SEQ(name=u'GanssReqGenericData', mode=MODE_TYPE)
    _GanssReqGenericData_ganssId = INT(name=u'ganssId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssReqGenericData_ganssId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _GanssReqGenericData_ganssSBASid = BIT_STR(name=u'ganssSBASid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GanssReqGenericData_ganssSBASid._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    _GanssReqGenericData_ganssRealTimeIntegrity = BOOL(name=u'ganssRealTimeIntegrity', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssReqGenericData_ganssDifferentialCorrection = BIT_STR(name=u'ganssDifferentialCorrection', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'DGANSS-Sig-Id-Req')), opt=True)
    _GanssReqGenericData_ganssAlmanac = BOOL(name=u'ganssAlmanac', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssReqGenericData_ganssNavigationModelData = SEQ(name=u'ganssNavigationModelData', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'GanssNavigationModelData')), opt=True)
    _GanssReqGenericData_ganssTimeModels = BIT_STR(name=u'ganssTimeModels', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GanssReqGenericData_ganssTimeModels._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    _GanssReqGenericData_ganssReferenceMeasurementInfo = BOOL(name=u'ganssReferenceMeasurementInfo', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssReqGenericData_ganssDataBits = SEQ(name=u'ganssDataBits', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'GanssDataBits')), opt=True)
    _GanssReqGenericData_ganssUTCModel = BOOL(name=u'ganssUTCModel', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssReqGenericData_ganssAdditionalDataChoices = SEQ(name=u'ganssAdditionalDataChoices', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'GanssAdditionalDataChoices')), opt=True)
    _GanssReqGenericData_ganssAuxiliaryInformation = BOOL(name=u'ganssAuxiliaryInformation', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssReqGenericData_ganssExtendedEphemeris = SEQ(name=u'ganssExtendedEphemeris', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'ExtendedEphemeris')), opt=True)
    _GanssReqGenericData_ganssExtendedEphemerisCheck = SEQ(name=u'ganssExtendedEphemerisCheck', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'GanssExtendedEphCheck')), opt=True)
    _GanssReqGenericData_bds_DifferentialCorrection = BIT_STR(name=u'bds-DifferentialCorrection', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'BDS-Sig-Id-Req')), opt=True)
    _GanssReqGenericData_bds_GridModelReq = BOOL(name=u'bds-GridModelReq', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    GanssReqGenericData._cont = ASN1Dict([
        (u'ganssId', _GanssReqGenericData_ganssId),
        (u'ganssSBASid', _GanssReqGenericData_ganssSBASid),
        (u'ganssRealTimeIntegrity', _GanssReqGenericData_ganssRealTimeIntegrity),
        (u'ganssDifferentialCorrection', _GanssReqGenericData_ganssDifferentialCorrection),
        (u'ganssAlmanac', _GanssReqGenericData_ganssAlmanac),
        (u'ganssNavigationModelData', _GanssReqGenericData_ganssNavigationModelData),
        (u'ganssTimeModels', _GanssReqGenericData_ganssTimeModels),
        (u'ganssReferenceMeasurementInfo', _GanssReqGenericData_ganssReferenceMeasurementInfo),
        (u'ganssDataBits', _GanssReqGenericData_ganssDataBits),
        (u'ganssUTCModel', _GanssReqGenericData_ganssUTCModel),
        (u'ganssAdditionalDataChoices', _GanssReqGenericData_ganssAdditionalDataChoices),
        (u'ganssAuxiliaryInformation', _GanssReqGenericData_ganssAuxiliaryInformation),
        (u'ganssExtendedEphemeris', _GanssReqGenericData_ganssExtendedEphemeris),
        (u'ganssExtendedEphemerisCheck', _GanssReqGenericData_ganssExtendedEphemerisCheck),
        (u'bds-DifferentialCorrection', _GanssReqGenericData_bds_DifferentialCorrection),
        (u'bds-GridModelReq', _GanssReqGenericData_bds_GridModelReq),
        ])
    GanssReqGenericData._ext = [u'bds-DifferentialCorrection', u'bds-GridModelReq']
    
    #-----< DGANSS-Sig-Id-Req >-----#
    DGANSS_Sig_Id_Req = BIT_STR(name=u'DGANSS-Sig-Id-Req', mode=MODE_TYPE)
    DGANSS_Sig_Id_Req._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    
    #-----< BDS-Sig-Id-Req >-----#
    BDS_Sig_Id_Req = BIT_STR(name=u'BDS-Sig-Id-Req', mode=MODE_TYPE)
    BDS_Sig_Id_Req._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    
    #-----< GanssNavigationModelData >-----#
    GanssNavigationModelData = SEQ(name=u'GanssNavigationModelData', mode=MODE_TYPE)
    _GanssNavigationModelData_ganssWeek = INT(name=u'ganssWeek', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssNavigationModelData_ganssWeek._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4095)], ev=None, er=[])
    _GanssNavigationModelData_ganssToe = INT(name=u'ganssToe', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssNavigationModelData_ganssToe._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=167)], ev=None, er=[])
    _GanssNavigationModelData_t_toeLimit = INT(name=u't-toeLimit', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssNavigationModelData_t_toeLimit._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _GanssNavigationModelData_satellitesListRelatedDataList = SEQ_OF(name=u'satellitesListRelatedDataList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'SatellitesListRelatedDataList')), opt=True)
    GanssNavigationModelData._cont = ASN1Dict([
        (u'ganssWeek', _GanssNavigationModelData_ganssWeek),
        (u'ganssToe', _GanssNavigationModelData_ganssToe),
        (u't-toeLimit', _GanssNavigationModelData_t_toeLimit),
        (u'satellitesListRelatedDataList', _GanssNavigationModelData_satellitesListRelatedDataList),
        ])
    GanssNavigationModelData._ext = []
    
    #-----< SatellitesListRelatedDataList >-----#
    SatellitesListRelatedDataList = SEQ_OF(name=u'SatellitesListRelatedDataList', mode=MODE_TYPE)
    _SatellitesListRelatedDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'SatellitesListRelatedData')))
    SatellitesListRelatedDataList._cont = _SatellitesListRelatedDataList__item_
    SatellitesListRelatedDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32)], ev=None, er=[])
    
    #-----< SatellitesListRelatedData >-----#
    SatellitesListRelatedData = SEQ(name=u'SatellitesListRelatedData', mode=MODE_TYPE)
    _SatellitesListRelatedData_satId = INT(name=u'satId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SatellitesListRelatedData_satId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _SatellitesListRelatedData_iod = INT(name=u'iod', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SatellitesListRelatedData_iod._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    SatellitesListRelatedData._cont = ASN1Dict([
        (u'satId', _SatellitesListRelatedData_satId),
        (u'iod', _SatellitesListRelatedData_iod),
        ])
    SatellitesListRelatedData._ext = []
    
    #-----< maxGANSS >-----#
    maxGANSS = INT(name=u'maxGANSS', mode=MODE_VALUE)
    maxGANSS._val = 16
    
    #-----< maxGANSSSat >-----#
    maxGANSSSat = INT(name=u'maxGANSSSat', mode=MODE_VALUE)
    maxGANSSSat._val = 32
    
    #-----< GanssDataBits >-----#
    GanssDataBits = SEQ(name=u'GanssDataBits', mode=MODE_TYPE)
    _GanssDataBits_ganssTODmin = INT(name=u'ganssTODmin', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssDataBits_ganssTODmin._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=59)], ev=None, er=[])
    _GanssDataBits_reqDataBitAssistanceList = SEQ(name=u'reqDataBitAssistanceList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'ReqDataBitAssistanceList')))
    GanssDataBits._cont = ASN1Dict([
        (u'ganssTODmin', _GanssDataBits_ganssTODmin),
        (u'reqDataBitAssistanceList', _GanssDataBits_reqDataBitAssistanceList),
        ])
    GanssDataBits._ext = []
    
    #-----< ReqDataBitAssistanceList >-----#
    ReqDataBitAssistanceList = SEQ(name=u'ReqDataBitAssistanceList', mode=MODE_TYPE)
    _ReqDataBitAssistanceList_gnssSignals = BIT_STR(name=u'gnssSignals', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Ver2-ULP-Components', 'GANSSSignals')))
    _ReqDataBitAssistanceList_ganssDataBitInterval = INT(name=u'ganssDataBitInterval', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReqDataBitAssistanceList_ganssDataBitInterval._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _ReqDataBitAssistanceList_ganssDataBitSatList = SEQ_OF(name=u'ganssDataBitSatList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ReqDataBitAssistanceList_ganssDataBitSatList__item_ = INT(name='_item_', mode=MODE_TYPE)
    __ReqDataBitAssistanceList_ganssDataBitSatList__item_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _ReqDataBitAssistanceList_ganssDataBitSatList._cont = __ReqDataBitAssistanceList_ganssDataBitSatList__item_
    _ReqDataBitAssistanceList_ganssDataBitSatList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    ReqDataBitAssistanceList._cont = ASN1Dict([
        (u'gnssSignals', _ReqDataBitAssistanceList_gnssSignals),
        (u'ganssDataBitInterval', _ReqDataBitAssistanceList_ganssDataBitInterval),
        (u'ganssDataBitSatList', _ReqDataBitAssistanceList_ganssDataBitSatList),
        ])
    ReqDataBitAssistanceList._ext = []
    
    #-----< GanssAdditionalDataChoices >-----#
    GanssAdditionalDataChoices = SEQ(name=u'GanssAdditionalDataChoices', mode=MODE_TYPE)
    _GanssAdditionalDataChoices_orbitModelID = INT(name=u'orbitModelID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GanssAdditionalDataChoices_orbitModelID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _GanssAdditionalDataChoices_clockModelID = INT(name=u'clockModelID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GanssAdditionalDataChoices_clockModelID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _GanssAdditionalDataChoices_utcModelID = INT(name=u'utcModelID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GanssAdditionalDataChoices_utcModelID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _GanssAdditionalDataChoices_almanacModelID = INT(name=u'almanacModelID', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GanssAdditionalDataChoices_almanacModelID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    GanssAdditionalDataChoices._cont = ASN1Dict([
        (u'orbitModelID', _GanssAdditionalDataChoices_orbitModelID),
        (u'clockModelID', _GanssAdditionalDataChoices_clockModelID),
        (u'utcModelID', _GanssAdditionalDataChoices_utcModelID),
        (u'almanacModelID', _GanssAdditionalDataChoices_almanacModelID),
        ])
    GanssAdditionalDataChoices._ext = []
    
    #-----< ExtendedEphemeris >-----#
    ExtendedEphemeris = SEQ(name=u'ExtendedEphemeris', mode=MODE_TYPE)
    _ExtendedEphemeris_validity = INT(name=u'validity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ExtendedEphemeris_validity._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    ExtendedEphemeris._cont = ASN1Dict([
        (u'validity', _ExtendedEphemeris_validity),
        ])
    ExtendedEphemeris._ext = []
    
    #-----< ExtendedEphCheck >-----#
    ExtendedEphCheck = SEQ(name=u'ExtendedEphCheck', mode=MODE_TYPE)
    _ExtendedEphCheck_beginTime = SEQ(name=u'beginTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'GPSTime')))
    _ExtendedEphCheck_endTime = SEQ(name=u'endTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'GPSTime')))
    ExtendedEphCheck._cont = ASN1Dict([
        (u'beginTime', _ExtendedEphCheck_beginTime),
        (u'endTime', _ExtendedEphCheck_endTime),
        ])
    ExtendedEphCheck._ext = []
    
    #-----< GanssExtendedEphCheck >-----#
    GanssExtendedEphCheck = SEQ(name=u'GanssExtendedEphCheck', mode=MODE_TYPE)
    _GanssExtendedEphCheck_beginTime = SEQ(name=u'beginTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'GANSSextEphTime')))
    _GanssExtendedEphCheck_endTime = SEQ(name=u'endTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Version-2-parameter-extensions', 'GANSSextEphTime')))
    GanssExtendedEphCheck._cont = ASN1Dict([
        (u'beginTime', _GanssExtendedEphCheck_beginTime),
        (u'endTime', _GanssExtendedEphCheck_endTime),
        ])
    GanssExtendedEphCheck._ext = []
    
    #-----< GPSTime >-----#
    GPSTime = SEQ(name=u'GPSTime', mode=MODE_TYPE)
    _GPSTime_gPSWeek = INT(name=u'gPSWeek', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSTime_gPSWeek._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    _GPSTime_gPSTOWhour = INT(name=u'gPSTOWhour', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSTime_gPSTOWhour._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=167)], ev=None, er=[])
    GPSTime._cont = ASN1Dict([
        (u'gPSWeek', _GPSTime_gPSWeek),
        (u'gPSTOWhour', _GPSTime_gPSTOWhour),
        ])
    GPSTime._ext = []
    
    #-----< GANSSextEphTime >-----#
    GANSSextEphTime = SEQ(name=u'GANSSextEphTime', mode=MODE_TYPE)
    _GANSSextEphTime_gANSSday = INT(name=u'gANSSday', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSextEphTime_gANSSday._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8191)], ev=None, er=[])
    _GANSSextEphTime_gANSSTODhour = INT(name=u'gANSSTODhour', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSextEphTime_gANSSTODhour._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=23)], ev=None, er=[])
    GANSSextEphTime._cont = ASN1Dict([
        (u'gANSSday', _GANSSextEphTime_gANSSday),
        (u'gANSSTODhour', _GANSSextEphTime_gANSSTODhour),
        ])
    GANSSextEphTime._ext = []
    
    #-----< Ver2-PosPayLoad-extension >-----#
    Ver2_PosPayLoad_extension = SEQ(name=u'Ver2-PosPayLoad-extension', mode=MODE_TYPE)
    _Ver2_PosPayLoad_extension_lPPPayload = SEQ_OF(name=u'lPPPayload', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Ver2_PosPayLoad_extension_lPPPayload__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    __Ver2_PosPayLoad_extension_lPPPayload__item_._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=60000)], ev=None, er=[])
    _Ver2_PosPayLoad_extension_lPPPayload._cont = __Ver2_PosPayLoad_extension_lPPPayload__item_
    _Ver2_PosPayLoad_extension_lPPPayload._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    _Ver2_PosPayLoad_extension_tia801Payload = SEQ_OF(name=u'tia801Payload', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Ver2_PosPayLoad_extension_tia801Payload__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    __Ver2_PosPayLoad_extension_tia801Payload__item_._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=60000)], ev=None, er=[])
    _Ver2_PosPayLoad_extension_tia801Payload._cont = __Ver2_PosPayLoad_extension_tia801Payload__item_
    _Ver2_PosPayLoad_extension_tia801Payload._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    Ver2_PosPayLoad_extension._cont = ASN1Dict([
        (u'lPPPayload', _Ver2_PosPayLoad_extension_lPPPayload),
        (u'tia801Payload', _Ver2_PosPayLoad_extension_tia801Payload),
        ])
    Ver2_PosPayLoad_extension._ext = []
    
    _all_ = [
        _Ver2_Notification_extension_emergencyCallLocation,
        Ver2_Notification_extension,
        _Ver2_SETCapabilities_extension_serviceCapabilities,
        _Ver2_SETCapabilities_extension_supportedBearers,
        Ver2_SETCapabilities_extension,
        _ServiceCapabilities_servicesSupported,
        _ServiceCapabilities_reportingCapabilities,
        _ServiceCapabilities_eventTriggerCapabilities,
        _ServiceCapabilities_sessionCapabilities,
        ServiceCapabilities,
        _ServicesSupported_periodicTrigger,
        _ServicesSupported_areaEventTrigger,
        ServicesSupported,
        _EventTriggerCapabilities_geoAreaShapesSupported,
        _EventTriggerCapabilities_maxNumGeoAreaSupported,
        _EventTriggerCapabilities_maxAreaIdListSupported,
        _EventTriggerCapabilities_maxAreaIdSupportedPerList,
        EventTriggerCapabilities,
        _GeoAreaShapesSupported_ellipticalArea,
        _GeoAreaShapesSupported_polygonArea,
        GeoAreaShapesSupported,
        _SessionCapabilities_maxNumberTotalSessions,
        _SessionCapabilities_maxNumberPeriodicSessions,
        _SessionCapabilities_maxNumberTriggeredSessions,
        SessionCapabilities,
        _SupportedBearers_gsm,
        _SupportedBearers_wcdma,
        _SupportedBearers_lte,
        _SupportedBearers_cdma,
        _SupportedBearers_hprd,
        _SupportedBearers_umb,
        _SupportedBearers_wlan,
        _SupportedBearers_wiMAX,
        SupportedBearers,
        _Ver2_PosProtocol_extension_lpp,
        _Ver2_PosProtocol_extension_posProtocolVersionRRLP,
        _Ver2_PosProtocol_extension_posProtocolVersionRRC,
        _Ver2_PosProtocol_extension_posProtocolVersionTIA801,
        _Ver2_PosProtocol_extension_posProtocolVersionLPP,
        _Ver2_PosProtocol_extension_lppe,
        _Ver2_PosProtocol_extension_posProtocolVersionLPPe,
        Ver2_PosProtocol_extension,
        _PosProtocolVersion3GPP_majorVersionField,
        _PosProtocolVersion3GPP_technicalVersionField,
        _PosProtocolVersion3GPP_editorialVersionField,
        PosProtocolVersion3GPP,
        _PosProtocolVersion3GPP2__item_,
        PosProtocolVersion3GPP2,
        _Supported3GPP2PosProtocolVersion_revisionNumber,
        _Supported3GPP2PosProtocolVersion_pointReleaseNumber,
        _Supported3GPP2PosProtocolVersion_internalEditLevel,
        Supported3GPP2PosProtocolVersion,
        _PosProtocolVersionOMA_majorVersionField,
        _PosProtocolVersionOMA_minorVersionField,
        PosProtocolVersionOMA,
        _Ver2_PosTechnology_extension_gANSSPositionMethods,
        Ver2_PosTechnology_extension,
        _GANSSPositionMethods__item_,
        GANSSPositionMethods,
        _GANSSPositionMethod_ganssId,
        _GANSSPositionMethod_ganssSBASid,
        _GANSSPositionMethod_gANSSPositioningMethodTypes,
        _GANSSPositionMethod_gANSSSignals,
        GANSSPositionMethod,
        _GANSSPositioningMethodTypes_setAssisted,
        _GANSSPositioningMethodTypes_setBased,
        _GANSSPositioningMethodTypes_autonomous,
        GANSSPositioningMethodTypes,
        _Ver2_RequestedAssistData_extension_ganssRequestedCommonAssistanceDataList,
        _Ver2_RequestedAssistData_extension_ganssRequestedGenericAssistanceDataList,
        _Ver2_RequestedAssistData_extension_extendedEphemeris,
        _Ver2_RequestedAssistData_extension_extendedEphemerisCheck,
        Ver2_RequestedAssistData_extension,
        _GanssRequestedCommonAssistanceDataList_ganssReferenceTime,
        _GanssRequestedCommonAssistanceDataList_ganssIonosphericModel,
        _GanssRequestedCommonAssistanceDataList_ganssAdditionalIonosphericModelForDataID00,
        _GanssRequestedCommonAssistanceDataList_ganssAdditionalIonosphericModelForDataID11,
        _GanssRequestedCommonAssistanceDataList_ganssEarthOrientationParameters,
        _GanssRequestedCommonAssistanceDataList_ganssAdditionalIonosphericModelForDataID01,
        GanssRequestedCommonAssistanceDataList,
        _GanssRequestedGenericAssistanceDataList__item_,
        GanssRequestedGenericAssistanceDataList,
        _GanssReqGenericData_ganssId,
        _GanssReqGenericData_ganssSBASid,
        _GanssReqGenericData_ganssRealTimeIntegrity,
        _GanssReqGenericData_ganssDifferentialCorrection,
        _GanssReqGenericData_ganssAlmanac,
        _GanssReqGenericData_ganssNavigationModelData,
        _GanssReqGenericData_ganssTimeModels,
        _GanssReqGenericData_ganssReferenceMeasurementInfo,
        _GanssReqGenericData_ganssDataBits,
        _GanssReqGenericData_ganssUTCModel,
        _GanssReqGenericData_ganssAdditionalDataChoices,
        _GanssReqGenericData_ganssAuxiliaryInformation,
        _GanssReqGenericData_ganssExtendedEphemeris,
        _GanssReqGenericData_ganssExtendedEphemerisCheck,
        _GanssReqGenericData_bds_DifferentialCorrection,
        _GanssReqGenericData_bds_GridModelReq,
        GanssReqGenericData,
        DGANSS_Sig_Id_Req,
        BDS_Sig_Id_Req,
        _GanssNavigationModelData_ganssWeek,
        _GanssNavigationModelData_ganssToe,
        _GanssNavigationModelData_t_toeLimit,
        _GanssNavigationModelData_satellitesListRelatedDataList,
        GanssNavigationModelData,
        _SatellitesListRelatedDataList__item_,
        SatellitesListRelatedDataList,
        _SatellitesListRelatedData_satId,
        _SatellitesListRelatedData_iod,
        SatellitesListRelatedData,
        maxGANSS,
        maxGANSSSat,
        _GanssDataBits_ganssTODmin,
        _GanssDataBits_reqDataBitAssistanceList,
        GanssDataBits,
        _ReqDataBitAssistanceList_gnssSignals,
        _ReqDataBitAssistanceList_ganssDataBitInterval,
        __ReqDataBitAssistanceList_ganssDataBitSatList__item_,
        _ReqDataBitAssistanceList_ganssDataBitSatList,
        ReqDataBitAssistanceList,
        _GanssAdditionalDataChoices_orbitModelID,
        _GanssAdditionalDataChoices_clockModelID,
        _GanssAdditionalDataChoices_utcModelID,
        _GanssAdditionalDataChoices_almanacModelID,
        GanssAdditionalDataChoices,
        _ExtendedEphemeris_validity,
        ExtendedEphemeris,
        _ExtendedEphCheck_beginTime,
        _ExtendedEphCheck_endTime,
        ExtendedEphCheck,
        _GanssExtendedEphCheck_beginTime,
        _GanssExtendedEphCheck_endTime,
        GanssExtendedEphCheck,
        _GPSTime_gPSWeek,
        _GPSTime_gPSTOWhour,
        GPSTime,
        _GANSSextEphTime_gANSSday,
        _GANSSextEphTime_gANSSTODhour,
        GANSSextEphTime,
        __Ver2_PosPayLoad_extension_lPPPayload__item_,
        _Ver2_PosPayLoad_extension_lPPPayload,
        __Ver2_PosPayLoad_extension_tia801Payload__item_,
        _Ver2_PosPayLoad_extension_tia801Payload,
        Ver2_PosPayLoad_extension,
    ]

class ULP:

    _name_  = u'ULP'
    _oid_   = []
    
    _obj_ = [
        u'ULP-PDU',
        u'UlpMessage',
        ]
    _type_ = [
        u'ULP-PDU',
        u'UlpMessage',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< ULP-PDU >-----#
    ULP_PDU = SEQ(name=u'ULP-PDU', mode=MODE_TYPE)
    _ULP_PDU_length = INT(name=u'length', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ULP_PDU_length._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _ULP_PDU_version = SEQ(name=u'version', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'Version')))
    _ULP_PDU_sessionID = SEQ(name=u'sessionID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ULP-Components', 'SessionID')))
    _ULP_PDU_message = CHOICE(name=u'message', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ULP', 'UlpMessage')))
    ULP_PDU._cont = ASN1Dict([
        (u'length', _ULP_PDU_length),
        (u'version', _ULP_PDU_version),
        (u'sessionID', _ULP_PDU_sessionID),
        (u'message', _ULP_PDU_message),
        ])
    ULP_PDU._ext = None
    
    #-----< UlpMessage >-----#
    UlpMessage = CHOICE(name=u'UlpMessage', mode=MODE_TYPE)
    _UlpMessage_msSUPLINIT = SEQ(name=u'msSUPLINIT', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-INIT', 'SUPLINIT')))
    _UlpMessage_msSUPLSTART = SEQ(name=u'msSUPLSTART', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-START', 'SUPLSTART')))
    _UlpMessage_msSUPLRESPONSE = SEQ(name=u'msSUPLRESPONSE', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-RESPONSE', 'SUPLRESPONSE')))
    _UlpMessage_msSUPLPOSINIT = SEQ(name=u'msSUPLPOSINIT', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-POS-INIT', 'SUPLPOSINIT')))
    _UlpMessage_msSUPLPOS = SEQ(name=u'msSUPLPOS', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-POS', 'SUPLPOS')))
    _UlpMessage_msSUPLEND = SEQ(name=u'msSUPLEND', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-END', 'SUPLEND')))
    _UlpMessage_msSUPLAUTHREQ = SEQ(name=u'msSUPLAUTHREQ', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-AUTH-REQ', 'SUPLAUTHREQ')))
    _UlpMessage_msSUPLAUTHRESP = SEQ(name=u'msSUPLAUTHRESP', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-AUTH-RESP', 'SUPLAUTHRESP')))
    _UlpMessage_msSUPLTRIGGEREDSTART = SEQ(name=u'msSUPLTRIGGEREDSTART', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-START', 'Ver2-SUPLTRIGGEREDSTART')))
    _UlpMessage_msSUPLTRIGGEREDRESPONSE = SEQ(name=u'msSUPLTRIGGEREDRESPONSE', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-RESPONSE', 'Ver2-SUPLTRIGGEREDRESPONSE')))
    _UlpMessage_msSUPLTRIGGEREDSTOP = SEQ(name=u'msSUPLTRIGGEREDSTOP', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-TRIGGERED-STOP', 'Ver2-SUPLTRIGGEREDSTOP')))
    _UlpMessage_msSUPLNOTIFY = SEQ(name=u'msSUPLNOTIFY', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-NOTIFY', 'Ver2-SUPLNOTIFY')))
    _UlpMessage_msSUPLNOTIFYRESPONSE = SEQ(name=u'msSUPLNOTIFYRESPONSE', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-NOTIFY-RESPONSE', 'Ver2-SUPLNOTIFYRESPONSE')))
    _UlpMessage_msSUPLSETINIT = SEQ(name=u'msSUPLSETINIT', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-SET-INIT', 'Ver2-SUPLSETINIT')))
    _UlpMessage_msSUPLREPORT = SEQ(name=u'msSUPLREPORT', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SUPL-REPORT', 'Ver2-SUPLREPORT')))
    UlpMessage._cont = ASN1Dict([
        (u'msSUPLINIT', _UlpMessage_msSUPLINIT),
        (u'msSUPLSTART', _UlpMessage_msSUPLSTART),
        (u'msSUPLRESPONSE', _UlpMessage_msSUPLRESPONSE),
        (u'msSUPLPOSINIT', _UlpMessage_msSUPLPOSINIT),
        (u'msSUPLPOS', _UlpMessage_msSUPLPOS),
        (u'msSUPLEND', _UlpMessage_msSUPLEND),
        (u'msSUPLAUTHREQ', _UlpMessage_msSUPLAUTHREQ),
        (u'msSUPLAUTHRESP', _UlpMessage_msSUPLAUTHRESP),
        (u'msSUPLTRIGGEREDSTART', _UlpMessage_msSUPLTRIGGEREDSTART),
        (u'msSUPLTRIGGEREDRESPONSE', _UlpMessage_msSUPLTRIGGEREDRESPONSE),
        (u'msSUPLTRIGGEREDSTOP', _UlpMessage_msSUPLTRIGGEREDSTOP),
        (u'msSUPLNOTIFY', _UlpMessage_msSUPLNOTIFY),
        (u'msSUPLNOTIFYRESPONSE', _UlpMessage_msSUPLNOTIFYRESPONSE),
        (u'msSUPLSETINIT', _UlpMessage_msSUPLSETINIT),
        (u'msSUPLREPORT', _UlpMessage_msSUPLREPORT),
        ])
    UlpMessage._ext = [u'msSUPLTRIGGEREDSTART', u'msSUPLTRIGGEREDRESPONSE', u'msSUPLTRIGGEREDSTOP', u'msSUPLNOTIFY', u'msSUPLNOTIFYRESPONSE', u'msSUPLSETINIT', u'msSUPLREPORT']
    
    _all_ = [
        _ULP_PDU_length,
        _ULP_PDU_version,
        _ULP_PDU_sessionID,
        _ULP_PDU_message,
        ULP_PDU,
        _UlpMessage_msSUPLINIT,
        _UlpMessage_msSUPLSTART,
        _UlpMessage_msSUPLRESPONSE,
        _UlpMessage_msSUPLPOSINIT,
        _UlpMessage_msSUPLPOS,
        _UlpMessage_msSUPLEND,
        _UlpMessage_msSUPLAUTHREQ,
        _UlpMessage_msSUPLAUTHRESP,
        _UlpMessage_msSUPLTRIGGEREDSTART,
        _UlpMessage_msSUPLTRIGGEREDRESPONSE,
        _UlpMessage_msSUPLTRIGGEREDSTOP,
        _UlpMessage_msSUPLNOTIFY,
        _UlpMessage_msSUPLNOTIFYRESPONSE,
        _UlpMessage_msSUPLSETINIT,
        _UlpMessage_msSUPLREPORT,
        UlpMessage,
    ]

init_modules(ULP_Components, Ver2_ULP_Components, SUPL_INIT, SUPL_START, SUPL_RESPONSE, SUPL_POS_INIT, SUPL_POS, SUPL_END, SUPL_AUTH_REQ, SUPL_AUTH_RESP, SUPL_NOTIFY, SUPL_NOTIFY_RESPONSE, SUPL_SET_INIT, SUPL_TRIGGERED_START, SUPL_TRIGGERED_RESPONSE, SUPL_REPORT, SUPL_TRIGGERED_STOP, ULP_Version_2_message_extensions, ULP_Version_2_parameter_extensions, ULP)
