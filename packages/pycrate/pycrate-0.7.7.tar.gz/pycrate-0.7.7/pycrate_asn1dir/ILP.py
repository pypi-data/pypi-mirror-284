# -*- coding: UTF-8 -*-
# Code automatically generated by pycrate_asn1c

from pycrate_asn1rt.utils            import *
from pycrate_asn1rt.err              import *
from pycrate_asn1rt.glob             import make_GLOBAL, GLOBAL
from pycrate_asn1rt.dictobj          import ASN1Dict
from pycrate_asn1rt.refobj           import *
from pycrate_asn1rt.setobj           import *
from pycrate_asn1rt.asnobj_basic     import *
from pycrate_asn1rt.asnobj_str       import *
from pycrate_asn1rt.asnobj_construct import *
from pycrate_asn1rt.asnobj_class     import *
from pycrate_asn1rt.asnobj_ext       import *
from pycrate_asn1rt.init             import init_modules

class ILP_Components:

    _name_  = u'ILP-Components'
    _oid_   = []
    
    _obj_ = [
        u'Version',
        u'SessionID2',
        u'SetSessionID',
        u'SETId',
        u'SlcSessionID',
        u'SpcSessionID',
        u'IPAddress',
        u'NodeAddress',
        u'FQDN',
        u'LocationId',
        u'Status',
        u'MultipleLocationIds',
        u'LocationIdData',
        u'RelativeTime',
        u'maxLidSize',
        u'SETCapabilities',
        u'PosTechnology',
        u'GANSSPositionMethods',
        u'GANSSPositionMethod',
        u'GANSSPositioningMethodTypes',
        u'GANSSSignals',
        u'PrefMethod',
        u'PosProtocol',
        u'PosProtocolVersion3GPP',
        u'PosProtocolVersion3GPP2',
        u'Supported3GPP2PosProtocolVersion',
        u'SupportedBearers',
        u'CellInfo',
        u'UTRAN-GPSReferenceTimeResult',
        u'UTRAN-GANSSReferenceTimeResult',
        u'SET-GANSSReferenceTime',
        u'GNSSPosTechnology',
        u'Position',
        u'PositionEstimate',
        u'AltitudeInfo',
        u'CdmaCellInformation',
        u'GsmCellInformation',
        u'WcdmaCellInformation',
        u'TimingAdvance',
        u'TAResolution',
        u'ChipRate',
        u'HrpdCellInformation',
        u'UmbCellInformation',
        u'LteCellInformation',
        u'MeasResultListEUTRA',
        u'MeasResultEUTRA',
        u'PhysCellId',
        u'TrackingAreaCode',
        u'CellGlobalIdEUTRA',
        u'PLMN-Identity',
        u'CellIdentity',
        u'MCC',
        u'MNC',
        u'MCC-MNC-Digit',
        u'RSRP-Range',
        u'RSRQ-Range',
        u'maxCellReport',
        u'WlanAPInformation',
        u'RTD',
        u'RTDUnits',
        u'ReportedLocation',
        u'LocationEncodingDescriptor',
        u'LocationData',
        u'WimaxBSInformation',
        u'WimaxBsID',
        u'WimaxRTD',
        u'WimaxNMRList',
        u'WimaxNMR',
        u'maxWimaxBSMeas',
        u'FrequencyInfo',
        u'FrequencyInfoFDD',
        u'FrequencyInfoTDD',
        u'UARFCN',
        u'NMR',
        u'NMRelement',
        u'MeasuredResultsList',
        u'MeasuredResults',
        u'CellMeasuredResultsList',
        u'UTRA-CarrierRSSI',
        u'CellMeasuredResults',
        u'CellParametersID',
        u'TGSN',
        u'PrimaryCCPCH-RSCP',
        u'TimeslotISCP',
        u'TimeslotISCP-List',
        u'PrimaryCPICH-Info',
        u'CPICH-Ec-N0',
        u'CPICH-RSCP',
        u'Pathloss',
        u'maxCellMeas',
        u'maxFreq',
        u'maxTS',
        u'UTRAN-GPSReferenceTimeAssistance',
        u'UTRAN-GPSReferenceTime',
        u'UTRANGPSDriftRate',
        u'UTRAN-GANSSReferenceTimeAssistance',
        u'UTRAN-GANSSReferenceTime',
        u'UTRANGANSSDriftRate',
        u'StatusCode',
        u'QoP',
        u'Velocity',
        u'Horvel',
        u'Horandvervel',
        u'Horveluncert',
        u'Horandveruncert',
        u'PosMethod',
        u'SPCSETKey',
        u'SPCTID',
        u'SPCSETKeylifetime',
        u'PosPayLoad',
        u'MultiPosPayLoad',
        u'SPCStatusCode',
        u'maxPosSize',
        ]
    _type_ = [
        u'Version',
        u'SessionID2',
        u'SetSessionID',
        u'SETId',
        u'SlcSessionID',
        u'SpcSessionID',
        u'IPAddress',
        u'NodeAddress',
        u'FQDN',
        u'LocationId',
        u'Status',
        u'MultipleLocationIds',
        u'LocationIdData',
        u'RelativeTime',
        u'SETCapabilities',
        u'PosTechnology',
        u'GANSSPositionMethods',
        u'GANSSPositionMethod',
        u'GANSSPositioningMethodTypes',
        u'GANSSSignals',
        u'PrefMethod',
        u'PosProtocol',
        u'PosProtocolVersion3GPP',
        u'PosProtocolVersion3GPP2',
        u'Supported3GPP2PosProtocolVersion',
        u'SupportedBearers',
        u'CellInfo',
        u'UTRAN-GPSReferenceTimeResult',
        u'UTRAN-GANSSReferenceTimeResult',
        u'SET-GANSSReferenceTime',
        u'GNSSPosTechnology',
        u'Position',
        u'PositionEstimate',
        u'AltitudeInfo',
        u'CdmaCellInformation',
        u'GsmCellInformation',
        u'WcdmaCellInformation',
        u'TimingAdvance',
        u'TAResolution',
        u'ChipRate',
        u'HrpdCellInformation',
        u'UmbCellInformation',
        u'LteCellInformation',
        u'MeasResultListEUTRA',
        u'MeasResultEUTRA',
        u'PhysCellId',
        u'TrackingAreaCode',
        u'CellGlobalIdEUTRA',
        u'PLMN-Identity',
        u'CellIdentity',
        u'MCC',
        u'MNC',
        u'MCC-MNC-Digit',
        u'RSRP-Range',
        u'RSRQ-Range',
        u'WlanAPInformation',
        u'RTD',
        u'RTDUnits',
        u'ReportedLocation',
        u'LocationEncodingDescriptor',
        u'LocationData',
        u'WimaxBSInformation',
        u'WimaxBsID',
        u'WimaxRTD',
        u'WimaxNMRList',
        u'WimaxNMR',
        u'FrequencyInfo',
        u'FrequencyInfoFDD',
        u'FrequencyInfoTDD',
        u'UARFCN',
        u'NMR',
        u'NMRelement',
        u'MeasuredResultsList',
        u'MeasuredResults',
        u'CellMeasuredResultsList',
        u'UTRA-CarrierRSSI',
        u'CellMeasuredResults',
        u'CellParametersID',
        u'TGSN',
        u'PrimaryCCPCH-RSCP',
        u'TimeslotISCP',
        u'TimeslotISCP-List',
        u'PrimaryCPICH-Info',
        u'CPICH-Ec-N0',
        u'CPICH-RSCP',
        u'Pathloss',
        u'UTRAN-GPSReferenceTimeAssistance',
        u'UTRAN-GPSReferenceTime',
        u'UTRANGPSDriftRate',
        u'UTRAN-GANSSReferenceTimeAssistance',
        u'UTRAN-GANSSReferenceTime',
        u'UTRANGANSSDriftRate',
        u'StatusCode',
        u'QoP',
        u'Velocity',
        u'Horvel',
        u'Horandvervel',
        u'Horveluncert',
        u'Horandveruncert',
        u'PosMethod',
        u'SPCSETKey',
        u'SPCTID',
        u'SPCSETKeylifetime',
        u'PosPayLoad',
        u'MultiPosPayLoad',
        u'SPCStatusCode',
        ]
    _set_ = [
        ]
    _val_ = [
        u'maxLidSize',
        u'maxCellReport',
        u'maxWimaxBSMeas',
        u'maxCellMeas',
        u'maxFreq',
        u'maxTS',
        u'maxPosSize',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Version >-----#
    Version = SEQ(name=u'Version', mode=MODE_TYPE)
    _Version_maj = INT(name=u'maj', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Version_maj._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _Version_min = INT(name=u'min', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Version_min._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _Version_servind = INT(name=u'servind', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Version_servind._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    Version._cont = ASN1Dict([
        (u'maj', _Version_maj),
        (u'min', _Version_min),
        (u'servind', _Version_servind),
        ])
    Version._ext = None
    
    #-----< SessionID2 >-----#
    SessionID2 = SEQ(name=u'SessionID2', mode=MODE_TYPE)
    _SessionID2_slcSessionID = SEQ(name=u'slcSessionID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'SlcSessionID')))
    _SessionID2_setSessionID = SEQ(name=u'setSessionID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'SetSessionID')), opt=True)
    _SessionID2_spcSessionID = SEQ(name=u'spcSessionID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'SpcSessionID')), opt=True)
    SessionID2._cont = ASN1Dict([
        (u'slcSessionID', _SessionID2_slcSessionID),
        (u'setSessionID', _SessionID2_setSessionID),
        (u'spcSessionID', _SessionID2_spcSessionID),
        ])
    SessionID2._ext = None
    
    #-----< SetSessionID >-----#
    SetSessionID = SEQ(name=u'SetSessionID', mode=MODE_TYPE)
    _SetSessionID_sessionId = INT(name=u'sessionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SetSessionID_sessionId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _SetSessionID_setId = CHOICE(name=u'setId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ILP-Components', 'SETId')))
    SetSessionID._cont = ASN1Dict([
        (u'sessionId', _SetSessionID_sessionId),
        (u'setId', _SetSessionID_setId),
        ])
    SetSessionID._ext = None
    
    #-----< SETId >-----#
    SETId = CHOICE(name=u'SETId', mode=MODE_TYPE)
    _SETId_msisdn = OCT_STR(name=u'msisdn', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SETId_msisdn._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _SETId_mdn = OCT_STR(name=u'mdn', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SETId_mdn._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _SETId_min = BIT_STR(name=u'min', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SETId_min._const_sz = ASN1Set(rv=[34], rr=[], ev=None, er=[])
    _SETId_imsi = OCT_STR(name=u'imsi', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SETId_imsi._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _SETId_nai = STR_IA5(name=u'nai', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SETId_nai._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1000)], ev=None, er=[])
    _SETId_iPAddress = CHOICE(name=u'iPAddress', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ILP-Components', 'IPAddress')))
    SETId._cont = ASN1Dict([
        (u'msisdn', _SETId_msisdn),
        (u'mdn', _SETId_mdn),
        (u'min', _SETId_min),
        (u'imsi', _SETId_imsi),
        (u'nai', _SETId_nai),
        (u'iPAddress', _SETId_iPAddress),
        ])
    SETId._ext = []
    
    #-----< SlcSessionID >-----#
    SlcSessionID = SEQ(name=u'SlcSessionID', mode=MODE_TYPE)
    _SlcSessionID_sessionID = OCT_STR(name=u'sessionID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SlcSessionID_sessionID._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _SlcSessionID_slcId = CHOICE(name=u'slcId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ILP-Components', 'NodeAddress')))
    SlcSessionID._cont = ASN1Dict([
        (u'sessionID', _SlcSessionID_sessionID),
        (u'slcId', _SlcSessionID_slcId),
        ])
    SlcSessionID._ext = None
    
    #-----< SpcSessionID >-----#
    SpcSessionID = SEQ(name=u'SpcSessionID', mode=MODE_TYPE)
    _SpcSessionID_sessionID = OCT_STR(name=u'sessionID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SpcSessionID_sessionID._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _SpcSessionID_spcId = CHOICE(name=u'spcId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ILP-Components', 'NodeAddress')))
    SpcSessionID._cont = ASN1Dict([
        (u'sessionID', _SpcSessionID_sessionID),
        (u'spcId', _SpcSessionID_spcId),
        ])
    SpcSessionID._ext = None
    
    #-----< IPAddress >-----#
    IPAddress = CHOICE(name=u'IPAddress', mode=MODE_TYPE)
    _IPAddress_ipv4Address = OCT_STR(name=u'ipv4Address', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IPAddress_ipv4Address._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _IPAddress_ipv6Address = OCT_STR(name=u'ipv6Address', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IPAddress_ipv6Address._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    IPAddress._cont = ASN1Dict([
        (u'ipv4Address', _IPAddress_ipv4Address),
        (u'ipv6Address', _IPAddress_ipv6Address),
        ])
    IPAddress._ext = None
    
    #-----< NodeAddress >-----#
    NodeAddress = CHOICE(name=u'NodeAddress', mode=MODE_TYPE)
    _NodeAddress_iPAddress = CHOICE(name=u'iPAddress', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ILP-Components', 'IPAddress')))
    _NodeAddress_fqdn = STR_VIS(name=u'fqdn', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'FQDN')))
    _NodeAddress_fqdn._const_alpha = ASN1Set(rv=[u'.', u'-'], rr=[ASN1RangeStr(lb=u'a', ub=u'z'), ASN1RangeStr(lb=u'A', ub=u'Z'), ASN1RangeStr(lb=u'0', ub=u'9')], ev=None, er=[])
    NodeAddress._cont = ASN1Dict([
        (u'iPAddress', _NodeAddress_iPAddress),
        (u'fqdn', _NodeAddress_fqdn),
        ])
    NodeAddress._ext = []
    
    #-----< FQDN >-----#
    FQDN = STR_VIS(name=u'FQDN', mode=MODE_TYPE)
    FQDN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=255)], ev=None, er=[])
    FQDN._const_alpha = ASN1Set(rv=[u'.', u'-'], rr=[ASN1RangeStr(lb=u'a', ub=u'z'), ASN1RangeStr(lb=u'A', ub=u'Z'), ASN1RangeStr(lb=u'0', ub=u'9')], ev=None, er=[])
    
    #-----< LocationId >-----#
    LocationId = SEQ(name=u'LocationId', mode=MODE_TYPE)
    _LocationId_cellInfo = CHOICE(name=u'cellInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ILP-Components', 'CellInfo')))
    _LocationId_status = ENUM(name=u'status', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'Status')))
    LocationId._cont = ASN1Dict([
        (u'cellInfo', _LocationId_cellInfo),
        (u'status', _LocationId_status),
        ])
    LocationId._ext = []
    
    #-----< Status >-----#
    Status = ENUM(name=u'Status', mode=MODE_TYPE)
    Status._cont = ASN1Dict([(u'stale', 0), (u'current', 1), (u'unknown', 2)])
    Status._ext = []
    
    #-----< MultipleLocationIds >-----#
    MultipleLocationIds = SEQ_OF(name=u'MultipleLocationIds', mode=MODE_TYPE)
    _MultipleLocationIds__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ILP-Components', 'LocationIdData')))
    MultipleLocationIds._cont = _MultipleLocationIds__item_
    MultipleLocationIds._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< LocationIdData >-----#
    LocationIdData = SEQ(name=u'LocationIdData', mode=MODE_TYPE)
    _LocationIdData_locationId = SEQ(name=u'locationId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'LocationId')))
    _LocationIdData_relativetimestamp = INT(name=u'relativetimestamp', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'RelativeTime')), opt=True)
    _LocationIdData_servingFlag = BOOL(name=u'servingFlag', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    LocationIdData._cont = ASN1Dict([
        (u'locationId', _LocationIdData_locationId),
        (u'relativetimestamp', _LocationIdData_relativetimestamp),
        (u'servingFlag', _LocationIdData_servingFlag),
        ])
    LocationIdData._ext = []
    
    #-----< RelativeTime >-----#
    RelativeTime = INT(name=u'RelativeTime', mode=MODE_TYPE)
    RelativeTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< maxLidSize >-----#
    maxLidSize = INT(name=u'maxLidSize', mode=MODE_VALUE)
    maxLidSize._val = 64
    
    #-----< SETCapabilities >-----#
    SETCapabilities = SEQ(name=u'SETCapabilities', mode=MODE_TYPE)
    _SETCapabilities_posTechnology = SEQ(name=u'posTechnology', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'PosTechnology')))
    _SETCapabilities_prefMethod = ENUM(name=u'prefMethod', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'PrefMethod')))
    _SETCapabilities_posProtocol = SEQ(name=u'posProtocol', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'PosProtocol')))
    _SETCapabilities_supportedBearers = SEQ(name=u'supportedBearers', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'SupportedBearers')), opt=True)
    SETCapabilities._cont = ASN1Dict([
        (u'posTechnology', _SETCapabilities_posTechnology),
        (u'prefMethod', _SETCapabilities_prefMethod),
        (u'posProtocol', _SETCapabilities_posProtocol),
        (u'supportedBearers', _SETCapabilities_supportedBearers),
        ])
    SETCapabilities._ext = []
    
    #-----< PosTechnology >-----#
    PosTechnology = SEQ(name=u'PosTechnology', mode=MODE_TYPE)
    _PosTechnology_agpsSETassisted = BOOL(name=u'agpsSETassisted', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosTechnology_agpsSETBased = BOOL(name=u'agpsSETBased', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosTechnology_autonomousGPS = BOOL(name=u'autonomousGPS', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosTechnology_aFLT = BOOL(name=u'aFLT', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosTechnology_eCID = BOOL(name=u'eCID', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosTechnology_eOTD = BOOL(name=u'eOTD', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosTechnology_oTDOA = BOOL(name=u'oTDOA', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosTechnology_gANSSPositionMethods = SEQ_OF(name=u'gANSSPositionMethods', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'GANSSPositionMethods')), opt=True)
    PosTechnology._cont = ASN1Dict([
        (u'agpsSETassisted', _PosTechnology_agpsSETassisted),
        (u'agpsSETBased', _PosTechnology_agpsSETBased),
        (u'autonomousGPS', _PosTechnology_autonomousGPS),
        (u'aFLT', _PosTechnology_aFLT),
        (u'eCID', _PosTechnology_eCID),
        (u'eOTD', _PosTechnology_eOTD),
        (u'oTDOA', _PosTechnology_oTDOA),
        (u'gANSSPositionMethods', _PosTechnology_gANSSPositionMethods),
        ])
    PosTechnology._ext = []
    
    #-----< GANSSPositionMethods >-----#
    GANSSPositionMethods = SEQ_OF(name=u'GANSSPositionMethods', mode=MODE_TYPE)
    _GANSSPositionMethods__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ILP-Components', 'GANSSPositionMethod')))
    GANSSPositionMethods._cont = _GANSSPositionMethods__item_
    GANSSPositionMethods._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< GANSSPositionMethod >-----#
    GANSSPositionMethod = SEQ(name=u'GANSSPositionMethod', mode=MODE_TYPE)
    _GANSSPositionMethod_ganssId = INT(name=u'ganssId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSPositionMethod_ganssId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _GANSSPositionMethod_ganssSBASid = BIT_STR(name=u'ganssSBASid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSSPositionMethod_ganssSBASid._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    _GANSSPositionMethod_gANSSPositioningMethodTypes = SEQ(name=u'gANSSPositioningMethodTypes', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'GANSSPositioningMethodTypes')))
    _GANSSPositionMethod_gANSSSignals = BIT_STR(name=u'gANSSSignals', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'GANSSSignals')))
    GANSSPositionMethod._cont = ASN1Dict([
        (u'ganssId', _GANSSPositionMethod_ganssId),
        (u'ganssSBASid', _GANSSPositionMethod_ganssSBASid),
        (u'gANSSPositioningMethodTypes', _GANSSPositionMethod_gANSSPositioningMethodTypes),
        (u'gANSSSignals', _GANSSPositionMethod_gANSSSignals),
        ])
    GANSSPositionMethod._ext = []
    
    #-----< GANSSPositioningMethodTypes >-----#
    GANSSPositioningMethodTypes = SEQ(name=u'GANSSPositioningMethodTypes', mode=MODE_TYPE)
    _GANSSPositioningMethodTypes_setAssisted = BOOL(name=u'setAssisted', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSPositioningMethodTypes_setBased = BOOL(name=u'setBased', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSPositioningMethodTypes_autonomous = BOOL(name=u'autonomous', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    GANSSPositioningMethodTypes._cont = ASN1Dict([
        (u'setAssisted', _GANSSPositioningMethodTypes_setAssisted),
        (u'setBased', _GANSSPositioningMethodTypes_setBased),
        (u'autonomous', _GANSSPositioningMethodTypes_autonomous),
        ])
    GANSSPositioningMethodTypes._ext = []
    
    #-----< GANSSSignals >-----#
    GANSSSignals = BIT_STR(name=u'GANSSSignals', mode=MODE_TYPE)
    GANSSSignals._cont = ASN1Dict([(u'signal1', 0), (u'signal2', 1), (u'signal3', 2), (u'signal4', 3), (u'signal5', 4), (u'signal6', 5), (u'signal7', 6), (u'signal8', 7)])
    GANSSSignals._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< PrefMethod >-----#
    PrefMethod = ENUM(name=u'PrefMethod', mode=MODE_TYPE)
    PrefMethod._cont = ASN1Dict([(u'agnssSETAssistedPreferred', 0), (u'agnssSETBasedPreferred', 1), (u'noPreference', 2)])
    PrefMethod._ext = []
    
    #-----< PosProtocol >-----#
    PosProtocol = SEQ(name=u'PosProtocol', mode=MODE_TYPE)
    _PosProtocol_tia801 = BOOL(name=u'tia801', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosProtocol_rrlp = BOOL(name=u'rrlp', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosProtocol_rrc = BOOL(name=u'rrc', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosProtocol_lpp = BOOL(name=u'lpp', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosProtocol_posProtocolVersionRRLP = SEQ(name=u'posProtocolVersionRRLP', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'PosProtocolVersion3GPP')), opt=True)
    _PosProtocol_posProtocolVersionRRC = SEQ(name=u'posProtocolVersionRRC', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'PosProtocolVersion3GPP')), opt=True)
    _PosProtocol_posProtocolVersionTIA801 = SEQ_OF(name=u'posProtocolVersionTIA801', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'PosProtocolVersion3GPP2')), opt=True)
    _PosProtocol_posProtocolVersionLPP = SEQ(name=u'posProtocolVersionLPP', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'PosProtocolVersion3GPP')), opt=True)
    PosProtocol._cont = ASN1Dict([
        (u'tia801', _PosProtocol_tia801),
        (u'rrlp', _PosProtocol_rrlp),
        (u'rrc', _PosProtocol_rrc),
        (u'lpp', _PosProtocol_lpp),
        (u'posProtocolVersionRRLP', _PosProtocol_posProtocolVersionRRLP),
        (u'posProtocolVersionRRC', _PosProtocol_posProtocolVersionRRC),
        (u'posProtocolVersionTIA801', _PosProtocol_posProtocolVersionTIA801),
        (u'posProtocolVersionLPP', _PosProtocol_posProtocolVersionLPP),
        ])
    PosProtocol._ext = []
    
    #-----< PosProtocolVersion3GPP >-----#
    PosProtocolVersion3GPP = SEQ(name=u'PosProtocolVersion3GPP', mode=MODE_TYPE)
    _PosProtocolVersion3GPP_majorVersionField = INT(name=u'majorVersionField', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosProtocolVersion3GPP_majorVersionField._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _PosProtocolVersion3GPP_technicalVersionField = INT(name=u'technicalVersionField', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosProtocolVersion3GPP_technicalVersionField._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _PosProtocolVersion3GPP_editorialVersionField = INT(name=u'editorialVersionField', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosProtocolVersion3GPP_editorialVersionField._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    PosProtocolVersion3GPP._cont = ASN1Dict([
        (u'majorVersionField', _PosProtocolVersion3GPP_majorVersionField),
        (u'technicalVersionField', _PosProtocolVersion3GPP_technicalVersionField),
        (u'editorialVersionField', _PosProtocolVersion3GPP_editorialVersionField),
        ])
    PosProtocolVersion3GPP._ext = []
    
    #-----< PosProtocolVersion3GPP2 >-----#
    PosProtocolVersion3GPP2 = SEQ_OF(name=u'PosProtocolVersion3GPP2', mode=MODE_TYPE)
    _PosProtocolVersion3GPP2__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ILP-Components', 'Supported3GPP2PosProtocolVersion')))
    PosProtocolVersion3GPP2._cont = _PosProtocolVersion3GPP2__item_
    PosProtocolVersion3GPP2._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< Supported3GPP2PosProtocolVersion >-----#
    Supported3GPP2PosProtocolVersion = SEQ(name=u'Supported3GPP2PosProtocolVersion', mode=MODE_TYPE)
    _Supported3GPP2PosProtocolVersion_revisionNumber = BIT_STR(name=u'revisionNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Supported3GPP2PosProtocolVersion_revisionNumber._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    _Supported3GPP2PosProtocolVersion_pointReleaseNumber = INT(name=u'pointReleaseNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Supported3GPP2PosProtocolVersion_pointReleaseNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _Supported3GPP2PosProtocolVersion_internalEditLevel = INT(name=u'internalEditLevel', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Supported3GPP2PosProtocolVersion_internalEditLevel._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    Supported3GPP2PosProtocolVersion._cont = ASN1Dict([
        (u'revisionNumber', _Supported3GPP2PosProtocolVersion_revisionNumber),
        (u'pointReleaseNumber', _Supported3GPP2PosProtocolVersion_pointReleaseNumber),
        (u'internalEditLevel', _Supported3GPP2PosProtocolVersion_internalEditLevel),
        ])
    Supported3GPP2PosProtocolVersion._ext = []
    
    #-----< SupportedBearers >-----#
    SupportedBearers = SEQ(name=u'SupportedBearers', mode=MODE_TYPE)
    _SupportedBearers_gsm = BOOL(name=u'gsm', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedBearers_wcdma = BOOL(name=u'wcdma', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedBearers_lte = BOOL(name=u'lte', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedBearers_cdma = BOOL(name=u'cdma', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedBearers_hprd = BOOL(name=u'hprd', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedBearers_umb = BOOL(name=u'umb', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedBearers_wlan = BOOL(name=u'wlan', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedBearers_wiMAX = BOOL(name=u'wiMAX', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    SupportedBearers._cont = ASN1Dict([
        (u'gsm', _SupportedBearers_gsm),
        (u'wcdma', _SupportedBearers_wcdma),
        (u'lte', _SupportedBearers_lte),
        (u'cdma', _SupportedBearers_cdma),
        (u'hprd', _SupportedBearers_hprd),
        (u'umb', _SupportedBearers_umb),
        (u'wlan', _SupportedBearers_wlan),
        (u'wiMAX', _SupportedBearers_wiMAX),
        ])
    SupportedBearers._ext = []
    
    #-----< CellInfo >-----#
    CellInfo = CHOICE(name=u'CellInfo', mode=MODE_TYPE)
    _CellInfo_gsmCell = SEQ(name=u'gsmCell', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'GsmCellInformation')))
    _CellInfo_wcdmaCell = SEQ(name=u'wcdmaCell', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'WcdmaCellInformation')))
    _CellInfo_cdmaCell = SEQ(name=u'cdmaCell', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'CdmaCellInformation')))
    _CellInfo_hrpdCell = SEQ(name=u'hrpdCell', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'HrpdCellInformation')))
    _CellInfo_umbCell = SEQ(name=u'umbCell', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'UmbCellInformation')))
    _CellInfo_lteCell = SEQ(name=u'lteCell', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'LteCellInformation')))
    _CellInfo_wlanAP = SEQ(name=u'wlanAP', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'WlanAPInformation')))
    _CellInfo_wimaxBS = SEQ(name=u'wimaxBS', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'WimaxBSInformation')))
    CellInfo._cont = ASN1Dict([
        (u'gsmCell', _CellInfo_gsmCell),
        (u'wcdmaCell', _CellInfo_wcdmaCell),
        (u'cdmaCell', _CellInfo_cdmaCell),
        (u'hrpdCell', _CellInfo_hrpdCell),
        (u'umbCell', _CellInfo_umbCell),
        (u'lteCell', _CellInfo_lteCell),
        (u'wlanAP', _CellInfo_wlanAP),
        (u'wimaxBS', _CellInfo_wimaxBS),
        ])
    CellInfo._ext = []
    
    #-----< UTRAN-GPSReferenceTimeResult >-----#
    UTRAN_GPSReferenceTimeResult = SEQ(name=u'UTRAN-GPSReferenceTimeResult', mode=MODE_TYPE)
    _UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell = SEQ(name=u'set-GPSTimingOfCell', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell_ms_part = INT(name=u'ms-part', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell_ms_part._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16383)], ev=None, er=[])
    __UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell_ls_part = INT(name=u'ls-part', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell_ls_part._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    _UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell._cont = ASN1Dict([
        (u'ms-part', __UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell_ms_part),
        (u'ls-part', __UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell_ls_part),
        ])
    _UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell._ext = None
    _UTRAN_GPSReferenceTimeResult_modeSpecificInfo = CHOICE(name=u'modeSpecificInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __UTRAN_GPSReferenceTimeResult_modeSpecificInfo_fdd = SEQ(name=u'fdd', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UTRAN_GPSReferenceTimeResult_modeSpecificInfo_fdd_referenceIdentity = SEQ(name=u'referenceIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'PrimaryCPICH-Info')))
    __UTRAN_GPSReferenceTimeResult_modeSpecificInfo_fdd._cont = ASN1Dict([
        (u'referenceIdentity', ___UTRAN_GPSReferenceTimeResult_modeSpecificInfo_fdd_referenceIdentity),
        ])
    __UTRAN_GPSReferenceTimeResult_modeSpecificInfo_fdd._ext = None
    __UTRAN_GPSReferenceTimeResult_modeSpecificInfo_tdd = SEQ(name=u'tdd', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UTRAN_GPSReferenceTimeResult_modeSpecificInfo_tdd_referenceIdentity = INT(name=u'referenceIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'CellParametersID')))
    __UTRAN_GPSReferenceTimeResult_modeSpecificInfo_tdd._cont = ASN1Dict([
        (u'referenceIdentity', ___UTRAN_GPSReferenceTimeResult_modeSpecificInfo_tdd_referenceIdentity),
        ])
    __UTRAN_GPSReferenceTimeResult_modeSpecificInfo_tdd._ext = None
    _UTRAN_GPSReferenceTimeResult_modeSpecificInfo._cont = ASN1Dict([
        (u'fdd', __UTRAN_GPSReferenceTimeResult_modeSpecificInfo_fdd),
        (u'tdd', __UTRAN_GPSReferenceTimeResult_modeSpecificInfo_tdd),
        ])
    _UTRAN_GPSReferenceTimeResult_modeSpecificInfo._ext = None
    _UTRAN_GPSReferenceTimeResult_sfn = INT(name=u'sfn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTRAN_GPSReferenceTimeResult_sfn._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4095)], ev=None, er=[])
    _UTRAN_GPSReferenceTimeResult_gpsReferenceTimeUncertainty = INT(name=u'gpsReferenceTimeUncertainty', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UTRAN_GPSReferenceTimeResult_gpsReferenceTimeUncertainty._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    UTRAN_GPSReferenceTimeResult._cont = ASN1Dict([
        (u'set-GPSTimingOfCell', _UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell),
        (u'modeSpecificInfo', _UTRAN_GPSReferenceTimeResult_modeSpecificInfo),
        (u'sfn', _UTRAN_GPSReferenceTimeResult_sfn),
        (u'gpsReferenceTimeUncertainty', _UTRAN_GPSReferenceTimeResult_gpsReferenceTimeUncertainty),
        ])
    UTRAN_GPSReferenceTimeResult._ext = []
    
    #-----< UTRAN-GANSSReferenceTimeResult >-----#
    UTRAN_GANSSReferenceTimeResult = SEQ(name=u'UTRAN-GANSSReferenceTimeResult', mode=MODE_TYPE)
    _UTRAN_GANSSReferenceTimeResult_ganssTimeID = INT(name=u'ganssTimeID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTRAN_GANSSReferenceTimeResult_ganssTimeID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _UTRAN_GANSSReferenceTimeResult_set_GANSSReferenceTime = SEQ(name=u'set-GANSSReferenceTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'SET-GANSSReferenceTime')))
    UTRAN_GANSSReferenceTimeResult._cont = ASN1Dict([
        (u'ganssTimeID', _UTRAN_GANSSReferenceTimeResult_ganssTimeID),
        (u'set-GANSSReferenceTime', _UTRAN_GANSSReferenceTimeResult_set_GANSSReferenceTime),
        ])
    UTRAN_GANSSReferenceTimeResult._ext = []
    
    #-----< SET-GANSSReferenceTime >-----#
    SET_GANSSReferenceTime = SEQ(name=u'SET-GANSSReferenceTime', mode=MODE_TYPE)
    _SET_GANSSReferenceTime_set_GANSSTimingOfCell = SEQ(name=u'set-GANSSTimingOfCell', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SET_GANSSReferenceTime_set_GANSSTimingOfCell_ms_part = INT(name=u'ms-part', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SET_GANSSReferenceTime_set_GANSSTimingOfCell_ms_part._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=80)], ev=None, er=[])
    __SET_GANSSReferenceTime_set_GANSSTimingOfCell_ls_part = INT(name=u'ls-part', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SET_GANSSReferenceTime_set_GANSSTimingOfCell_ls_part._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    _SET_GANSSReferenceTime_set_GANSSTimingOfCell._cont = ASN1Dict([
        (u'ms-part', __SET_GANSSReferenceTime_set_GANSSTimingOfCell_ms_part),
        (u'ls-part', __SET_GANSSReferenceTime_set_GANSSTimingOfCell_ls_part),
        ])
    _SET_GANSSReferenceTime_set_GANSSTimingOfCell._ext = None
    _SET_GANSSReferenceTime_modeSpecificInfo = CHOICE(name=u'modeSpecificInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __SET_GANSSReferenceTime_modeSpecificInfo_fdd = SEQ(name=u'fdd', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SET_GANSSReferenceTime_modeSpecificInfo_fdd_referenceIdentity = SEQ(name=u'referenceIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'PrimaryCPICH-Info')))
    __SET_GANSSReferenceTime_modeSpecificInfo_fdd._cont = ASN1Dict([
        (u'referenceIdentity', ___SET_GANSSReferenceTime_modeSpecificInfo_fdd_referenceIdentity),
        ])
    __SET_GANSSReferenceTime_modeSpecificInfo_fdd._ext = None
    __SET_GANSSReferenceTime_modeSpecificInfo_tdd = SEQ(name=u'tdd', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SET_GANSSReferenceTime_modeSpecificInfo_tdd_referenceIdentity = INT(name=u'referenceIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'CellParametersID')))
    __SET_GANSSReferenceTime_modeSpecificInfo_tdd._cont = ASN1Dict([
        (u'referenceIdentity', ___SET_GANSSReferenceTime_modeSpecificInfo_tdd_referenceIdentity),
        ])
    __SET_GANSSReferenceTime_modeSpecificInfo_tdd._ext = None
    _SET_GANSSReferenceTime_modeSpecificInfo._cont = ASN1Dict([
        (u'fdd', __SET_GANSSReferenceTime_modeSpecificInfo_fdd),
        (u'tdd', __SET_GANSSReferenceTime_modeSpecificInfo_tdd),
        ])
    _SET_GANSSReferenceTime_modeSpecificInfo._ext = None
    _SET_GANSSReferenceTime_sfn = INT(name=u'sfn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SET_GANSSReferenceTime_sfn._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4095)], ev=None, er=[])
    _SET_GANSSReferenceTime_ganss_TODUncertainty = INT(name=u'ganss-TODUncertainty', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SET_GANSSReferenceTime_ganss_TODUncertainty._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    SET_GANSSReferenceTime._cont = ASN1Dict([
        (u'set-GANSSTimingOfCell', _SET_GANSSReferenceTime_set_GANSSTimingOfCell),
        (u'modeSpecificInfo', _SET_GANSSReferenceTime_modeSpecificInfo),
        (u'sfn', _SET_GANSSReferenceTime_sfn),
        (u'ganss-TODUncertainty', _SET_GANSSReferenceTime_ganss_TODUncertainty),
        ])
    SET_GANSSReferenceTime._ext = []
    
    #-----< GNSSPosTechnology >-----#
    GNSSPosTechnology = SEQ(name=u'GNSSPosTechnology', mode=MODE_TYPE)
    _GNSSPosTechnology_gps = BOOL(name=u'gps', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GNSSPosTechnology_galileo = BOOL(name=u'galileo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GNSSPosTechnology_sbas = BOOL(name=u'sbas', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GNSSPosTechnology_modernized_gps = BOOL(name=u'modernized-gps', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GNSSPosTechnology_qzss = BOOL(name=u'qzss', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GNSSPosTechnology_glonass = BOOL(name=u'glonass', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    GNSSPosTechnology._cont = ASN1Dict([
        (u'gps', _GNSSPosTechnology_gps),
        (u'galileo', _GNSSPosTechnology_galileo),
        (u'sbas', _GNSSPosTechnology_sbas),
        (u'modernized-gps', _GNSSPosTechnology_modernized_gps),
        (u'qzss', _GNSSPosTechnology_qzss),
        (u'glonass', _GNSSPosTechnology_glonass),
        ])
    GNSSPosTechnology._ext = []
    
    #-----< Position >-----#
    Position = SEQ(name=u'Position', mode=MODE_TYPE)
    _Position_timestamp = TIME_UTC(name=u'timestamp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Position_positionEstimate = SEQ(name=u'positionEstimate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'PositionEstimate')))
    _Position_velocity = CHOICE(name=u'velocity', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ILP-Components', 'Velocity')), opt=True)
    Position._cont = ASN1Dict([
        (u'timestamp', _Position_timestamp),
        (u'positionEstimate', _Position_positionEstimate),
        (u'velocity', _Position_velocity),
        ])
    Position._ext = []
    
    #-----< PositionEstimate >-----#
    PositionEstimate = SEQ(name=u'PositionEstimate', mode=MODE_TYPE)
    _PositionEstimate_latitudeSign = ENUM(name=u'latitudeSign', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PositionEstimate_latitudeSign._cont = ASN1Dict([(u'north', 0), (u'south', 1)])
    _PositionEstimate_latitudeSign._ext = None
    _PositionEstimate_latitude = INT(name=u'latitude', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PositionEstimate_latitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8388607)], ev=None, er=[])
    _PositionEstimate_longitude = INT(name=u'longitude', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PositionEstimate_longitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _PositionEstimate_uncertainty = SEQ(name=u'uncertainty', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PositionEstimate_uncertainty_uncertaintySemiMajor = INT(name=u'uncertaintySemiMajor', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PositionEstimate_uncertainty_uncertaintySemiMajor._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    __PositionEstimate_uncertainty_uncertaintySemiMinor = INT(name=u'uncertaintySemiMinor', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PositionEstimate_uncertainty_uncertaintySemiMinor._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    __PositionEstimate_uncertainty_orientationMajorAxis = INT(name=u'orientationMajorAxis', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PositionEstimate_uncertainty_orientationMajorAxis._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=180)], ev=None, er=[])
    _PositionEstimate_uncertainty._cont = ASN1Dict([
        (u'uncertaintySemiMajor', __PositionEstimate_uncertainty_uncertaintySemiMajor),
        (u'uncertaintySemiMinor', __PositionEstimate_uncertainty_uncertaintySemiMinor),
        (u'orientationMajorAxis', __PositionEstimate_uncertainty_orientationMajorAxis),
        ])
    _PositionEstimate_uncertainty._ext = None
    _PositionEstimate_confidence = INT(name=u'confidence', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PositionEstimate_confidence._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=100)], ev=None, er=[])
    _PositionEstimate_altitudeInfo = SEQ(name=u'altitudeInfo', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'AltitudeInfo')), opt=True)
    PositionEstimate._cont = ASN1Dict([
        (u'latitudeSign', _PositionEstimate_latitudeSign),
        (u'latitude', _PositionEstimate_latitude),
        (u'longitude', _PositionEstimate_longitude),
        (u'uncertainty', _PositionEstimate_uncertainty),
        (u'confidence', _PositionEstimate_confidence),
        (u'altitudeInfo', _PositionEstimate_altitudeInfo),
        ])
    PositionEstimate._ext = []
    
    #-----< AltitudeInfo >-----#
    AltitudeInfo = SEQ(name=u'AltitudeInfo', mode=MODE_TYPE)
    _AltitudeInfo_altitudeDirection = ENUM(name=u'altitudeDirection', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AltitudeInfo_altitudeDirection._cont = ASN1Dict([(u'height', 0), (u'depth', 1)])
    _AltitudeInfo_altitudeDirection._ext = None
    _AltitudeInfo_altitude = INT(name=u'altitude', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AltitudeInfo_altitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    _AltitudeInfo_altUncertainty = INT(name=u'altUncertainty', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AltitudeInfo_altUncertainty._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    AltitudeInfo._cont = ASN1Dict([
        (u'altitudeDirection', _AltitudeInfo_altitudeDirection),
        (u'altitude', _AltitudeInfo_altitude),
        (u'altUncertainty', _AltitudeInfo_altUncertainty),
        ])
    AltitudeInfo._ext = []
    
    #-----< CdmaCellInformation >-----#
    CdmaCellInformation = SEQ(name=u'CdmaCellInformation', mode=MODE_TYPE)
    _CdmaCellInformation_refNID = INT(name=u'refNID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CdmaCellInformation_refNID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _CdmaCellInformation_refSID = INT(name=u'refSID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CdmaCellInformation_refSID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    _CdmaCellInformation_refBASEID = INT(name=u'refBASEID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CdmaCellInformation_refBASEID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _CdmaCellInformation_refBASELAT = INT(name=u'refBASELAT', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CdmaCellInformation_refBASELAT._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4194303)], ev=None, er=[])
    _CdmaCellInformation_reBASELONG = INT(name=u'reBASELONG', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CdmaCellInformation_reBASELONG._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8388607)], ev=None, er=[])
    _CdmaCellInformation_refREFPN = INT(name=u'refREFPN', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CdmaCellInformation_refREFPN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=511)], ev=None, er=[])
    _CdmaCellInformation_refWeekNumber = INT(name=u'refWeekNumber', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CdmaCellInformation_refWeekNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _CdmaCellInformation_refSeconds = INT(name=u'refSeconds', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CdmaCellInformation_refSeconds._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4194303)], ev=None, er=[])
    CdmaCellInformation._cont = ASN1Dict([
        (u'refNID', _CdmaCellInformation_refNID),
        (u'refSID', _CdmaCellInformation_refSID),
        (u'refBASEID', _CdmaCellInformation_refBASEID),
        (u'refBASELAT', _CdmaCellInformation_refBASELAT),
        (u'reBASELONG', _CdmaCellInformation_reBASELONG),
        (u'refREFPN', _CdmaCellInformation_refREFPN),
        (u'refWeekNumber', _CdmaCellInformation_refWeekNumber),
        (u'refSeconds', _CdmaCellInformation_refSeconds),
        ])
    CdmaCellInformation._ext = []
    
    #-----< GsmCellInformation >-----#
    GsmCellInformation = SEQ(name=u'GsmCellInformation', mode=MODE_TYPE)
    _GsmCellInformation_refMCC = INT(name=u'refMCC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GsmCellInformation_refMCC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=999)], ev=None, er=[])
    _GsmCellInformation_refMNC = INT(name=u'refMNC', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GsmCellInformation_refMNC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=999)], ev=None, er=[])
    _GsmCellInformation_refLAC = INT(name=u'refLAC', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GsmCellInformation_refLAC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _GsmCellInformation_refCI = INT(name=u'refCI', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GsmCellInformation_refCI._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _GsmCellInformation_nMR = SEQ_OF(name=u'nMR', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'NMR')), opt=True)
    _GsmCellInformation_tA = INT(name=u'tA', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GsmCellInformation_tA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    GsmCellInformation._cont = ASN1Dict([
        (u'refMCC', _GsmCellInformation_refMCC),
        (u'refMNC', _GsmCellInformation_refMNC),
        (u'refLAC', _GsmCellInformation_refLAC),
        (u'refCI', _GsmCellInformation_refCI),
        (u'nMR', _GsmCellInformation_nMR),
        (u'tA', _GsmCellInformation_tA),
        ])
    GsmCellInformation._ext = []
    
    #-----< WcdmaCellInformation >-----#
    WcdmaCellInformation = SEQ(name=u'WcdmaCellInformation', mode=MODE_TYPE)
    _WcdmaCellInformation_refMCC = INT(name=u'refMCC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _WcdmaCellInformation_refMCC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=999)], ev=None, er=[])
    _WcdmaCellInformation_refMNC = INT(name=u'refMNC', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _WcdmaCellInformation_refMNC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=999)], ev=None, er=[])
    _WcdmaCellInformation_refUC = INT(name=u'refUC', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _WcdmaCellInformation_refUC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=268435455)], ev=None, er=[])
    _WcdmaCellInformation_frequencyInfo = SEQ(name=u'frequencyInfo', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'FrequencyInfo')), opt=True)
    _WcdmaCellInformation_primaryScramblingCode = INT(name=u'primaryScramblingCode', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WcdmaCellInformation_primaryScramblingCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=511)], ev=None, er=[])
    _WcdmaCellInformation_measuredResultsList = SEQ_OF(name=u'measuredResultsList', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'MeasuredResultsList')), opt=True)
    _WcdmaCellInformation_cellParametersId = INT(name=u'cellParametersId', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WcdmaCellInformation_cellParametersId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    _WcdmaCellInformation_timingAdvance = SEQ(name=u'timingAdvance', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'TimingAdvance')), opt=True)
    WcdmaCellInformation._cont = ASN1Dict([
        (u'refMCC', _WcdmaCellInformation_refMCC),
        (u'refMNC', _WcdmaCellInformation_refMNC),
        (u'refUC', _WcdmaCellInformation_refUC),
        (u'frequencyInfo', _WcdmaCellInformation_frequencyInfo),
        (u'primaryScramblingCode', _WcdmaCellInformation_primaryScramblingCode),
        (u'measuredResultsList', _WcdmaCellInformation_measuredResultsList),
        (u'cellParametersId', _WcdmaCellInformation_cellParametersId),
        (u'timingAdvance', _WcdmaCellInformation_timingAdvance),
        ])
    WcdmaCellInformation._ext = []
    
    #-----< TimingAdvance >-----#
    TimingAdvance = SEQ(name=u'TimingAdvance', mode=MODE_TYPE)
    _TimingAdvance_tA = INT(name=u'tA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TimingAdvance_tA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8191)], ev=None, er=[])
    _TimingAdvance_tAResolution = ENUM(name=u'tAResolution', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'TAResolution')), opt=True)
    _TimingAdvance_chipRate = ENUM(name=u'chipRate', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'ChipRate')), opt=True)
    TimingAdvance._cont = ASN1Dict([
        (u'tA', _TimingAdvance_tA),
        (u'tAResolution', _TimingAdvance_tAResolution),
        (u'chipRate', _TimingAdvance_chipRate),
        ])
    TimingAdvance._ext = []
    
    #-----< TAResolution >-----#
    TAResolution = ENUM(name=u'TAResolution', mode=MODE_TYPE)
    TAResolution._cont = ASN1Dict([(u'res10chip', 0), (u'res05chip', 1), (u'res0125chip', 2)])
    TAResolution._ext = []
    
    #-----< ChipRate >-----#
    ChipRate = ENUM(name=u'ChipRate', mode=MODE_TYPE)
    ChipRate._cont = ASN1Dict([(u'tdd128', 0), (u'tdd384', 1), (u'tdd768', 2)])
    ChipRate._ext = []
    
    #-----< HrpdCellInformation >-----#
    HrpdCellInformation = SEQ(name=u'HrpdCellInformation', mode=MODE_TYPE)
    _HrpdCellInformation_refSECTORID = BIT_STR(name=u'refSECTORID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HrpdCellInformation_refSECTORID._const_sz = ASN1Set(rv=[128], rr=[], ev=None, er=[])
    _HrpdCellInformation_refBASELAT = INT(name=u'refBASELAT', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HrpdCellInformation_refBASELAT._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4194303)], ev=None, er=[])
    _HrpdCellInformation_reBASELONG = INT(name=u'reBASELONG', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HrpdCellInformation_reBASELONG._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8388607)], ev=None, er=[])
    _HrpdCellInformation_refWeekNumber = INT(name=u'refWeekNumber', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HrpdCellInformation_refWeekNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _HrpdCellInformation_refSeconds = INT(name=u'refSeconds', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HrpdCellInformation_refSeconds._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4194303)], ev=None, er=[])
    HrpdCellInformation._cont = ASN1Dict([
        (u'refSECTORID', _HrpdCellInformation_refSECTORID),
        (u'refBASELAT', _HrpdCellInformation_refBASELAT),
        (u'reBASELONG', _HrpdCellInformation_reBASELONG),
        (u'refWeekNumber', _HrpdCellInformation_refWeekNumber),
        (u'refSeconds', _HrpdCellInformation_refSeconds),
        ])
    HrpdCellInformation._ext = []
    
    #-----< UmbCellInformation >-----#
    UmbCellInformation = SEQ(name=u'UmbCellInformation', mode=MODE_TYPE)
    _UmbCellInformation_refSECTORID = BIT_STR(name=u'refSECTORID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UmbCellInformation_refSECTORID._const_sz = ASN1Set(rv=[128], rr=[], ev=None, er=[])
    _UmbCellInformation_refMCC = INT(name=u'refMCC', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UmbCellInformation_refMCC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=999)], ev=None, er=[])
    _UmbCellInformation_refMNC = INT(name=u'refMNC', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UmbCellInformation_refMNC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=999)], ev=None, er=[])
    _UmbCellInformation_refBASELAT = INT(name=u'refBASELAT', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UmbCellInformation_refBASELAT._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4194303)], ev=None, er=[])
    _UmbCellInformation_reBASELONG = INT(name=u'reBASELONG', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UmbCellInformation_reBASELONG._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8388607)], ev=None, er=[])
    _UmbCellInformation_refWeekNumber = INT(name=u'refWeekNumber', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UmbCellInformation_refWeekNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _UmbCellInformation_refSeconds = INT(name=u'refSeconds', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UmbCellInformation_refSeconds._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4194303)], ev=None, er=[])
    UmbCellInformation._cont = ASN1Dict([
        (u'refSECTORID', _UmbCellInformation_refSECTORID),
        (u'refMCC', _UmbCellInformation_refMCC),
        (u'refMNC', _UmbCellInformation_refMNC),
        (u'refBASELAT', _UmbCellInformation_refBASELAT),
        (u'reBASELONG', _UmbCellInformation_reBASELONG),
        (u'refWeekNumber', _UmbCellInformation_refWeekNumber),
        (u'refSeconds', _UmbCellInformation_refSeconds),
        ])
    UmbCellInformation._ext = []
    
    #-----< LteCellInformation >-----#
    LteCellInformation = SEQ(name=u'LteCellInformation', mode=MODE_TYPE)
    _LteCellInformation_cellGlobalIdEUTRA = SEQ(name=u'cellGlobalIdEUTRA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'CellGlobalIdEUTRA')))
    _LteCellInformation_physCellId = INT(name=u'physCellId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'PhysCellId')))
    _LteCellInformation_trackingAreaCode = BIT_STR(name=u'trackingAreaCode', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'TrackingAreaCode')))
    _LteCellInformation_rsrpResult = INT(name=u'rsrpResult', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'RSRP-Range')), opt=True)
    _LteCellInformation_rsrqResult = INT(name=u'rsrqResult', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'RSRQ-Range')), opt=True)
    _LteCellInformation_tA = INT(name=u'tA', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LteCellInformation_tA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1282)], ev=None, er=[])
    _LteCellInformation_measResultListEUTRA = SEQ_OF(name=u'measResultListEUTRA', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'MeasResultListEUTRA')), opt=True)
    _LteCellInformation_earfcn = INT(name=u'earfcn', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LteCellInformation_earfcn._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    LteCellInformation._cont = ASN1Dict([
        (u'cellGlobalIdEUTRA', _LteCellInformation_cellGlobalIdEUTRA),
        (u'physCellId', _LteCellInformation_physCellId),
        (u'trackingAreaCode', _LteCellInformation_trackingAreaCode),
        (u'rsrpResult', _LteCellInformation_rsrpResult),
        (u'rsrqResult', _LteCellInformation_rsrqResult),
        (u'tA', _LteCellInformation_tA),
        (u'measResultListEUTRA', _LteCellInformation_measResultListEUTRA),
        (u'earfcn', _LteCellInformation_earfcn),
        ])
    LteCellInformation._ext = [u'earfcn']
    
    #-----< MeasResultListEUTRA >-----#
    MeasResultListEUTRA = SEQ_OF(name=u'MeasResultListEUTRA', mode=MODE_TYPE)
    _MeasResultListEUTRA__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ILP-Components', 'MeasResultEUTRA')))
    MeasResultListEUTRA._cont = _MeasResultListEUTRA__item_
    MeasResultListEUTRA._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< MeasResultEUTRA >-----#
    MeasResultEUTRA = SEQ(name=u'MeasResultEUTRA', mode=MODE_TYPE)
    _MeasResultEUTRA_physCellId = INT(name=u'physCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'PhysCellId')))
    _MeasResultEUTRA_cgi_Info = SEQ(name=u'cgi-Info', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MeasResultEUTRA_cgi_Info_cellGlobalId = SEQ(name=u'cellGlobalId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'CellGlobalIdEUTRA')))
    __MeasResultEUTRA_cgi_Info_trackingAreaCode = BIT_STR(name=u'trackingAreaCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'TrackingAreaCode')))
    _MeasResultEUTRA_cgi_Info._cont = ASN1Dict([
        (u'cellGlobalId', __MeasResultEUTRA_cgi_Info_cellGlobalId),
        (u'trackingAreaCode', __MeasResultEUTRA_cgi_Info_trackingAreaCode),
        ])
    _MeasResultEUTRA_cgi_Info._ext = None
    _MeasResultEUTRA_measResult = SEQ(name=u'measResult', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MeasResultEUTRA_measResult_rsrpResult = INT(name=u'rsrpResult', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'RSRP-Range')), opt=True)
    __MeasResultEUTRA_measResult_rsrqResult = INT(name=u'rsrqResult', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'RSRQ-Range')), opt=True)
    __MeasResultEUTRA_measResult_earfcn = INT(name=u'earfcn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MeasResultEUTRA_measResult_earfcn._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _MeasResultEUTRA_measResult._cont = ASN1Dict([
        (u'rsrpResult', __MeasResultEUTRA_measResult_rsrpResult),
        (u'rsrqResult', __MeasResultEUTRA_measResult_rsrqResult),
        (u'earfcn', __MeasResultEUTRA_measResult_earfcn),
        ])
    _MeasResultEUTRA_measResult._ext = [u'earfcn']
    MeasResultEUTRA._cont = ASN1Dict([
        (u'physCellId', _MeasResultEUTRA_physCellId),
        (u'cgi-Info', _MeasResultEUTRA_cgi_Info),
        (u'measResult', _MeasResultEUTRA_measResult),
        ])
    MeasResultEUTRA._ext = None
    
    #-----< PhysCellId >-----#
    PhysCellId = INT(name=u'PhysCellId', mode=MODE_TYPE)
    PhysCellId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=503)], ev=None, er=[])
    
    #-----< TrackingAreaCode >-----#
    TrackingAreaCode = BIT_STR(name=u'TrackingAreaCode', mode=MODE_TYPE)
    TrackingAreaCode._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< CellGlobalIdEUTRA >-----#
    CellGlobalIdEUTRA = SEQ(name=u'CellGlobalIdEUTRA', mode=MODE_TYPE)
    _CellGlobalIdEUTRA_plmn_Identity = SEQ(name=u'plmn-Identity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'PLMN-Identity')))
    _CellGlobalIdEUTRA_cellIdentity = BIT_STR(name=u'cellIdentity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'CellIdentity')))
    CellGlobalIdEUTRA._cont = ASN1Dict([
        (u'plmn-Identity', _CellGlobalIdEUTRA_plmn_Identity),
        (u'cellIdentity', _CellGlobalIdEUTRA_cellIdentity),
        ])
    CellGlobalIdEUTRA._ext = []
    
    #-----< PLMN-Identity >-----#
    PLMN_Identity = SEQ(name=u'PLMN-Identity', mode=MODE_TYPE)
    _PLMN_Identity_mcc = SEQ_OF(name=u'mcc', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'MCC')), opt=True)
    _PLMN_Identity_mnc = SEQ_OF(name=u'mnc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'MNC')))
    PLMN_Identity._cont = ASN1Dict([
        (u'mcc', _PLMN_Identity_mcc),
        (u'mnc', _PLMN_Identity_mnc),
        ])
    PLMN_Identity._ext = None
    
    #-----< CellIdentity >-----#
    CellIdentity = BIT_STR(name=u'CellIdentity', mode=MODE_TYPE)
    CellIdentity._const_sz = ASN1Set(rv=[28], rr=[], ev=None, er=[])
    
    #-----< MCC >-----#
    MCC = SEQ_OF(name=u'MCC', mode=MODE_TYPE)
    _MCC__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ILP-Components', 'MCC-MNC-Digit')))
    MCC._cont = _MCC__item_
    MCC._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    
    #-----< MNC >-----#
    MNC = SEQ_OF(name=u'MNC', mode=MODE_TYPE)
    _MNC__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ILP-Components', 'MCC-MNC-Digit')))
    MNC._cont = _MNC__item_
    MNC._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=3)], ev=None, er=[])
    
    #-----< MCC-MNC-Digit >-----#
    MCC_MNC_Digit = INT(name=u'MCC-MNC-Digit', mode=MODE_TYPE)
    MCC_MNC_Digit._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=9)], ev=None, er=[])
    
    #-----< RSRP-Range >-----#
    RSRP_Range = INT(name=u'RSRP-Range', mode=MODE_TYPE)
    RSRP_Range._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=97)], ev=None, er=[])
    
    #-----< RSRQ-Range >-----#
    RSRQ_Range = INT(name=u'RSRQ-Range', mode=MODE_TYPE)
    RSRQ_Range._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=34)], ev=None, er=[])
    
    #-----< maxCellReport >-----#
    maxCellReport = INT(name=u'maxCellReport', mode=MODE_VALUE)
    maxCellReport._val = 8
    
    #-----< WlanAPInformation >-----#
    WlanAPInformation = SEQ(name=u'WlanAPInformation', mode=MODE_TYPE)
    _WlanAPInformation_apMACAddress = BIT_STR(name=u'apMACAddress', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _WlanAPInformation_apMACAddress._const_sz = ASN1Set(rv=[48], rr=[], ev=None, er=[])
    _WlanAPInformation_apTransmitPower = INT(name=u'apTransmitPower', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_apTransmitPower._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=128)], ev=None, er=[])
    _WlanAPInformation_apAntennaGain = INT(name=u'apAntennaGain', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_apAntennaGain._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=128)], ev=None, er=[])
    _WlanAPInformation_apSignaltoNoise = INT(name=u'apSignaltoNoise', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_apSignaltoNoise._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=128)], ev=None, er=[])
    _WlanAPInformation_apDeviceType = ENUM(name=u'apDeviceType', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_apDeviceType._cont = ASN1Dict([(u'wlan802-11a', 0), (u'wlan802-11b', 1), (u'wlan802-11g', 2)])
    _WlanAPInformation_apDeviceType._ext = []
    _WlanAPInformation_apSignalStrength = INT(name=u'apSignalStrength', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_apSignalStrength._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=128)], ev=None, er=[])
    _WlanAPInformation_apChannelFrequency = INT(name=u'apChannelFrequency', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_apChannelFrequency._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=256)], ev=None, er=[])
    _WlanAPInformation_apRoundTripDelay = SEQ(name=u'apRoundTripDelay', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'RTD')), opt=True)
    _WlanAPInformation_setTransmitPower = INT(name=u'setTransmitPower', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_setTransmitPower._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=128)], ev=None, er=[])
    _WlanAPInformation_setAntennaGain = INT(name=u'setAntennaGain', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_setAntennaGain._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=128)], ev=None, er=[])
    _WlanAPInformation_setSignaltoNoise = INT(name=u'setSignaltoNoise', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_setSignaltoNoise._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=128)], ev=None, er=[])
    _WlanAPInformation_setSignalStrength = INT(name=u'setSignalStrength', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WlanAPInformation_setSignalStrength._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=128)], ev=None, er=[])
    _WlanAPInformation_apReportedLocation = SEQ(name=u'apReportedLocation', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'ReportedLocation')), opt=True)
    WlanAPInformation._cont = ASN1Dict([
        (u'apMACAddress', _WlanAPInformation_apMACAddress),
        (u'apTransmitPower', _WlanAPInformation_apTransmitPower),
        (u'apAntennaGain', _WlanAPInformation_apAntennaGain),
        (u'apSignaltoNoise', _WlanAPInformation_apSignaltoNoise),
        (u'apDeviceType', _WlanAPInformation_apDeviceType),
        (u'apSignalStrength', _WlanAPInformation_apSignalStrength),
        (u'apChannelFrequency', _WlanAPInformation_apChannelFrequency),
        (u'apRoundTripDelay', _WlanAPInformation_apRoundTripDelay),
        (u'setTransmitPower', _WlanAPInformation_setTransmitPower),
        (u'setAntennaGain', _WlanAPInformation_setAntennaGain),
        (u'setSignaltoNoise', _WlanAPInformation_setSignaltoNoise),
        (u'setSignalStrength', _WlanAPInformation_setSignalStrength),
        (u'apReportedLocation', _WlanAPInformation_apReportedLocation),
        ])
    WlanAPInformation._ext = []
    
    #-----< RTD >-----#
    RTD = SEQ(name=u'RTD', mode=MODE_TYPE)
    _RTD_rTDValue = INT(name=u'rTDValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RTD_rTDValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16777216)], ev=None, er=[])
    _RTD_rTDUnits = ENUM(name=u'rTDUnits', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'RTDUnits')))
    _RTD_rTDAccuracy = INT(name=u'rTDAccuracy', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RTD_rTDAccuracy._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    RTD._cont = ASN1Dict([
        (u'rTDValue', _RTD_rTDValue),
        (u'rTDUnits', _RTD_rTDUnits),
        (u'rTDAccuracy', _RTD_rTDAccuracy),
        ])
    RTD._ext = []
    
    #-----< RTDUnits >-----#
    RTDUnits = ENUM(name=u'RTDUnits', mode=MODE_TYPE)
    RTDUnits._cont = ASN1Dict([(u'microseconds', 0), (u'hundredsofnanoseconds', 1), (u'tensofnanoseconds', 2), (u'nanoseconds', 3), (u'tenthsofnanoseconds', 4)])
    RTDUnits._ext = []
    
    #-----< ReportedLocation >-----#
    ReportedLocation = SEQ(name=u'ReportedLocation', mode=MODE_TYPE)
    _ReportedLocation_locationEncodingDescriptor = ENUM(name=u'locationEncodingDescriptor', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'LocationEncodingDescriptor')))
    _ReportedLocation_locationData = SEQ(name=u'locationData', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'LocationData')))
    ReportedLocation._cont = ASN1Dict([
        (u'locationEncodingDescriptor', _ReportedLocation_locationEncodingDescriptor),
        (u'locationData', _ReportedLocation_locationData),
        ])
    ReportedLocation._ext = []
    
    #-----< LocationEncodingDescriptor >-----#
    LocationEncodingDescriptor = ENUM(name=u'LocationEncodingDescriptor', mode=MODE_TYPE)
    LocationEncodingDescriptor._cont = ASN1Dict([(u'lCI', 0), (u'aSN1', 1)])
    LocationEncodingDescriptor._ext = []
    
    #-----< LocationData >-----#
    LocationData = SEQ(name=u'LocationData', mode=MODE_TYPE)
    _LocationData_locationAccuracy = INT(name=u'locationAccuracy', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LocationData_locationAccuracy._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    _LocationData_locationValue = OCT_STR(name=u'locationValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LocationData_locationValue._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    LocationData._cont = ASN1Dict([
        (u'locationAccuracy', _LocationData_locationAccuracy),
        (u'locationValue', _LocationData_locationValue),
        ])
    LocationData._ext = []
    
    #-----< WimaxBSInformation >-----#
    WimaxBSInformation = SEQ(name=u'WimaxBSInformation', mode=MODE_TYPE)
    _WimaxBSInformation_wimaxBsID = SEQ(name=u'wimaxBsID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'WimaxBsID')))
    _WimaxBSInformation_wimaxRTD = SEQ(name=u'wimaxRTD', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'WimaxRTD')), opt=True)
    _WimaxBSInformation_wimaxNMRList = SEQ_OF(name=u'wimaxNMRList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'WimaxNMRList')), opt=True)
    WimaxBSInformation._cont = ASN1Dict([
        (u'wimaxBsID', _WimaxBSInformation_wimaxBsID),
        (u'wimaxRTD', _WimaxBSInformation_wimaxRTD),
        (u'wimaxNMRList', _WimaxBSInformation_wimaxNMRList),
        ])
    WimaxBSInformation._ext = []
    
    #-----< WimaxBsID >-----#
    WimaxBsID = SEQ(name=u'WimaxBsID', mode=MODE_TYPE)
    _WimaxBsID_bsID_MSB = BIT_STR(name=u'bsID-MSB', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WimaxBsID_bsID_MSB._const_sz = ASN1Set(rv=[24], rr=[], ev=None, er=[])
    _WimaxBsID_bsID_LSB = BIT_STR(name=u'bsID-LSB', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _WimaxBsID_bsID_LSB._const_sz = ASN1Set(rv=[24], rr=[], ev=None, er=[])
    WimaxBsID._cont = ASN1Dict([
        (u'bsID-MSB', _WimaxBsID_bsID_MSB),
        (u'bsID-LSB', _WimaxBsID_bsID_LSB),
        ])
    WimaxBsID._ext = []
    
    #-----< WimaxRTD >-----#
    WimaxRTD = SEQ(name=u'WimaxRTD', mode=MODE_TYPE)
    _WimaxRTD_rTD = INT(name=u'rTD', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _WimaxRTD_rTD._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _WimaxRTD_rTDstd = INT(name=u'rTDstd', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WimaxRTD_rTDstd._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    WimaxRTD._cont = ASN1Dict([
        (u'rTD', _WimaxRTD_rTD),
        (u'rTDstd', _WimaxRTD_rTDstd),
        ])
    WimaxRTD._ext = []
    
    #-----< WimaxNMRList >-----#
    WimaxNMRList = SEQ_OF(name=u'WimaxNMRList', mode=MODE_TYPE)
    _WimaxNMRList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ILP-Components', 'WimaxNMR')))
    WimaxNMRList._cont = _WimaxNMRList__item_
    WimaxNMRList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< WimaxNMR >-----#
    WimaxNMR = SEQ(name=u'WimaxNMR', mode=MODE_TYPE)
    _WimaxNMR_wimaxBsID = SEQ(name=u'wimaxBsID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'WimaxBsID')))
    _WimaxNMR_relDelay = INT(name=u'relDelay', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WimaxNMR_relDelay._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _WimaxNMR_relDelaystd = INT(name=u'relDelaystd', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WimaxNMR_relDelaystd._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    _WimaxNMR_rSSI = INT(name=u'rSSI', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WimaxNMR_rSSI._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _WimaxNMR_rSSIstd = INT(name=u'rSSIstd', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WimaxNMR_rSSIstd._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _WimaxNMR_bSTxPower = INT(name=u'bSTxPower', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WimaxNMR_bSTxPower._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _WimaxNMR_cINR = INT(name=u'cINR', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WimaxNMR_cINR._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _WimaxNMR_cINRstd = INT(name=u'cINRstd', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WimaxNMR_cINRstd._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _WimaxNMR_bSLocation = SEQ(name=u'bSLocation', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'ReportedLocation')), opt=True)
    WimaxNMR._cont = ASN1Dict([
        (u'wimaxBsID', _WimaxNMR_wimaxBsID),
        (u'relDelay', _WimaxNMR_relDelay),
        (u'relDelaystd', _WimaxNMR_relDelaystd),
        (u'rSSI', _WimaxNMR_rSSI),
        (u'rSSIstd', _WimaxNMR_rSSIstd),
        (u'bSTxPower', _WimaxNMR_bSTxPower),
        (u'cINR', _WimaxNMR_cINR),
        (u'cINRstd', _WimaxNMR_cINRstd),
        (u'bSLocation', _WimaxNMR_bSLocation),
        ])
    WimaxNMR._ext = []
    
    #-----< maxWimaxBSMeas >-----#
    maxWimaxBSMeas = INT(name=u'maxWimaxBSMeas', mode=MODE_VALUE)
    maxWimaxBSMeas._val = 32
    
    #-----< FrequencyInfo >-----#
    FrequencyInfo = SEQ(name=u'FrequencyInfo', mode=MODE_TYPE)
    _FrequencyInfo_modeSpecificInfo = CHOICE(name=u'modeSpecificInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __FrequencyInfo_modeSpecificInfo_fdd = SEQ(name=u'fdd', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'FrequencyInfoFDD')))
    __FrequencyInfo_modeSpecificInfo_tdd = SEQ(name=u'tdd', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'FrequencyInfoTDD')))
    _FrequencyInfo_modeSpecificInfo._cont = ASN1Dict([
        (u'fdd', __FrequencyInfo_modeSpecificInfo_fdd),
        (u'tdd', __FrequencyInfo_modeSpecificInfo_tdd),
        ])
    _FrequencyInfo_modeSpecificInfo._ext = []
    FrequencyInfo._cont = ASN1Dict([
        (u'modeSpecificInfo', _FrequencyInfo_modeSpecificInfo),
        ])
    FrequencyInfo._ext = []
    
    #-----< FrequencyInfoFDD >-----#
    FrequencyInfoFDD = SEQ(name=u'FrequencyInfoFDD', mode=MODE_TYPE)
    _FrequencyInfoFDD_uarfcn_UL = INT(name=u'uarfcn-UL', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'UARFCN')), opt=True)
    _FrequencyInfoFDD_uarfcn_DL = INT(name=u'uarfcn-DL', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'UARFCN')))
    FrequencyInfoFDD._cont = ASN1Dict([
        (u'uarfcn-UL', _FrequencyInfoFDD_uarfcn_UL),
        (u'uarfcn-DL', _FrequencyInfoFDD_uarfcn_DL),
        ])
    FrequencyInfoFDD._ext = []
    
    #-----< FrequencyInfoTDD >-----#
    FrequencyInfoTDD = SEQ(name=u'FrequencyInfoTDD', mode=MODE_TYPE)
    _FrequencyInfoTDD_uarfcn_Nt = INT(name=u'uarfcn-Nt', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'UARFCN')))
    FrequencyInfoTDD._cont = ASN1Dict([
        (u'uarfcn-Nt', _FrequencyInfoTDD_uarfcn_Nt),
        ])
    FrequencyInfoTDD._ext = []
    
    #-----< UARFCN >-----#
    UARFCN = INT(name=u'UARFCN', mode=MODE_TYPE)
    UARFCN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16383)], ev=None, er=[])
    
    #-----< NMR >-----#
    NMR = SEQ_OF(name=u'NMR', mode=MODE_TYPE)
    _NMR__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ILP-Components', 'NMRelement')))
    NMR._cont = _NMR__item_
    NMR._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    
    #-----< NMRelement >-----#
    NMRelement = SEQ(name=u'NMRelement', mode=MODE_TYPE)
    _NMRelement_aRFCN = INT(name=u'aRFCN', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NMRelement_aRFCN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    _NMRelement_bSIC = INT(name=u'bSIC', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NMRelement_bSIC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _NMRelement_rxLev = INT(name=u'rxLev', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NMRelement_rxLev._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    NMRelement._cont = ASN1Dict([
        (u'aRFCN', _NMRelement_aRFCN),
        (u'bSIC', _NMRelement_bSIC),
        (u'rxLev', _NMRelement_rxLev),
        ])
    NMRelement._ext = []
    
    #-----< MeasuredResultsList >-----#
    MeasuredResultsList = SEQ_OF(name=u'MeasuredResultsList', mode=MODE_TYPE)
    _MeasuredResultsList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ILP-Components', 'MeasuredResults')))
    MeasuredResultsList._cont = _MeasuredResultsList__item_
    MeasuredResultsList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< MeasuredResults >-----#
    MeasuredResults = SEQ(name=u'MeasuredResults', mode=MODE_TYPE)
    _MeasuredResults_frequencyInfo = SEQ(name=u'frequencyInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'FrequencyInfo')), opt=True)
    _MeasuredResults_utra_CarrierRSSI = INT(name=u'utra-CarrierRSSI', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'UTRA-CarrierRSSI')), opt=True)
    _MeasuredResults_cellMeasuredResultsList = SEQ_OF(name=u'cellMeasuredResultsList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'CellMeasuredResultsList')), opt=True)
    MeasuredResults._cont = ASN1Dict([
        (u'frequencyInfo', _MeasuredResults_frequencyInfo),
        (u'utra-CarrierRSSI', _MeasuredResults_utra_CarrierRSSI),
        (u'cellMeasuredResultsList', _MeasuredResults_cellMeasuredResultsList),
        ])
    MeasuredResults._ext = None
    
    #-----< CellMeasuredResultsList >-----#
    CellMeasuredResultsList = SEQ_OF(name=u'CellMeasuredResultsList', mode=MODE_TYPE)
    _CellMeasuredResultsList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ILP-Components', 'CellMeasuredResults')))
    CellMeasuredResultsList._cont = _CellMeasuredResultsList__item_
    CellMeasuredResultsList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< UTRA-CarrierRSSI >-----#
    UTRA_CarrierRSSI = INT(name=u'UTRA-CarrierRSSI', mode=MODE_TYPE)
    UTRA_CarrierRSSI._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< CellMeasuredResults >-----#
    CellMeasuredResults = SEQ(name=u'CellMeasuredResults', mode=MODE_TYPE)
    _CellMeasuredResults_cellIdentity = INT(name=u'cellIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CellMeasuredResults_cellIdentity._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=268435455)], ev=None, er=[])
    _CellMeasuredResults_modeSpecificInfo = CHOICE(name=u'modeSpecificInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CellMeasuredResults_modeSpecificInfo_fdd = SEQ(name=u'fdd', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CellMeasuredResults_modeSpecificInfo_fdd_primaryCPICH_Info = SEQ(name=u'primaryCPICH-Info', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'PrimaryCPICH-Info')))
    ___CellMeasuredResults_modeSpecificInfo_fdd_cpich_Ec_N0 = INT(name=u'cpich-Ec-N0', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'CPICH-Ec-N0')), opt=True)
    ___CellMeasuredResults_modeSpecificInfo_fdd_cpich_RSCP = INT(name=u'cpich-RSCP', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'CPICH-RSCP')), opt=True)
    ___CellMeasuredResults_modeSpecificInfo_fdd_pathloss = INT(name=u'pathloss', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'Pathloss')), opt=True)
    __CellMeasuredResults_modeSpecificInfo_fdd._cont = ASN1Dict([
        (u'primaryCPICH-Info', ___CellMeasuredResults_modeSpecificInfo_fdd_primaryCPICH_Info),
        (u'cpich-Ec-N0', ___CellMeasuredResults_modeSpecificInfo_fdd_cpich_Ec_N0),
        (u'cpich-RSCP', ___CellMeasuredResults_modeSpecificInfo_fdd_cpich_RSCP),
        (u'pathloss', ___CellMeasuredResults_modeSpecificInfo_fdd_pathloss),
        ])
    __CellMeasuredResults_modeSpecificInfo_fdd._ext = None
    __CellMeasuredResults_modeSpecificInfo_tdd = SEQ(name=u'tdd', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CellMeasuredResults_modeSpecificInfo_tdd_cellParametersID = INT(name=u'cellParametersID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'CellParametersID')))
    ___CellMeasuredResults_modeSpecificInfo_tdd_proposedTGSN = INT(name=u'proposedTGSN', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'TGSN')), opt=True)
    ___CellMeasuredResults_modeSpecificInfo_tdd_primaryCCPCH_RSCP = INT(name=u'primaryCCPCH-RSCP', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'PrimaryCCPCH-RSCP')), opt=True)
    ___CellMeasuredResults_modeSpecificInfo_tdd_pathloss = INT(name=u'pathloss', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'Pathloss')), opt=True)
    ___CellMeasuredResults_modeSpecificInfo_tdd_timeslotISCP_List = SEQ_OF(name=u'timeslotISCP-List', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'TimeslotISCP-List')), opt=True)
    __CellMeasuredResults_modeSpecificInfo_tdd._cont = ASN1Dict([
        (u'cellParametersID', ___CellMeasuredResults_modeSpecificInfo_tdd_cellParametersID),
        (u'proposedTGSN', ___CellMeasuredResults_modeSpecificInfo_tdd_proposedTGSN),
        (u'primaryCCPCH-RSCP', ___CellMeasuredResults_modeSpecificInfo_tdd_primaryCCPCH_RSCP),
        (u'pathloss', ___CellMeasuredResults_modeSpecificInfo_tdd_pathloss),
        (u'timeslotISCP-List', ___CellMeasuredResults_modeSpecificInfo_tdd_timeslotISCP_List),
        ])
    __CellMeasuredResults_modeSpecificInfo_tdd._ext = None
    _CellMeasuredResults_modeSpecificInfo._cont = ASN1Dict([
        (u'fdd', __CellMeasuredResults_modeSpecificInfo_fdd),
        (u'tdd', __CellMeasuredResults_modeSpecificInfo_tdd),
        ])
    _CellMeasuredResults_modeSpecificInfo._ext = None
    CellMeasuredResults._cont = ASN1Dict([
        (u'cellIdentity', _CellMeasuredResults_cellIdentity),
        (u'modeSpecificInfo', _CellMeasuredResults_modeSpecificInfo),
        ])
    CellMeasuredResults._ext = None
    
    #-----< CellParametersID >-----#
    CellParametersID = INT(name=u'CellParametersID', mode=MODE_TYPE)
    CellParametersID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< TGSN >-----#
    TGSN = INT(name=u'TGSN', mode=MODE_TYPE)
    TGSN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=14)], ev=None, er=[])
    
    #-----< PrimaryCCPCH-RSCP >-----#
    PrimaryCCPCH_RSCP = INT(name=u'PrimaryCCPCH-RSCP', mode=MODE_TYPE)
    PrimaryCCPCH_RSCP._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< TimeslotISCP >-----#
    TimeslotISCP = INT(name=u'TimeslotISCP', mode=MODE_TYPE)
    TimeslotISCP._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< TimeslotISCP-List >-----#
    TimeslotISCP_List = SEQ_OF(name=u'TimeslotISCP-List', mode=MODE_TYPE)
    _TimeslotISCP_List__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ILP-Components', 'TimeslotISCP')))
    TimeslotISCP_List._cont = _TimeslotISCP_List__item_
    TimeslotISCP_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=14)], ev=None, er=[])
    
    #-----< PrimaryCPICH-Info >-----#
    PrimaryCPICH_Info = SEQ(name=u'PrimaryCPICH-Info', mode=MODE_TYPE)
    _PrimaryCPICH_Info_primaryScramblingCode = INT(name=u'primaryScramblingCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PrimaryCPICH_Info_primaryScramblingCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=511)], ev=None, er=[])
    PrimaryCPICH_Info._cont = ASN1Dict([
        (u'primaryScramblingCode', _PrimaryCPICH_Info_primaryScramblingCode),
        ])
    PrimaryCPICH_Info._ext = None
    
    #-----< CPICH-Ec-N0 >-----#
    CPICH_Ec_N0 = INT(name=u'CPICH-Ec-N0', mode=MODE_TYPE)
    CPICH_Ec_N0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    
    #-----< CPICH-RSCP >-----#
    CPICH_RSCP = INT(name=u'CPICH-RSCP', mode=MODE_TYPE)
    CPICH_RSCP._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< Pathloss >-----#
    Pathloss = INT(name=u'Pathloss', mode=MODE_TYPE)
    Pathloss._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=46, ub=173)], ev=None, er=[])
    
    #-----< maxCellMeas >-----#
    maxCellMeas = INT(name=u'maxCellMeas', mode=MODE_VALUE)
    maxCellMeas._val = 32
    
    #-----< maxFreq >-----#
    maxFreq = INT(name=u'maxFreq', mode=MODE_VALUE)
    maxFreq._val = 8
    
    #-----< maxTS >-----#
    maxTS = INT(name=u'maxTS', mode=MODE_VALUE)
    maxTS._val = 14
    
    #-----< UTRAN-GPSReferenceTimeAssistance >-----#
    UTRAN_GPSReferenceTimeAssistance = SEQ(name=u'UTRAN-GPSReferenceTimeAssistance', mode=MODE_TYPE)
    _UTRAN_GPSReferenceTimeAssistance_utran_GPSReferenceTime = SEQ(name=u'utran-GPSReferenceTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'UTRAN-GPSReferenceTime')))
    _UTRAN_GPSReferenceTimeAssistance_gpsReferenceTimeUncertainty = INT(name=u'gpsReferenceTimeUncertainty', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UTRAN_GPSReferenceTimeAssistance_gpsReferenceTimeUncertainty._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    _UTRAN_GPSReferenceTimeAssistance_utranGPSDriftRate = ENUM(name=u'utranGPSDriftRate', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'UTRANGPSDriftRate')), opt=True)
    UTRAN_GPSReferenceTimeAssistance._cont = ASN1Dict([
        (u'utran-GPSReferenceTime', _UTRAN_GPSReferenceTimeAssistance_utran_GPSReferenceTime),
        (u'gpsReferenceTimeUncertainty', _UTRAN_GPSReferenceTimeAssistance_gpsReferenceTimeUncertainty),
        (u'utranGPSDriftRate', _UTRAN_GPSReferenceTimeAssistance_utranGPSDriftRate),
        ])
    UTRAN_GPSReferenceTimeAssistance._ext = None
    
    #-----< UTRAN-GPSReferenceTime >-----#
    UTRAN_GPSReferenceTime = SEQ(name=u'UTRAN-GPSReferenceTime', mode=MODE_TYPE)
    _UTRAN_GPSReferenceTime_utran_GPSTimingOfCell = SEQ(name=u'utran-GPSTimingOfCell', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UTRAN_GPSReferenceTime_utran_GPSTimingOfCell_ms_part = INT(name=u'ms-part', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UTRAN_GPSReferenceTime_utran_GPSTimingOfCell_ms_part._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    __UTRAN_GPSReferenceTime_utran_GPSTimingOfCell_ls_part = INT(name=u'ls-part', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UTRAN_GPSReferenceTime_utran_GPSTimingOfCell_ls_part._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    _UTRAN_GPSReferenceTime_utran_GPSTimingOfCell._cont = ASN1Dict([
        (u'ms-part', __UTRAN_GPSReferenceTime_utran_GPSTimingOfCell_ms_part),
        (u'ls-part', __UTRAN_GPSReferenceTime_utran_GPSTimingOfCell_ls_part),
        ])
    _UTRAN_GPSReferenceTime_utran_GPSTimingOfCell._ext = None
    _UTRAN_GPSReferenceTime_modeSpecificInfo = CHOICE(name=u'modeSpecificInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __UTRAN_GPSReferenceTime_modeSpecificInfo_fdd = SEQ(name=u'fdd', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UTRAN_GPSReferenceTime_modeSpecificInfo_fdd_referenceIdentity = SEQ(name=u'referenceIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'PrimaryCPICH-Info')))
    __UTRAN_GPSReferenceTime_modeSpecificInfo_fdd._cont = ASN1Dict([
        (u'referenceIdentity', ___UTRAN_GPSReferenceTime_modeSpecificInfo_fdd_referenceIdentity),
        ])
    __UTRAN_GPSReferenceTime_modeSpecificInfo_fdd._ext = None
    __UTRAN_GPSReferenceTime_modeSpecificInfo_tdd = SEQ(name=u'tdd', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UTRAN_GPSReferenceTime_modeSpecificInfo_tdd_referenceIdentity = INT(name=u'referenceIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'CellParametersID')))
    __UTRAN_GPSReferenceTime_modeSpecificInfo_tdd._cont = ASN1Dict([
        (u'referenceIdentity', ___UTRAN_GPSReferenceTime_modeSpecificInfo_tdd_referenceIdentity),
        ])
    __UTRAN_GPSReferenceTime_modeSpecificInfo_tdd._ext = None
    _UTRAN_GPSReferenceTime_modeSpecificInfo._cont = ASN1Dict([
        (u'fdd', __UTRAN_GPSReferenceTime_modeSpecificInfo_fdd),
        (u'tdd', __UTRAN_GPSReferenceTime_modeSpecificInfo_tdd),
        ])
    _UTRAN_GPSReferenceTime_modeSpecificInfo._ext = None
    _UTRAN_GPSReferenceTime_sfn = INT(name=u'sfn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTRAN_GPSReferenceTime_sfn._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4095)], ev=None, er=[])
    UTRAN_GPSReferenceTime._cont = ASN1Dict([
        (u'utran-GPSTimingOfCell', _UTRAN_GPSReferenceTime_utran_GPSTimingOfCell),
        (u'modeSpecificInfo', _UTRAN_GPSReferenceTime_modeSpecificInfo),
        (u'sfn', _UTRAN_GPSReferenceTime_sfn),
        ])
    UTRAN_GPSReferenceTime._ext = None
    
    #-----< UTRANGPSDriftRate >-----#
    UTRANGPSDriftRate = ENUM(name=u'UTRANGPSDriftRate', mode=MODE_TYPE)
    UTRANGPSDriftRate._cont = ASN1Dict([(u'utran-GPSDrift0', 0), (u'utran-GPSDrift1', 1), (u'utran-GPSDrift2', 2), (u'utran-GPSDrift5', 3), (u'utran-GPSDrift10', 4), (u'utran-GPSDrift15', 5), (u'utran-GPSDrift25', 6), (u'utran-GPSDrift50', 7), (u'utran-GPSDrift-1', 8), (u'utran-GPSDrift-2', 9), (u'utran-GPSDrift-5', 10), (u'utran-GPSDrift-10', 11), (u'utran-GPSDrift-15', 12), (u'utran-GPSDrift-25', 13), (u'utran-GPSDrift-50', 14)])
    UTRANGPSDriftRate._ext = None
    
    #-----< UTRAN-GANSSReferenceTimeAssistance >-----#
    UTRAN_GANSSReferenceTimeAssistance = SEQ(name=u'UTRAN-GANSSReferenceTimeAssistance', mode=MODE_TYPE)
    _UTRAN_GANSSReferenceTimeAssistance_ganssTimeID = INT(name=u'ganssTimeID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTRAN_GANSSReferenceTimeAssistance_ganssTimeID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _UTRAN_GANSSReferenceTimeAssistance_utran_GANSSReferenceTime = SEQ(name=u'utran-GANSSReferenceTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'UTRAN-GANSSReferenceTime')))
    _UTRAN_GANSSReferenceTimeAssistance_ganssDay = INT(name=u'ganssDay', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UTRAN_GANSSReferenceTimeAssistance_ganssDay._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8191)], ev=None, er=[])
    _UTRAN_GANSSReferenceTimeAssistance_utranGANSSDriftRate = ENUM(name=u'utranGANSSDriftRate', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'UTRANGANSSDriftRate')), opt=True)
    UTRAN_GANSSReferenceTimeAssistance._cont = ASN1Dict([
        (u'ganssTimeID', _UTRAN_GANSSReferenceTimeAssistance_ganssTimeID),
        (u'utran-GANSSReferenceTime', _UTRAN_GANSSReferenceTimeAssistance_utran_GANSSReferenceTime),
        (u'ganssDay', _UTRAN_GANSSReferenceTimeAssistance_ganssDay),
        (u'utranGANSSDriftRate', _UTRAN_GANSSReferenceTimeAssistance_utranGANSSDriftRate),
        ])
    UTRAN_GANSSReferenceTimeAssistance._ext = None
    
    #-----< UTRAN-GANSSReferenceTime >-----#
    UTRAN_GANSSReferenceTime = SEQ(name=u'UTRAN-GANSSReferenceTime', mode=MODE_TYPE)
    _UTRAN_GANSSReferenceTime_ganssTOD = INT(name=u'ganssTOD', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTRAN_GANSSReferenceTime_ganssTOD._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=86399)], ev=None, er=[])
    _UTRAN_GANSSReferenceTime_utran_GANSSTimingOfCell = INT(name=u'utran-GANSSTimingOfCell', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UTRAN_GANSSReferenceTime_utran_GANSSTimingOfCell._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3999999)], ev=None, er=[])
    _UTRAN_GANSSReferenceTime_modeSpecificInfo = CHOICE(name=u'modeSpecificInfo', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __UTRAN_GANSSReferenceTime_modeSpecificInfo_fdd = SEQ(name=u'fdd', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UTRAN_GANSSReferenceTime_modeSpecificInfo_fdd_referenceIdentity = SEQ(name=u'referenceIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'PrimaryCPICH-Info')))
    __UTRAN_GANSSReferenceTime_modeSpecificInfo_fdd._cont = ASN1Dict([
        (u'referenceIdentity', ___UTRAN_GANSSReferenceTime_modeSpecificInfo_fdd_referenceIdentity),
        ])
    __UTRAN_GANSSReferenceTime_modeSpecificInfo_fdd._ext = None
    __UTRAN_GANSSReferenceTime_modeSpecificInfo_tdd = SEQ(name=u'tdd', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UTRAN_GANSSReferenceTime_modeSpecificInfo_tdd_referenceIdentity = INT(name=u'referenceIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'CellParametersID')))
    __UTRAN_GANSSReferenceTime_modeSpecificInfo_tdd._cont = ASN1Dict([
        (u'referenceIdentity', ___UTRAN_GANSSReferenceTime_modeSpecificInfo_tdd_referenceIdentity),
        ])
    __UTRAN_GANSSReferenceTime_modeSpecificInfo_tdd._ext = None
    _UTRAN_GANSSReferenceTime_modeSpecificInfo._cont = ASN1Dict([
        (u'fdd', __UTRAN_GANSSReferenceTime_modeSpecificInfo_fdd),
        (u'tdd', __UTRAN_GANSSReferenceTime_modeSpecificInfo_tdd),
        ])
    _UTRAN_GANSSReferenceTime_modeSpecificInfo._ext = None
    _UTRAN_GANSSReferenceTime_sfn = INT(name=u'sfn', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTRAN_GANSSReferenceTime_sfn._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4095)], ev=None, er=[])
    _UTRAN_GANSSReferenceTime_ganss_TODUncertainty = INT(name=u'ganss-TODUncertainty', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UTRAN_GANSSReferenceTime_ganss_TODUncertainty._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    UTRAN_GANSSReferenceTime._cont = ASN1Dict([
        (u'ganssTOD', _UTRAN_GANSSReferenceTime_ganssTOD),
        (u'utran-GANSSTimingOfCell', _UTRAN_GANSSReferenceTime_utran_GANSSTimingOfCell),
        (u'modeSpecificInfo', _UTRAN_GANSSReferenceTime_modeSpecificInfo),
        (u'sfn', _UTRAN_GANSSReferenceTime_sfn),
        (u'ganss-TODUncertainty', _UTRAN_GANSSReferenceTime_ganss_TODUncertainty),
        ])
    UTRAN_GANSSReferenceTime._ext = []
    
    #-----< UTRANGANSSDriftRate >-----#
    UTRANGANSSDriftRate = ENUM(name=u'UTRANGANSSDriftRate', mode=MODE_TYPE)
    UTRANGANSSDriftRate._cont = ASN1Dict([(u'utran-GANSSDrift0', 0), (u'utran-GANSSDrift1', 1), (u'utran-GANSSDrift2', 2), (u'utran-GANSSDrift5', 3), (u'utran-GANSSDrift10', 4), (u'utran-GANSSDrift15', 5), (u'utran-GANSSDrift25', 6), (u'utran-GANSSDrift50', 7), (u'utran-GANSSDrift-1', 8), (u'utran-GANSSDrift-2', 9), (u'utran-GANSSDrift-5', 10), (u'utran-GANSSDrift-10', 11), (u'utran-GANSSDrift-15', 12), (u'utran-GANSSDrift-25', 13), (u'utran-GANSSDrift-50', 14)])
    UTRANGANSSDriftRate._ext = None
    
    #-----< StatusCode >-----#
    StatusCode = ENUM(name=u'StatusCode', mode=MODE_TYPE)
    StatusCode._cont = ASN1Dict([(u'unspecified', 0), (u'systemFailure', 1), (u'unexpectedMessage', 2), (u'protocolError', 3), (u'dataMissing', 4), (u'unexpectedDataValue', 5), (u'posMethodFailure', 6), (u'posMethodMismatch', 7), (u'posProtocolMismatch', 8), (u'targetSETnotReachable', 9), (u'versionNotSupported', 10), (u'resourceShortage', 11), (u'invalidSessionId', 12), (u'nonProxyModeNotSupported', 13), (u'proxyModeNotSupported', 14), (u'positioningNotPermitted', 15), (u'iLPTimeout', 16)])
    StatusCode._ext = []
    
    #-----< QoP >-----#
    QoP = SEQ(name=u'QoP', mode=MODE_TYPE)
    _QoP_horacc = INT(name=u'horacc', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _QoP_horacc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    _QoP_veracc = INT(name=u'veracc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _QoP_veracc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    _QoP_maxLocAge = INT(name=u'maxLocAge', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _QoP_maxLocAge._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _QoP_delay = INT(name=u'delay', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _QoP_delay._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    QoP._cont = ASN1Dict([
        (u'horacc', _QoP_horacc),
        (u'veracc', _QoP_veracc),
        (u'maxLocAge', _QoP_maxLocAge),
        (u'delay', _QoP_delay),
        ])
    QoP._ext = []
    
    #-----< Velocity >-----#
    Velocity = CHOICE(name=u'Velocity', mode=MODE_TYPE)
    _Velocity_horvel = SEQ(name=u'horvel', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'Horvel')))
    _Velocity_horandvervel = SEQ(name=u'horandvervel', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'Horandvervel')))
    _Velocity_horveluncert = SEQ(name=u'horveluncert', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'Horveluncert')))
    _Velocity_horandveruncert = SEQ(name=u'horandveruncert', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'Horandveruncert')))
    Velocity._cont = ASN1Dict([
        (u'horvel', _Velocity_horvel),
        (u'horandvervel', _Velocity_horandvervel),
        (u'horveluncert', _Velocity_horveluncert),
        (u'horandveruncert', _Velocity_horandveruncert),
        ])
    Velocity._ext = []
    
    #-----< Horvel >-----#
    Horvel = SEQ(name=u'Horvel', mode=MODE_TYPE)
    _Horvel_bearing = BIT_STR(name=u'bearing', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horvel_bearing._const_sz = ASN1Set(rv=[9], rr=[], ev=None, er=[])
    _Horvel_horspeed = BIT_STR(name=u'horspeed', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horvel_horspeed._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    Horvel._cont = ASN1Dict([
        (u'bearing', _Horvel_bearing),
        (u'horspeed', _Horvel_horspeed),
        ])
    Horvel._ext = []
    
    #-----< Horandvervel >-----#
    Horandvervel = SEQ(name=u'Horandvervel', mode=MODE_TYPE)
    _Horandvervel_verdirect = BIT_STR(name=u'verdirect', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horandvervel_verdirect._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _Horandvervel_bearing = BIT_STR(name=u'bearing', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horandvervel_bearing._const_sz = ASN1Set(rv=[9], rr=[], ev=None, er=[])
    _Horandvervel_horspeed = BIT_STR(name=u'horspeed', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horandvervel_horspeed._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    _Horandvervel_verspeed = BIT_STR(name=u'verspeed', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horandvervel_verspeed._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    Horandvervel._cont = ASN1Dict([
        (u'verdirect', _Horandvervel_verdirect),
        (u'bearing', _Horandvervel_bearing),
        (u'horspeed', _Horandvervel_horspeed),
        (u'verspeed', _Horandvervel_verspeed),
        ])
    Horandvervel._ext = []
    
    #-----< Horveluncert >-----#
    Horveluncert = SEQ(name=u'Horveluncert', mode=MODE_TYPE)
    _Horveluncert_bearing = BIT_STR(name=u'bearing', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horveluncert_bearing._const_sz = ASN1Set(rv=[9], rr=[], ev=None, er=[])
    _Horveluncert_horspeed = BIT_STR(name=u'horspeed', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horveluncert_horspeed._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    _Horveluncert_uncertspeed = BIT_STR(name=u'uncertspeed', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horveluncert_uncertspeed._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    Horveluncert._cont = ASN1Dict([
        (u'bearing', _Horveluncert_bearing),
        (u'horspeed', _Horveluncert_horspeed),
        (u'uncertspeed', _Horveluncert_uncertspeed),
        ])
    Horveluncert._ext = []
    
    #-----< Horandveruncert >-----#
    Horandveruncert = SEQ(name=u'Horandveruncert', mode=MODE_TYPE)
    _Horandveruncert_verdirect = BIT_STR(name=u'verdirect', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horandveruncert_verdirect._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _Horandveruncert_bearing = BIT_STR(name=u'bearing', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horandveruncert_bearing._const_sz = ASN1Set(rv=[9], rr=[], ev=None, er=[])
    _Horandveruncert_horspeed = BIT_STR(name=u'horspeed', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horandveruncert_horspeed._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    _Horandveruncert_verspeed = BIT_STR(name=u'verspeed', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horandveruncert_verspeed._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _Horandveruncert_horuncertspeed = BIT_STR(name=u'horuncertspeed', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horandveruncert_horuncertspeed._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _Horandveruncert_veruncertspeed = BIT_STR(name=u'veruncertspeed', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Horandveruncert_veruncertspeed._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    Horandveruncert._cont = ASN1Dict([
        (u'verdirect', _Horandveruncert_verdirect),
        (u'bearing', _Horandveruncert_bearing),
        (u'horspeed', _Horandveruncert_horspeed),
        (u'verspeed', _Horandveruncert_verspeed),
        (u'horuncertspeed', _Horandveruncert_horuncertspeed),
        (u'veruncertspeed', _Horandveruncert_veruncertspeed),
        ])
    Horandveruncert._ext = []
    
    #-----< PosMethod >-----#
    PosMethod = ENUM(name=u'PosMethod', mode=MODE_TYPE)
    PosMethod._cont = ASN1Dict([(u'agpsSETassisted', 0), (u'agpsSETbased', 1), (u'agpsSETassistedpref', 2), (u'agpsSETbasedpref', 3), (u'autonomousGPS', 4), (u'aFLT', 5), (u'eCID', 6), (u'eOTD', 7), (u'oTDOA', 8), (u'agnssSETassisted', 9), (u'agnssSETbased', 10), (u'agnssSETassistedpref', 11), (u'agnssSETbasedpref', 12), (u'autonomousGNSS', 13)])
    PosMethod._ext = []
    
    #-----< SPCSETKey >-----#
    SPCSETKey = BIT_STR(name=u'SPCSETKey', mode=MODE_TYPE)
    SPCSETKey._const_sz = ASN1Set(rv=[128], rr=[], ev=None, er=[])
    
    #-----< SPCTID >-----#
    SPCTID = SEQ(name=u'SPCTID', mode=MODE_TYPE)
    _SPCTID_rAND = BIT_STR(name=u'rAND', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SPCTID_rAND._const_sz = ASN1Set(rv=[128], rr=[], ev=None, er=[])
    _SPCTID_slpFQDN = STR_VIS(name=u'slpFQDN', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'FQDN')))
    _SPCTID_slpFQDN._const_alpha = ASN1Set(rv=[u'.', u'-'], rr=[ASN1RangeStr(lb=u'a', ub=u'z'), ASN1RangeStr(lb=u'A', ub=u'Z'), ASN1RangeStr(lb=u'0', ub=u'9')], ev=None, er=[])
    SPCTID._cont = ASN1Dict([
        (u'rAND', _SPCTID_rAND),
        (u'slpFQDN', _SPCTID_slpFQDN),
        ])
    SPCTID._ext = []
    
    #-----< SPCSETKeylifetime >-----#
    SPCSETKeylifetime = INT(name=u'SPCSETKeylifetime', mode=MODE_TYPE)
    SPCSETKeylifetime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=24)], ev=None, er=[])
    
    #-----< PosPayLoad >-----#
    PosPayLoad = CHOICE(name=u'PosPayLoad', mode=MODE_TYPE)
    _PosPayLoad_rrcPayload = OCT_STR(name=u'rrcPayload', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosPayLoad_rrcPayload._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8192)], ev=None, er=[])
    _PosPayLoad_rrlpPayload = OCT_STR(name=u'rrlpPayload', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PosPayLoad_rrlpPayload._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8192)], ev=None, er=[])
    _PosPayLoad_multiPosPayload = SEQ(name=u'multiPosPayload', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'MultiPosPayLoad')))
    PosPayLoad._cont = ASN1Dict([
        (u'rrcPayload', _PosPayLoad_rrcPayload),
        (u'rrlpPayload', _PosPayLoad_rrlpPayload),
        (u'multiPosPayload', _PosPayLoad_multiPosPayload),
        ])
    PosPayLoad._ext = []
    
    #-----< MultiPosPayLoad >-----#
    MultiPosPayLoad = SEQ(name=u'MultiPosPayLoad', mode=MODE_TYPE)
    _MultiPosPayLoad_lPPPayload = SEQ_OF(name=u'lPPPayload', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MultiPosPayLoad_lPPPayload__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    __MultiPosPayLoad_lPPPayload__item_._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=60000)], ev=None, er=[])
    _MultiPosPayLoad_lPPPayload._cont = __MultiPosPayLoad_lPPPayload__item_
    _MultiPosPayLoad_lPPPayload._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    _MultiPosPayLoad_tia801Payload = SEQ_OF(name=u'tia801Payload', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MultiPosPayLoad_tia801Payload__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    __MultiPosPayLoad_tia801Payload__item_._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=60000)], ev=None, er=[])
    _MultiPosPayLoad_tia801Payload._cont = __MultiPosPayLoad_tia801Payload__item_
    _MultiPosPayLoad_tia801Payload._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    MultiPosPayLoad._cont = ASN1Dict([
        (u'lPPPayload', _MultiPosPayLoad_lPPPayload),
        (u'tia801Payload', _MultiPosPayLoad_tia801Payload),
        ])
    MultiPosPayLoad._ext = []
    
    #-----< SPCStatusCode >-----#
    SPCStatusCode = ENUM(name=u'SPCStatusCode', mode=MODE_TYPE)
    SPCStatusCode._cont = ASN1Dict([(u'operational', 0), (u'notOperational', 1), (u'reducedAvailability', 2)])
    SPCStatusCode._ext = []
    
    #-----< maxPosSize >-----#
    maxPosSize = INT(name=u'maxPosSize', mode=MODE_VALUE)
    maxPosSize._val = 1024
    
    _all_ = [
        _Version_maj,
        _Version_min,
        _Version_servind,
        Version,
        _SessionID2_slcSessionID,
        _SessionID2_setSessionID,
        _SessionID2_spcSessionID,
        SessionID2,
        _SetSessionID_sessionId,
        _SetSessionID_setId,
        SetSessionID,
        _SETId_msisdn,
        _SETId_mdn,
        _SETId_min,
        _SETId_imsi,
        _SETId_nai,
        _SETId_iPAddress,
        SETId,
        _SlcSessionID_sessionID,
        _SlcSessionID_slcId,
        SlcSessionID,
        _SpcSessionID_sessionID,
        _SpcSessionID_spcId,
        SpcSessionID,
        _IPAddress_ipv4Address,
        _IPAddress_ipv6Address,
        IPAddress,
        _NodeAddress_iPAddress,
        _NodeAddress_fqdn,
        NodeAddress,
        FQDN,
        _LocationId_cellInfo,
        _LocationId_status,
        LocationId,
        Status,
        _MultipleLocationIds__item_,
        MultipleLocationIds,
        _LocationIdData_locationId,
        _LocationIdData_relativetimestamp,
        _LocationIdData_servingFlag,
        LocationIdData,
        RelativeTime,
        maxLidSize,
        _SETCapabilities_posTechnology,
        _SETCapabilities_prefMethod,
        _SETCapabilities_posProtocol,
        _SETCapabilities_supportedBearers,
        SETCapabilities,
        _PosTechnology_agpsSETassisted,
        _PosTechnology_agpsSETBased,
        _PosTechnology_autonomousGPS,
        _PosTechnology_aFLT,
        _PosTechnology_eCID,
        _PosTechnology_eOTD,
        _PosTechnology_oTDOA,
        _PosTechnology_gANSSPositionMethods,
        PosTechnology,
        _GANSSPositionMethods__item_,
        GANSSPositionMethods,
        _GANSSPositionMethod_ganssId,
        _GANSSPositionMethod_ganssSBASid,
        _GANSSPositionMethod_gANSSPositioningMethodTypes,
        _GANSSPositionMethod_gANSSSignals,
        GANSSPositionMethod,
        _GANSSPositioningMethodTypes_setAssisted,
        _GANSSPositioningMethodTypes_setBased,
        _GANSSPositioningMethodTypes_autonomous,
        GANSSPositioningMethodTypes,
        GANSSSignals,
        PrefMethod,
        _PosProtocol_tia801,
        _PosProtocol_rrlp,
        _PosProtocol_rrc,
        _PosProtocol_lpp,
        _PosProtocol_posProtocolVersionRRLP,
        _PosProtocol_posProtocolVersionRRC,
        _PosProtocol_posProtocolVersionTIA801,
        _PosProtocol_posProtocolVersionLPP,
        PosProtocol,
        _PosProtocolVersion3GPP_majorVersionField,
        _PosProtocolVersion3GPP_technicalVersionField,
        _PosProtocolVersion3GPP_editorialVersionField,
        PosProtocolVersion3GPP,
        _PosProtocolVersion3GPP2__item_,
        PosProtocolVersion3GPP2,
        _Supported3GPP2PosProtocolVersion_revisionNumber,
        _Supported3GPP2PosProtocolVersion_pointReleaseNumber,
        _Supported3GPP2PosProtocolVersion_internalEditLevel,
        Supported3GPP2PosProtocolVersion,
        _SupportedBearers_gsm,
        _SupportedBearers_wcdma,
        _SupportedBearers_lte,
        _SupportedBearers_cdma,
        _SupportedBearers_hprd,
        _SupportedBearers_umb,
        _SupportedBearers_wlan,
        _SupportedBearers_wiMAX,
        SupportedBearers,
        _CellInfo_gsmCell,
        _CellInfo_wcdmaCell,
        _CellInfo_cdmaCell,
        _CellInfo_hrpdCell,
        _CellInfo_umbCell,
        _CellInfo_lteCell,
        _CellInfo_wlanAP,
        _CellInfo_wimaxBS,
        CellInfo,
        __UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell_ms_part,
        __UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell_ls_part,
        _UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell,
        ___UTRAN_GPSReferenceTimeResult_modeSpecificInfo_fdd_referenceIdentity,
        __UTRAN_GPSReferenceTimeResult_modeSpecificInfo_fdd,
        ___UTRAN_GPSReferenceTimeResult_modeSpecificInfo_tdd_referenceIdentity,
        __UTRAN_GPSReferenceTimeResult_modeSpecificInfo_tdd,
        _UTRAN_GPSReferenceTimeResult_modeSpecificInfo,
        _UTRAN_GPSReferenceTimeResult_sfn,
        _UTRAN_GPSReferenceTimeResult_gpsReferenceTimeUncertainty,
        UTRAN_GPSReferenceTimeResult,
        _UTRAN_GANSSReferenceTimeResult_ganssTimeID,
        _UTRAN_GANSSReferenceTimeResult_set_GANSSReferenceTime,
        UTRAN_GANSSReferenceTimeResult,
        __SET_GANSSReferenceTime_set_GANSSTimingOfCell_ms_part,
        __SET_GANSSReferenceTime_set_GANSSTimingOfCell_ls_part,
        _SET_GANSSReferenceTime_set_GANSSTimingOfCell,
        ___SET_GANSSReferenceTime_modeSpecificInfo_fdd_referenceIdentity,
        __SET_GANSSReferenceTime_modeSpecificInfo_fdd,
        ___SET_GANSSReferenceTime_modeSpecificInfo_tdd_referenceIdentity,
        __SET_GANSSReferenceTime_modeSpecificInfo_tdd,
        _SET_GANSSReferenceTime_modeSpecificInfo,
        _SET_GANSSReferenceTime_sfn,
        _SET_GANSSReferenceTime_ganss_TODUncertainty,
        SET_GANSSReferenceTime,
        _GNSSPosTechnology_gps,
        _GNSSPosTechnology_galileo,
        _GNSSPosTechnology_sbas,
        _GNSSPosTechnology_modernized_gps,
        _GNSSPosTechnology_qzss,
        _GNSSPosTechnology_glonass,
        GNSSPosTechnology,
        _Position_timestamp,
        _Position_positionEstimate,
        _Position_velocity,
        Position,
        _PositionEstimate_latitudeSign,
        _PositionEstimate_latitude,
        _PositionEstimate_longitude,
        __PositionEstimate_uncertainty_uncertaintySemiMajor,
        __PositionEstimate_uncertainty_uncertaintySemiMinor,
        __PositionEstimate_uncertainty_orientationMajorAxis,
        _PositionEstimate_uncertainty,
        _PositionEstimate_confidence,
        _PositionEstimate_altitudeInfo,
        PositionEstimate,
        _AltitudeInfo_altitudeDirection,
        _AltitudeInfo_altitude,
        _AltitudeInfo_altUncertainty,
        AltitudeInfo,
        _CdmaCellInformation_refNID,
        _CdmaCellInformation_refSID,
        _CdmaCellInformation_refBASEID,
        _CdmaCellInformation_refBASELAT,
        _CdmaCellInformation_reBASELONG,
        _CdmaCellInformation_refREFPN,
        _CdmaCellInformation_refWeekNumber,
        _CdmaCellInformation_refSeconds,
        CdmaCellInformation,
        _GsmCellInformation_refMCC,
        _GsmCellInformation_refMNC,
        _GsmCellInformation_refLAC,
        _GsmCellInformation_refCI,
        _GsmCellInformation_nMR,
        _GsmCellInformation_tA,
        GsmCellInformation,
        _WcdmaCellInformation_refMCC,
        _WcdmaCellInformation_refMNC,
        _WcdmaCellInformation_refUC,
        _WcdmaCellInformation_frequencyInfo,
        _WcdmaCellInformation_primaryScramblingCode,
        _WcdmaCellInformation_measuredResultsList,
        _WcdmaCellInformation_cellParametersId,
        _WcdmaCellInformation_timingAdvance,
        WcdmaCellInformation,
        _TimingAdvance_tA,
        _TimingAdvance_tAResolution,
        _TimingAdvance_chipRate,
        TimingAdvance,
        TAResolution,
        ChipRate,
        _HrpdCellInformation_refSECTORID,
        _HrpdCellInformation_refBASELAT,
        _HrpdCellInformation_reBASELONG,
        _HrpdCellInformation_refWeekNumber,
        _HrpdCellInformation_refSeconds,
        HrpdCellInformation,
        _UmbCellInformation_refSECTORID,
        _UmbCellInformation_refMCC,
        _UmbCellInformation_refMNC,
        _UmbCellInformation_refBASELAT,
        _UmbCellInformation_reBASELONG,
        _UmbCellInformation_refWeekNumber,
        _UmbCellInformation_refSeconds,
        UmbCellInformation,
        _LteCellInformation_cellGlobalIdEUTRA,
        _LteCellInformation_physCellId,
        _LteCellInformation_trackingAreaCode,
        _LteCellInformation_rsrpResult,
        _LteCellInformation_rsrqResult,
        _LteCellInformation_tA,
        _LteCellInformation_measResultListEUTRA,
        _LteCellInformation_earfcn,
        LteCellInformation,
        _MeasResultListEUTRA__item_,
        MeasResultListEUTRA,
        _MeasResultEUTRA_physCellId,
        __MeasResultEUTRA_cgi_Info_cellGlobalId,
        __MeasResultEUTRA_cgi_Info_trackingAreaCode,
        _MeasResultEUTRA_cgi_Info,
        __MeasResultEUTRA_measResult_rsrpResult,
        __MeasResultEUTRA_measResult_rsrqResult,
        __MeasResultEUTRA_measResult_earfcn,
        _MeasResultEUTRA_measResult,
        MeasResultEUTRA,
        PhysCellId,
        TrackingAreaCode,
        _CellGlobalIdEUTRA_plmn_Identity,
        _CellGlobalIdEUTRA_cellIdentity,
        CellGlobalIdEUTRA,
        _PLMN_Identity_mcc,
        _PLMN_Identity_mnc,
        PLMN_Identity,
        CellIdentity,
        _MCC__item_,
        MCC,
        _MNC__item_,
        MNC,
        MCC_MNC_Digit,
        RSRP_Range,
        RSRQ_Range,
        maxCellReport,
        _WlanAPInformation_apMACAddress,
        _WlanAPInformation_apTransmitPower,
        _WlanAPInformation_apAntennaGain,
        _WlanAPInformation_apSignaltoNoise,
        _WlanAPInformation_apDeviceType,
        _WlanAPInformation_apSignalStrength,
        _WlanAPInformation_apChannelFrequency,
        _WlanAPInformation_apRoundTripDelay,
        _WlanAPInformation_setTransmitPower,
        _WlanAPInformation_setAntennaGain,
        _WlanAPInformation_setSignaltoNoise,
        _WlanAPInformation_setSignalStrength,
        _WlanAPInformation_apReportedLocation,
        WlanAPInformation,
        _RTD_rTDValue,
        _RTD_rTDUnits,
        _RTD_rTDAccuracy,
        RTD,
        RTDUnits,
        _ReportedLocation_locationEncodingDescriptor,
        _ReportedLocation_locationData,
        ReportedLocation,
        LocationEncodingDescriptor,
        _LocationData_locationAccuracy,
        _LocationData_locationValue,
        LocationData,
        _WimaxBSInformation_wimaxBsID,
        _WimaxBSInformation_wimaxRTD,
        _WimaxBSInformation_wimaxNMRList,
        WimaxBSInformation,
        _WimaxBsID_bsID_MSB,
        _WimaxBsID_bsID_LSB,
        WimaxBsID,
        _WimaxRTD_rTD,
        _WimaxRTD_rTDstd,
        WimaxRTD,
        _WimaxNMRList__item_,
        WimaxNMRList,
        _WimaxNMR_wimaxBsID,
        _WimaxNMR_relDelay,
        _WimaxNMR_relDelaystd,
        _WimaxNMR_rSSI,
        _WimaxNMR_rSSIstd,
        _WimaxNMR_bSTxPower,
        _WimaxNMR_cINR,
        _WimaxNMR_cINRstd,
        _WimaxNMR_bSLocation,
        WimaxNMR,
        maxWimaxBSMeas,
        __FrequencyInfo_modeSpecificInfo_fdd,
        __FrequencyInfo_modeSpecificInfo_tdd,
        _FrequencyInfo_modeSpecificInfo,
        FrequencyInfo,
        _FrequencyInfoFDD_uarfcn_UL,
        _FrequencyInfoFDD_uarfcn_DL,
        FrequencyInfoFDD,
        _FrequencyInfoTDD_uarfcn_Nt,
        FrequencyInfoTDD,
        UARFCN,
        _NMR__item_,
        NMR,
        _NMRelement_aRFCN,
        _NMRelement_bSIC,
        _NMRelement_rxLev,
        NMRelement,
        _MeasuredResultsList__item_,
        MeasuredResultsList,
        _MeasuredResults_frequencyInfo,
        _MeasuredResults_utra_CarrierRSSI,
        _MeasuredResults_cellMeasuredResultsList,
        MeasuredResults,
        _CellMeasuredResultsList__item_,
        CellMeasuredResultsList,
        UTRA_CarrierRSSI,
        _CellMeasuredResults_cellIdentity,
        ___CellMeasuredResults_modeSpecificInfo_fdd_primaryCPICH_Info,
        ___CellMeasuredResults_modeSpecificInfo_fdd_cpich_Ec_N0,
        ___CellMeasuredResults_modeSpecificInfo_fdd_cpich_RSCP,
        ___CellMeasuredResults_modeSpecificInfo_fdd_pathloss,
        __CellMeasuredResults_modeSpecificInfo_fdd,
        ___CellMeasuredResults_modeSpecificInfo_tdd_cellParametersID,
        ___CellMeasuredResults_modeSpecificInfo_tdd_proposedTGSN,
        ___CellMeasuredResults_modeSpecificInfo_tdd_primaryCCPCH_RSCP,
        ___CellMeasuredResults_modeSpecificInfo_tdd_pathloss,
        ___CellMeasuredResults_modeSpecificInfo_tdd_timeslotISCP_List,
        __CellMeasuredResults_modeSpecificInfo_tdd,
        _CellMeasuredResults_modeSpecificInfo,
        CellMeasuredResults,
        CellParametersID,
        TGSN,
        PrimaryCCPCH_RSCP,
        TimeslotISCP,
        _TimeslotISCP_List__item_,
        TimeslotISCP_List,
        _PrimaryCPICH_Info_primaryScramblingCode,
        PrimaryCPICH_Info,
        CPICH_Ec_N0,
        CPICH_RSCP,
        Pathloss,
        maxCellMeas,
        maxFreq,
        maxTS,
        _UTRAN_GPSReferenceTimeAssistance_utran_GPSReferenceTime,
        _UTRAN_GPSReferenceTimeAssistance_gpsReferenceTimeUncertainty,
        _UTRAN_GPSReferenceTimeAssistance_utranGPSDriftRate,
        UTRAN_GPSReferenceTimeAssistance,
        __UTRAN_GPSReferenceTime_utran_GPSTimingOfCell_ms_part,
        __UTRAN_GPSReferenceTime_utran_GPSTimingOfCell_ls_part,
        _UTRAN_GPSReferenceTime_utran_GPSTimingOfCell,
        ___UTRAN_GPSReferenceTime_modeSpecificInfo_fdd_referenceIdentity,
        __UTRAN_GPSReferenceTime_modeSpecificInfo_fdd,
        ___UTRAN_GPSReferenceTime_modeSpecificInfo_tdd_referenceIdentity,
        __UTRAN_GPSReferenceTime_modeSpecificInfo_tdd,
        _UTRAN_GPSReferenceTime_modeSpecificInfo,
        _UTRAN_GPSReferenceTime_sfn,
        UTRAN_GPSReferenceTime,
        UTRANGPSDriftRate,
        _UTRAN_GANSSReferenceTimeAssistance_ganssTimeID,
        _UTRAN_GANSSReferenceTimeAssistance_utran_GANSSReferenceTime,
        _UTRAN_GANSSReferenceTimeAssistance_ganssDay,
        _UTRAN_GANSSReferenceTimeAssistance_utranGANSSDriftRate,
        UTRAN_GANSSReferenceTimeAssistance,
        _UTRAN_GANSSReferenceTime_ganssTOD,
        _UTRAN_GANSSReferenceTime_utran_GANSSTimingOfCell,
        ___UTRAN_GANSSReferenceTime_modeSpecificInfo_fdd_referenceIdentity,
        __UTRAN_GANSSReferenceTime_modeSpecificInfo_fdd,
        ___UTRAN_GANSSReferenceTime_modeSpecificInfo_tdd_referenceIdentity,
        __UTRAN_GANSSReferenceTime_modeSpecificInfo_tdd,
        _UTRAN_GANSSReferenceTime_modeSpecificInfo,
        _UTRAN_GANSSReferenceTime_sfn,
        _UTRAN_GANSSReferenceTime_ganss_TODUncertainty,
        UTRAN_GANSSReferenceTime,
        UTRANGANSSDriftRate,
        StatusCode,
        _QoP_horacc,
        _QoP_veracc,
        _QoP_maxLocAge,
        _QoP_delay,
        QoP,
        _Velocity_horvel,
        _Velocity_horandvervel,
        _Velocity_horveluncert,
        _Velocity_horandveruncert,
        Velocity,
        _Horvel_bearing,
        _Horvel_horspeed,
        Horvel,
        _Horandvervel_verdirect,
        _Horandvervel_bearing,
        _Horandvervel_horspeed,
        _Horandvervel_verspeed,
        Horandvervel,
        _Horveluncert_bearing,
        _Horveluncert_horspeed,
        _Horveluncert_uncertspeed,
        Horveluncert,
        _Horandveruncert_verdirect,
        _Horandveruncert_bearing,
        _Horandveruncert_horspeed,
        _Horandveruncert_verspeed,
        _Horandveruncert_horuncertspeed,
        _Horandveruncert_veruncertspeed,
        Horandveruncert,
        PosMethod,
        SPCSETKey,
        _SPCTID_rAND,
        _SPCTID_slpFQDN,
        SPCTID,
        SPCSETKeylifetime,
        _PosPayLoad_rrcPayload,
        _PosPayLoad_rrlpPayload,
        _PosPayLoad_multiPosPayload,
        PosPayLoad,
        __MultiPosPayLoad_lPPPayload__item_,
        _MultiPosPayLoad_lPPPayload,
        __MultiPosPayLoad_tia801Payload__item_,
        _MultiPosPayLoad_tia801Payload,
        MultiPosPayLoad,
        SPCStatusCode,
        maxPosSize,
    ]

class ILP:

    _name_  = u'ILP'
    _oid_   = []
    
    _obj_ = [
        u'ILP-PDU',
        u'IlpMessage',
        ]
    _type_ = [
        u'ILP-PDU',
        u'IlpMessage',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< ILP-PDU >-----#
    ILP_PDU = SEQ(name=u'ILP-PDU', mode=MODE_TYPE)
    _ILP_PDU_length = INT(name=u'length', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ILP_PDU_length._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _ILP_PDU_version = SEQ(name=u'version', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'Version')))
    _ILP_PDU_sessionID2 = SEQ(name=u'sessionID2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'SessionID2')))
    _ILP_PDU_message = CHOICE(name=u'message', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ILP', 'IlpMessage')))
    ILP_PDU._cont = ASN1Dict([
        (u'length', _ILP_PDU_length),
        (u'version', _ILP_PDU_version),
        (u'sessionID2', _ILP_PDU_sessionID2),
        (u'message', _ILP_PDU_message),
        ])
    ILP_PDU._ext = None
    
    #-----< IlpMessage >-----#
    IlpMessage = CHOICE(name=u'IlpMessage', mode=MODE_TYPE)
    _IlpMessage_msPREQ = SEQ(name=u'msPREQ', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PREQ', 'PREQ')))
    _IlpMessage_msPRES = SEQ(name=u'msPRES', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PRES', 'PRES')))
    _IlpMessage_msPRPT = SEQ(name=u'msPRPT', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PRPT', 'PRPT')))
    _IlpMessage_msPLREQ = SEQ(name=u'msPLREQ', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PLREQ', 'PLREQ')))
    _IlpMessage_msPLRES = SEQ(name=u'msPLRES', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PLRES', 'PLRES')))
    _IlpMessage_msPINIT = SEQ(name=u'msPINIT', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PINIT', 'PINIT')))
    _IlpMessage_msPAUTH = SEQ(name=u'msPAUTH', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PAUTH', 'PAUTH')))
    _IlpMessage_msPALIVE = SEQ(name=u'msPALIVE', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PALIVE', 'PALIVE')))
    _IlpMessage_msPEND = SEQ(name=u'msPEND', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PEND', 'PEND')))
    _IlpMessage_msPMESS = SEQ(name=u'msPMESS', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PMESS', 'PMESS')))
    IlpMessage._cont = ASN1Dict([
        (u'msPREQ', _IlpMessage_msPREQ),
        (u'msPRES', _IlpMessage_msPRES),
        (u'msPRPT', _IlpMessage_msPRPT),
        (u'msPLREQ', _IlpMessage_msPLREQ),
        (u'msPLRES', _IlpMessage_msPLRES),
        (u'msPINIT', _IlpMessage_msPINIT),
        (u'msPAUTH', _IlpMessage_msPAUTH),
        (u'msPALIVE', _IlpMessage_msPALIVE),
        (u'msPEND', _IlpMessage_msPEND),
        (u'msPMESS', _IlpMessage_msPMESS),
        ])
    IlpMessage._ext = []
    
    _all_ = [
        _ILP_PDU_length,
        _ILP_PDU_version,
        _ILP_PDU_sessionID2,
        _ILP_PDU_message,
        ILP_PDU,
        _IlpMessage_msPREQ,
        _IlpMessage_msPRES,
        _IlpMessage_msPRPT,
        _IlpMessage_msPLREQ,
        _IlpMessage_msPLRES,
        _IlpMessage_msPINIT,
        _IlpMessage_msPAUTH,
        _IlpMessage_msPALIVE,
        _IlpMessage_msPEND,
        _IlpMessage_msPMESS,
        IlpMessage,
    ]

class ILP_PREQ:

    _name_  = u'ILP-PREQ'
    _oid_   = []
    
    _obj_ = [
        u'PREQ',
        u'SLPMode',
        u'TriggerParams',
        u'TriggerType',
        u'PeriodicTriggerParams',
        u'NotificationMode',
        ]
    _type_ = [
        u'PREQ',
        u'SLPMode',
        u'TriggerParams',
        u'TriggerType',
        u'PeriodicTriggerParams',
        u'NotificationMode',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< PREQ >-----#
    PREQ = SEQ(name=u'PREQ', mode=MODE_TYPE)
    _PREQ_sLPMode = ENUM(name=u'sLPMode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PREQ', 'SLPMode')))
    _PREQ_approvedPosMethods = SEQ(name=u'approvedPosMethods', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'PosTechnology')), opt=True)
    _PREQ_locationId = SEQ(name=u'locationId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'LocationId')), opt=True)
    _PREQ_multipleLocationIds = SEQ_OF(name=u'multipleLocationIds', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'MultipleLocationIds')), opt=True)
    _PREQ_position = SEQ(name=u'position', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'Position')), opt=True)
    _PREQ_triggerParams = SEQ(name=u'triggerParams', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PREQ', 'TriggerParams')), opt=True)
    _PREQ_sPCSETKey = BIT_STR(name=u'sPCSETKey', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'SPCSETKey')), opt=True)
    _PREQ_sPCTID = SEQ(name=u'sPCTID', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'SPCTID')), opt=True)
    _PREQ_sPCSETKeylifetime = INT(name=u'sPCSETKeylifetime', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'SPCSETKeylifetime')), opt=True)
    _PREQ_qoP = SEQ(name=u'qoP', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'QoP')), opt=True)
    _PREQ_sETCapabilities = SEQ(name=u'sETCapabilities', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'SETCapabilities')), opt=True)
    _PREQ_notificationMode = ENUM(name=u'notificationMode', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PREQ', 'NotificationMode')), opt=True)
    PREQ._cont = ASN1Dict([
        (u'sLPMode', _PREQ_sLPMode),
        (u'approvedPosMethods', _PREQ_approvedPosMethods),
        (u'locationId', _PREQ_locationId),
        (u'multipleLocationIds', _PREQ_multipleLocationIds),
        (u'position', _PREQ_position),
        (u'triggerParams', _PREQ_triggerParams),
        (u'sPCSETKey', _PREQ_sPCSETKey),
        (u'sPCTID', _PREQ_sPCTID),
        (u'sPCSETKeylifetime', _PREQ_sPCSETKeylifetime),
        (u'qoP', _PREQ_qoP),
        (u'sETCapabilities', _PREQ_sETCapabilities),
        (u'notificationMode', _PREQ_notificationMode),
        ])
    PREQ._ext = []
    
    #-----< SLPMode >-----#
    SLPMode = ENUM(name=u'SLPMode', mode=MODE_TYPE)
    SLPMode._cont = ASN1Dict([(u'proxy', 0), (u'nonProxy', 1)])
    SLPMode._ext = None
    
    #-----< TriggerParams >-----#
    TriggerParams = SEQ(name=u'TriggerParams', mode=MODE_TYPE)
    _TriggerParams_triggerType = ENUM(name=u'triggerType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PREQ', 'TriggerType')))
    _TriggerParams_periodicTriggerParams = SEQ(name=u'periodicTriggerParams', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PREQ', 'PeriodicTriggerParams')), opt=True)
    TriggerParams._cont = ASN1Dict([
        (u'triggerType', _TriggerParams_triggerType),
        (u'periodicTriggerParams', _TriggerParams_periodicTriggerParams),
        ])
    TriggerParams._ext = []
    
    #-----< TriggerType >-----#
    TriggerType = ENUM(name=u'TriggerType', mode=MODE_TYPE)
    TriggerType._cont = ASN1Dict([(u'periodic', 0), (u'areaEvent', 1)])
    TriggerType._ext = []
    
    #-----< PeriodicTriggerParams >-----#
    PeriodicTriggerParams = SEQ(name=u'PeriodicTriggerParams', mode=MODE_TYPE)
    _PeriodicTriggerParams_numberOfFixes = INT(name=u'numberOfFixes', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PeriodicTriggerParams_numberOfFixes._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8639999)], ev=None, er=[])
    _PeriodicTriggerParams_intervalBetweenFixes = INT(name=u'intervalBetweenFixes', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PeriodicTriggerParams_intervalBetweenFixes._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8639999)], ev=None, er=[])
    _PeriodicTriggerParams_startTime = INT(name=u'startTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PeriodicTriggerParams_startTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2678400)], ev=None, er=[])
    PeriodicTriggerParams._cont = ASN1Dict([
        (u'numberOfFixes', _PeriodicTriggerParams_numberOfFixes),
        (u'intervalBetweenFixes', _PeriodicTriggerParams_intervalBetweenFixes),
        (u'startTime', _PeriodicTriggerParams_startTime),
        ])
    PeriodicTriggerParams._ext = []
    
    #-----< NotificationMode >-----#
    NotificationMode = ENUM(name=u'NotificationMode', mode=MODE_TYPE)
    NotificationMode._cont = ASN1Dict([(u'normal', 0), (u'basedOnLocation', 1)])
    NotificationMode._ext = []
    
    _all_ = [
        _PREQ_sLPMode,
        _PREQ_approvedPosMethods,
        _PREQ_locationId,
        _PREQ_multipleLocationIds,
        _PREQ_position,
        _PREQ_triggerParams,
        _PREQ_sPCSETKey,
        _PREQ_sPCTID,
        _PREQ_sPCSETKeylifetime,
        _PREQ_qoP,
        _PREQ_sETCapabilities,
        _PREQ_notificationMode,
        PREQ,
        SLPMode,
        _TriggerParams_triggerType,
        _TriggerParams_periodicTriggerParams,
        TriggerParams,
        TriggerType,
        _PeriodicTriggerParams_numberOfFixes,
        _PeriodicTriggerParams_intervalBetweenFixes,
        _PeriodicTriggerParams_startTime,
        PeriodicTriggerParams,
        NotificationMode,
    ]

class ILP_PRES:

    _name_  = u'ILP-PRES'
    _oid_   = []
    
    _obj_ = [
        u'PRES',
        ]
    _type_ = [
        u'PRES',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< PRES >-----#
    PRES = SEQ(name=u'PRES', mode=MODE_TYPE)
    _PRES_preferredPosMethod = ENUM(name=u'preferredPosMethod', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'PosMethod')), opt=True)
    _PRES_gnssPosTechnology = SEQ(name=u'gnssPosTechnology', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'GNSSPosTechnology')), opt=True)
    _PRES_supportedPosMethods = SEQ(name=u'supportedPosMethods', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'PosTechnology')), opt=True)
    _PRES_position = SEQ(name=u'position', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'Position')), opt=True)
    _PRES_sPCstatusCode = ENUM(name=u'sPCstatusCode', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'SPCStatusCode')), opt=True)
    PRES._cont = ASN1Dict([
        (u'preferredPosMethod', _PRES_preferredPosMethod),
        (u'gnssPosTechnology', _PRES_gnssPosTechnology),
        (u'supportedPosMethods', _PRES_supportedPosMethods),
        (u'position', _PRES_position),
        (u'sPCstatusCode', _PRES_sPCstatusCode),
        ])
    PRES._ext = []
    
    _all_ = [
        _PRES_preferredPosMethod,
        _PRES_gnssPosTechnology,
        _PRES_supportedPosMethods,
        _PRES_position,
        _PRES_sPCstatusCode,
        PRES,
    ]

class ILP_PRPT:

    _name_  = u'ILP-PRPT'
    _oid_   = []
    
    _obj_ = [
        u'PRPT',
        ]
    _type_ = [
        u'PRPT',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< PRPT >-----#
    PRPT = SEQ(name=u'PRPT', mode=MODE_TYPE)
    _PRPT_position = SEQ(name=u'position', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'Position')))
    _PRPT_fixNumber = INT(name=u'fixNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PRPT_fixNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8639999)], ev=None, er=[])
    _PRPT_statusCode = ENUM(name=u'statusCode', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'StatusCode')), opt=True)
    PRPT._cont = ASN1Dict([
        (u'position', _PRPT_position),
        (u'fixNumber', _PRPT_fixNumber),
        (u'statusCode', _PRPT_statusCode),
        ])
    PRPT._ext = []
    
    _all_ = [
        _PRPT_position,
        _PRPT_fixNumber,
        _PRPT_statusCode,
        PRPT,
    ]

class ILP_PLREQ:

    _name_  = u'ILP-PLREQ'
    _oid_   = []
    
    _obj_ = [
        u'PLREQ',
        ]
    _type_ = [
        u'PLREQ',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< PLREQ >-----#
    PLREQ = SEQ(name=u'PLREQ', mode=MODE_TYPE)
    _PLREQ_locationId = SEQ(name=u'locationId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'LocationId')))
    _PLREQ_multipleLocationIds = SEQ_OF(name=u'multipleLocationIds', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'MultipleLocationIds')), opt=True)
    PLREQ._cont = ASN1Dict([
        (u'locationId', _PLREQ_locationId),
        (u'multipleLocationIds', _PLREQ_multipleLocationIds),
        ])
    PLREQ._ext = []
    
    _all_ = [
        _PLREQ_locationId,
        _PLREQ_multipleLocationIds,
        PLREQ,
    ]

class ILP_PLRES:

    _name_  = u'ILP-PLRES'
    _oid_   = []
    
    _obj_ = [
        u'PLRES',
        u'PositionResults',
        u'PositionResult',
        ]
    _type_ = [
        u'PLRES',
        u'PositionResults',
        u'PositionResult',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< PLRES >-----#
    PLRES = SEQ(name=u'PLRES', mode=MODE_TYPE)
    _PLRES_positionResults = SEQ_OF(name=u'positionResults', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PLRES', 'PositionResults')))
    PLRES._cont = ASN1Dict([
        (u'positionResults', _PLRES_positionResults),
        ])
    PLRES._ext = []
    
    #-----< PositionResults >-----#
    PositionResults = SEQ_OF(name=u'PositionResults', mode=MODE_TYPE)
    _PositionResults__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ILP-PLRES', 'PositionResult')))
    PositionResults._cont = _PositionResults__item_
    PositionResults._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1024)], ev=None, er=[])
    
    #-----< PositionResult >-----#
    PositionResult = CHOICE(name=u'PositionResult', mode=MODE_TYPE)
    _PositionResult_position = SEQ(name=u'position', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'Position')))
    _PositionResult_statusCode = ENUM(name=u'statusCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'StatusCode')))
    PositionResult._cont = ASN1Dict([
        (u'position', _PositionResult_position),
        (u'statusCode', _PositionResult_statusCode),
        ])
    PositionResult._ext = []
    
    _all_ = [
        _PLRES_positionResults,
        PLRES,
        _PositionResults__item_,
        PositionResults,
        _PositionResult_position,
        _PositionResult_statusCode,
        PositionResult,
    ]

class ILP_PINIT:

    _name_  = u'ILP-PINIT'
    _oid_   = []
    
    _obj_ = [
        u'PINIT',
        u'RequestedAssistData',
        u'ExtendedEphemeris',
        u'ExtendedEphCheck',
        u'GPSTime',
        u'GanssRequestedCommonAssistanceDataList',
        u'GanssRequestedGenericAssistanceDataList',
        u'GanssReqGenericData',
        u'DGANSS-Sig-Id-Req',
        u'GanssNavigationModelData',
        u'SatellitesListRelatedDataList',
        u'SatellitesListRelatedData',
        u'maxGANSS',
        u'maxGANSSSat',
        u'GanssDataBits',
        u'ReqDataBitAssistanceList',
        u'GanssAdditionalDataChoices',
        u'GanssExtendedEphCheck',
        u'GANSSextEphTime',
        u'NavigationModel',
        u'SatelliteInfo',
        u'SatelliteInfoElement',
        ]
    _type_ = [
        u'PINIT',
        u'RequestedAssistData',
        u'ExtendedEphemeris',
        u'ExtendedEphCheck',
        u'GPSTime',
        u'GanssRequestedCommonAssistanceDataList',
        u'GanssRequestedGenericAssistanceDataList',
        u'GanssReqGenericData',
        u'DGANSS-Sig-Id-Req',
        u'GanssNavigationModelData',
        u'SatellitesListRelatedDataList',
        u'SatellitesListRelatedData',
        u'GanssDataBits',
        u'ReqDataBitAssistanceList',
        u'GanssAdditionalDataChoices',
        u'GanssExtendedEphCheck',
        u'GANSSextEphTime',
        u'NavigationModel',
        u'SatelliteInfo',
        u'SatelliteInfoElement',
        ]
    _set_ = [
        ]
    _val_ = [
        u'maxGANSS',
        u'maxGANSSSat',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< PINIT >-----#
    PINIT = SEQ(name=u'PINIT', mode=MODE_TYPE)
    _PINIT_sETCapabilities = SEQ(name=u'sETCapabilities', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'SETCapabilities')))
    _PINIT_locationId = SEQ(name=u'locationId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'LocationId')))
    _PINIT_posMethod = ENUM(name=u'posMethod', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'PosMethod')), opt=True)
    _PINIT_requestedAssistData = SEQ(name=u'requestedAssistData', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PINIT', 'RequestedAssistData')), opt=True)
    _PINIT_position = SEQ(name=u'position', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'Position')), opt=True)
    _PINIT_posPayLoad = CHOICE(name=u'posPayLoad', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ILP-Components', 'PosPayLoad')), opt=True)
    _PINIT_multipleLocationIds = SEQ_OF(name=u'multipleLocationIds', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'MultipleLocationIds')), opt=True)
    _PINIT_utran_GPSReferenceTimeResult = SEQ(name=u'utran-GPSReferenceTimeResult', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'UTRAN-GPSReferenceTimeResult')), opt=True)
    _PINIT_utran_GANSSReferenceTimeResult = SEQ(name=u'utran-GANSSReferenceTimeResult', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'UTRAN-GANSSReferenceTimeResult')), opt=True)
    _PINIT_gnssPosTechnology = SEQ(name=u'gnssPosTechnology', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'GNSSPosTechnology')), opt=True)
    PINIT._cont = ASN1Dict([
        (u'sETCapabilities', _PINIT_sETCapabilities),
        (u'locationId', _PINIT_locationId),
        (u'posMethod', _PINIT_posMethod),
        (u'requestedAssistData', _PINIT_requestedAssistData),
        (u'position', _PINIT_position),
        (u'posPayLoad', _PINIT_posPayLoad),
        (u'multipleLocationIds', _PINIT_multipleLocationIds),
        (u'utran-GPSReferenceTimeResult', _PINIT_utran_GPSReferenceTimeResult),
        (u'utran-GANSSReferenceTimeResult', _PINIT_utran_GANSSReferenceTimeResult),
        (u'gnssPosTechnology', _PINIT_gnssPosTechnology),
        ])
    PINIT._ext = []
    
    #-----< RequestedAssistData >-----#
    RequestedAssistData = SEQ(name=u'RequestedAssistData', mode=MODE_TYPE)
    _RequestedAssistData_almanacRequested = BOOL(name=u'almanacRequested', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RequestedAssistData_utcModelRequested = BOOL(name=u'utcModelRequested', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RequestedAssistData_ionosphericModelRequested = BOOL(name=u'ionosphericModelRequested', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RequestedAssistData_dgpsCorrectionsRequested = BOOL(name=u'dgpsCorrectionsRequested', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RequestedAssistData_referenceLocationRequested = BOOL(name=u'referenceLocationRequested', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RequestedAssistData_referenceTimeRequested = BOOL(name=u'referenceTimeRequested', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RequestedAssistData_acquisitionAssistanceRequested = BOOL(name=u'acquisitionAssistanceRequested', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RequestedAssistData_realTimeIntegrityRequested = BOOL(name=u'realTimeIntegrityRequested', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RequestedAssistData_navigationModelRequested = BOOL(name=u'navigationModelRequested', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RequestedAssistData_navigationModelData = SEQ(name=u'navigationModelData', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PINIT', 'NavigationModel')), opt=True)
    _RequestedAssistData_ganssRequestedCommonAssistanceDataList = SEQ(name=u'ganssRequestedCommonAssistanceDataList', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PINIT', 'GanssRequestedCommonAssistanceDataList')), opt=True)
    _RequestedAssistData_ganssRequestedGenericAssistanceDataList = SEQ_OF(name=u'ganssRequestedGenericAssistanceDataList', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PINIT', 'GanssRequestedGenericAssistanceDataList')), opt=True)
    _RequestedAssistData_extendedEphemeris = SEQ(name=u'extendedEphemeris', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PINIT', 'ExtendedEphemeris')), opt=True)
    _RequestedAssistData_extendedEphemerisCheck = SEQ(name=u'extendedEphemerisCheck', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PINIT', 'ExtendedEphCheck')), opt=True)
    RequestedAssistData._cont = ASN1Dict([
        (u'almanacRequested', _RequestedAssistData_almanacRequested),
        (u'utcModelRequested', _RequestedAssistData_utcModelRequested),
        (u'ionosphericModelRequested', _RequestedAssistData_ionosphericModelRequested),
        (u'dgpsCorrectionsRequested', _RequestedAssistData_dgpsCorrectionsRequested),
        (u'referenceLocationRequested', _RequestedAssistData_referenceLocationRequested),
        (u'referenceTimeRequested', _RequestedAssistData_referenceTimeRequested),
        (u'acquisitionAssistanceRequested', _RequestedAssistData_acquisitionAssistanceRequested),
        (u'realTimeIntegrityRequested', _RequestedAssistData_realTimeIntegrityRequested),
        (u'navigationModelRequested', _RequestedAssistData_navigationModelRequested),
        (u'navigationModelData', _RequestedAssistData_navigationModelData),
        (u'ganssRequestedCommonAssistanceDataList', _RequestedAssistData_ganssRequestedCommonAssistanceDataList),
        (u'ganssRequestedGenericAssistanceDataList', _RequestedAssistData_ganssRequestedGenericAssistanceDataList),
        (u'extendedEphemeris', _RequestedAssistData_extendedEphemeris),
        (u'extendedEphemerisCheck', _RequestedAssistData_extendedEphemerisCheck),
        ])
    RequestedAssistData._ext = []
    
    #-----< ExtendedEphemeris >-----#
    ExtendedEphemeris = SEQ(name=u'ExtendedEphemeris', mode=MODE_TYPE)
    _ExtendedEphemeris_validity = INT(name=u'validity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ExtendedEphemeris_validity._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    ExtendedEphemeris._cont = ASN1Dict([
        (u'validity', _ExtendedEphemeris_validity),
        ])
    ExtendedEphemeris._ext = []
    
    #-----< ExtendedEphCheck >-----#
    ExtendedEphCheck = SEQ(name=u'ExtendedEphCheck', mode=MODE_TYPE)
    _ExtendedEphCheck_beginTime = SEQ(name=u'beginTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PINIT', 'GPSTime')))
    _ExtendedEphCheck_endTime = SEQ(name=u'endTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PINIT', 'GPSTime')))
    ExtendedEphCheck._cont = ASN1Dict([
        (u'beginTime', _ExtendedEphCheck_beginTime),
        (u'endTime', _ExtendedEphCheck_endTime),
        ])
    ExtendedEphCheck._ext = []
    
    #-----< GPSTime >-----#
    GPSTime = SEQ(name=u'GPSTime', mode=MODE_TYPE)
    _GPSTime_gPSWeek = INT(name=u'gPSWeek', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSTime_gPSWeek._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    _GPSTime_gPSTOWhour = INT(name=u'gPSTOWhour', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSTime_gPSTOWhour._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=167)], ev=None, er=[])
    GPSTime._cont = ASN1Dict([
        (u'gPSWeek', _GPSTime_gPSWeek),
        (u'gPSTOWhour', _GPSTime_gPSTOWhour),
        ])
    GPSTime._ext = []
    
    #-----< GanssRequestedCommonAssistanceDataList >-----#
    GanssRequestedCommonAssistanceDataList = SEQ(name=u'GanssRequestedCommonAssistanceDataList', mode=MODE_TYPE)
    _GanssRequestedCommonAssistanceDataList_ganssReferenceTime = BOOL(name=u'ganssReferenceTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssRequestedCommonAssistanceDataList_ganssIonosphericModel = BOOL(name=u'ganssIonosphericModel', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssRequestedCommonAssistanceDataList_ganssAdditionalIonosphericModelForDataID00 = BOOL(name=u'ganssAdditionalIonosphericModelForDataID00', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssRequestedCommonAssistanceDataList_ganssAdditionalIonosphericModelForDataID11 = BOOL(name=u'ganssAdditionalIonosphericModelForDataID11', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssRequestedCommonAssistanceDataList_ganssEarthOrientationParameters = BOOL(name=u'ganssEarthOrientationParameters', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    GanssRequestedCommonAssistanceDataList._cont = ASN1Dict([
        (u'ganssReferenceTime', _GanssRequestedCommonAssistanceDataList_ganssReferenceTime),
        (u'ganssIonosphericModel', _GanssRequestedCommonAssistanceDataList_ganssIonosphericModel),
        (u'ganssAdditionalIonosphericModelForDataID00', _GanssRequestedCommonAssistanceDataList_ganssAdditionalIonosphericModelForDataID00),
        (u'ganssAdditionalIonosphericModelForDataID11', _GanssRequestedCommonAssistanceDataList_ganssAdditionalIonosphericModelForDataID11),
        (u'ganssEarthOrientationParameters', _GanssRequestedCommonAssistanceDataList_ganssEarthOrientationParameters),
        ])
    GanssRequestedCommonAssistanceDataList._ext = []
    
    #-----< GanssRequestedGenericAssistanceDataList >-----#
    GanssRequestedGenericAssistanceDataList = SEQ_OF(name=u'GanssRequestedGenericAssistanceDataList', mode=MODE_TYPE)
    _GanssRequestedGenericAssistanceDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ILP-PINIT', 'GanssReqGenericData')))
    GanssRequestedGenericAssistanceDataList._cont = _GanssRequestedGenericAssistanceDataList__item_
    GanssRequestedGenericAssistanceDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< GanssReqGenericData >-----#
    GanssReqGenericData = SEQ(name=u'GanssReqGenericData', mode=MODE_TYPE)
    _GanssReqGenericData_ganssId = INT(name=u'ganssId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssReqGenericData_ganssId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _GanssReqGenericData_ganssSBASid = BIT_STR(name=u'ganssSBASid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GanssReqGenericData_ganssSBASid._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    _GanssReqGenericData_ganssRealTimeIntegrity = BOOL(name=u'ganssRealTimeIntegrity', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GanssReqGenericData_ganssDifferentialCorrection = BIT_STR(name=u'ganssDifferentialCorrection', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PINIT', 'DGANSS-Sig-Id-Req')), opt=True)
    _GanssReqGenericData_ganssAlmanac = BOOL(name=u'ganssAlmanac', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssReqGenericData_ganssNavigationModelData = SEQ(name=u'ganssNavigationModelData', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PINIT', 'GanssNavigationModelData')), opt=True)
    _GanssReqGenericData_ganssTimeModels = BIT_STR(name=u'ganssTimeModels', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GanssReqGenericData_ganssTimeModels._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    _GanssReqGenericData_ganssReferenceMeasurementInfo = BOOL(name=u'ganssReferenceMeasurementInfo', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssReqGenericData_ganssDataBits = SEQ(name=u'ganssDataBits', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PINIT', 'GanssDataBits')), opt=True)
    _GanssReqGenericData_ganssUTCModel = BOOL(name=u'ganssUTCModel', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssReqGenericData_ganssAdditionalDataChoices = SEQ(name=u'ganssAdditionalDataChoices', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PINIT', 'GanssAdditionalDataChoices')), opt=True)
    _GanssReqGenericData_ganssAuxiliaryInformation = BOOL(name=u'ganssAuxiliaryInformation', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssReqGenericData_ganssExtendedEphemeris = SEQ(name=u'ganssExtendedEphemeris', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PINIT', 'ExtendedEphemeris')), opt=True)
    _GanssReqGenericData_ganssExtendedEphemerisCheck = SEQ(name=u'ganssExtendedEphemerisCheck', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PINIT', 'GanssExtendedEphCheck')), opt=True)
    GanssReqGenericData._cont = ASN1Dict([
        (u'ganssId', _GanssReqGenericData_ganssId),
        (u'ganssSBASid', _GanssReqGenericData_ganssSBASid),
        (u'ganssRealTimeIntegrity', _GanssReqGenericData_ganssRealTimeIntegrity),
        (u'ganssDifferentialCorrection', _GanssReqGenericData_ganssDifferentialCorrection),
        (u'ganssAlmanac', _GanssReqGenericData_ganssAlmanac),
        (u'ganssNavigationModelData', _GanssReqGenericData_ganssNavigationModelData),
        (u'ganssTimeModels', _GanssReqGenericData_ganssTimeModels),
        (u'ganssReferenceMeasurementInfo', _GanssReqGenericData_ganssReferenceMeasurementInfo),
        (u'ganssDataBits', _GanssReqGenericData_ganssDataBits),
        (u'ganssUTCModel', _GanssReqGenericData_ganssUTCModel),
        (u'ganssAdditionalDataChoices', _GanssReqGenericData_ganssAdditionalDataChoices),
        (u'ganssAuxiliaryInformation', _GanssReqGenericData_ganssAuxiliaryInformation),
        (u'ganssExtendedEphemeris', _GanssReqGenericData_ganssExtendedEphemeris),
        (u'ganssExtendedEphemerisCheck', _GanssReqGenericData_ganssExtendedEphemerisCheck),
        ])
    GanssReqGenericData._ext = []
    
    #-----< DGANSS-Sig-Id-Req >-----#
    DGANSS_Sig_Id_Req = BIT_STR(name=u'DGANSS-Sig-Id-Req', mode=MODE_TYPE)
    DGANSS_Sig_Id_Req._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    
    #-----< GanssNavigationModelData >-----#
    GanssNavigationModelData = SEQ(name=u'GanssNavigationModelData', mode=MODE_TYPE)
    _GanssNavigationModelData_ganssWeek = INT(name=u'ganssWeek', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssNavigationModelData_ganssWeek._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4095)], ev=None, er=[])
    _GanssNavigationModelData_ganssToe = INT(name=u'ganssToe', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssNavigationModelData_ganssToe._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=167)], ev=None, er=[])
    _GanssNavigationModelData_t_toeLimit = INT(name=u't-toeLimit', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssNavigationModelData_t_toeLimit._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=10)], ev=None, er=[])
    _GanssNavigationModelData_satellitesListRelatedDataList = SEQ_OF(name=u'satellitesListRelatedDataList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PINIT', 'SatellitesListRelatedDataList')), opt=True)
    GanssNavigationModelData._cont = ASN1Dict([
        (u'ganssWeek', _GanssNavigationModelData_ganssWeek),
        (u'ganssToe', _GanssNavigationModelData_ganssToe),
        (u't-toeLimit', _GanssNavigationModelData_t_toeLimit),
        (u'satellitesListRelatedDataList', _GanssNavigationModelData_satellitesListRelatedDataList),
        ])
    GanssNavigationModelData._ext = []
    
    #-----< SatellitesListRelatedDataList >-----#
    SatellitesListRelatedDataList = SEQ_OF(name=u'SatellitesListRelatedDataList', mode=MODE_TYPE)
    _SatellitesListRelatedDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ILP-PINIT', 'SatellitesListRelatedData')))
    SatellitesListRelatedDataList._cont = _SatellitesListRelatedDataList__item_
    SatellitesListRelatedDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32)], ev=None, er=[])
    
    #-----< SatellitesListRelatedData >-----#
    SatellitesListRelatedData = SEQ(name=u'SatellitesListRelatedData', mode=MODE_TYPE)
    _SatellitesListRelatedData_satId = INT(name=u'satId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SatellitesListRelatedData_satId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _SatellitesListRelatedData_iod = INT(name=u'iod', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SatellitesListRelatedData_iod._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    SatellitesListRelatedData._cont = ASN1Dict([
        (u'satId', _SatellitesListRelatedData_satId),
        (u'iod', _SatellitesListRelatedData_iod),
        ])
    SatellitesListRelatedData._ext = []
    
    #-----< maxGANSS >-----#
    maxGANSS = INT(name=u'maxGANSS', mode=MODE_VALUE)
    maxGANSS._val = 16
    
    #-----< maxGANSSSat >-----#
    maxGANSSSat = INT(name=u'maxGANSSSat', mode=MODE_VALUE)
    maxGANSSSat._val = 32
    
    #-----< GanssDataBits >-----#
    GanssDataBits = SEQ(name=u'GanssDataBits', mode=MODE_TYPE)
    _GanssDataBits_ganssTODmin = INT(name=u'ganssTODmin', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GanssDataBits_ganssTODmin._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=59)], ev=None, er=[])
    _GanssDataBits_reqDataBitAssistanceList = SEQ(name=u'reqDataBitAssistanceList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PINIT', 'ReqDataBitAssistanceList')))
    GanssDataBits._cont = ASN1Dict([
        (u'ganssTODmin', _GanssDataBits_ganssTODmin),
        (u'reqDataBitAssistanceList', _GanssDataBits_reqDataBitAssistanceList),
        ])
    GanssDataBits._ext = []
    
    #-----< ReqDataBitAssistanceList >-----#
    ReqDataBitAssistanceList = SEQ(name=u'ReqDataBitAssistanceList', mode=MODE_TYPE)
    _ReqDataBitAssistanceList_gnssSignals = BIT_STR(name=u'gnssSignals', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'GANSSSignals')))
    _ReqDataBitAssistanceList_ganssDataBitInterval = INT(name=u'ganssDataBitInterval', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReqDataBitAssistanceList_ganssDataBitInterval._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _ReqDataBitAssistanceList_ganssDataBitSatList = SEQ_OF(name=u'ganssDataBitSatList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ReqDataBitAssistanceList_ganssDataBitSatList__item_ = INT(name='_item_', mode=MODE_TYPE)
    __ReqDataBitAssistanceList_ganssDataBitSatList__item_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _ReqDataBitAssistanceList_ganssDataBitSatList._cont = __ReqDataBitAssistanceList_ganssDataBitSatList__item_
    _ReqDataBitAssistanceList_ganssDataBitSatList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    ReqDataBitAssistanceList._cont = ASN1Dict([
        (u'gnssSignals', _ReqDataBitAssistanceList_gnssSignals),
        (u'ganssDataBitInterval', _ReqDataBitAssistanceList_ganssDataBitInterval),
        (u'ganssDataBitSatList', _ReqDataBitAssistanceList_ganssDataBitSatList),
        ])
    ReqDataBitAssistanceList._ext = []
    
    #-----< GanssAdditionalDataChoices >-----#
    GanssAdditionalDataChoices = SEQ(name=u'GanssAdditionalDataChoices', mode=MODE_TYPE)
    _GanssAdditionalDataChoices_orbitModelID = INT(name=u'orbitModelID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GanssAdditionalDataChoices_orbitModelID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _GanssAdditionalDataChoices_clockModelID = INT(name=u'clockModelID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GanssAdditionalDataChoices_clockModelID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _GanssAdditionalDataChoices_utcModelID = INT(name=u'utcModelID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GanssAdditionalDataChoices_utcModelID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _GanssAdditionalDataChoices_almanacModelID = INT(name=u'almanacModelID', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GanssAdditionalDataChoices_almanacModelID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    GanssAdditionalDataChoices._cont = ASN1Dict([
        (u'orbitModelID', _GanssAdditionalDataChoices_orbitModelID),
        (u'clockModelID', _GanssAdditionalDataChoices_clockModelID),
        (u'utcModelID', _GanssAdditionalDataChoices_utcModelID),
        (u'almanacModelID', _GanssAdditionalDataChoices_almanacModelID),
        ])
    GanssAdditionalDataChoices._ext = []
    
    #-----< GanssExtendedEphCheck >-----#
    GanssExtendedEphCheck = SEQ(name=u'GanssExtendedEphCheck', mode=MODE_TYPE)
    _GanssExtendedEphCheck_beginTime = SEQ(name=u'beginTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PINIT', 'GANSSextEphTime')))
    _GanssExtendedEphCheck_endTime = SEQ(name=u'endTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PINIT', 'GANSSextEphTime')))
    GanssExtendedEphCheck._cont = ASN1Dict([
        (u'beginTime', _GanssExtendedEphCheck_beginTime),
        (u'endTime', _GanssExtendedEphCheck_endTime),
        ])
    GanssExtendedEphCheck._ext = []
    
    #-----< GANSSextEphTime >-----#
    GANSSextEphTime = SEQ(name=u'GANSSextEphTime', mode=MODE_TYPE)
    _GANSSextEphTime_gANSSday = INT(name=u'gANSSday', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSextEphTime_gANSSday._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8191)], ev=None, er=[])
    _GANSSextEphTime_gANSSTODhour = INT(name=u'gANSSTODhour', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSextEphTime_gANSSTODhour._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=23)], ev=None, er=[])
    GANSSextEphTime._cont = ASN1Dict([
        (u'gANSSday', _GANSSextEphTime_gANSSday),
        (u'gANSSTODhour', _GANSSextEphTime_gANSSTODhour),
        ])
    GANSSextEphTime._ext = []
    
    #-----< NavigationModel >-----#
    NavigationModel = SEQ(name=u'NavigationModel', mode=MODE_TYPE)
    _NavigationModel_gpsWeek = INT(name=u'gpsWeek', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavigationModel_gpsWeek._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    _NavigationModel_gpsToe = INT(name=u'gpsToe', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavigationModel_gpsToe._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=167)], ev=None, er=[])
    _NavigationModel_nSAT = INT(name=u'nSAT', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavigationModel_nSAT._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    _NavigationModel_toeLimit = INT(name=u'toeLimit', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavigationModel_toeLimit._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=10)], ev=None, er=[])
    _NavigationModel_satInfo = SEQ_OF(name=u'satInfo', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-PINIT', 'SatelliteInfo')), opt=True)
    NavigationModel._cont = ASN1Dict([
        (u'gpsWeek', _NavigationModel_gpsWeek),
        (u'gpsToe', _NavigationModel_gpsToe),
        (u'nSAT', _NavigationModel_nSAT),
        (u'toeLimit', _NavigationModel_toeLimit),
        (u'satInfo', _NavigationModel_satInfo),
        ])
    NavigationModel._ext = []
    
    #-----< SatelliteInfo >-----#
    SatelliteInfo = SEQ_OF(name=u'SatelliteInfo', mode=MODE_TYPE)
    _SatelliteInfo__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ILP-PINIT', 'SatelliteInfoElement')))
    SatelliteInfo._cont = _SatelliteInfo__item_
    SatelliteInfo._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=31)], ev=None, er=[])
    
    #-----< SatelliteInfoElement >-----#
    SatelliteInfoElement = SEQ(name=u'SatelliteInfoElement', mode=MODE_TYPE)
    _SatelliteInfoElement_satId = INT(name=u'satId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SatelliteInfoElement_satId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _SatelliteInfoElement_iODE = INT(name=u'iODE', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SatelliteInfoElement_iODE._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    SatelliteInfoElement._cont = ASN1Dict([
        (u'satId', _SatelliteInfoElement_satId),
        (u'iODE', _SatelliteInfoElement_iODE),
        ])
    SatelliteInfoElement._ext = []
    
    _all_ = [
        _PINIT_sETCapabilities,
        _PINIT_locationId,
        _PINIT_posMethod,
        _PINIT_requestedAssistData,
        _PINIT_position,
        _PINIT_posPayLoad,
        _PINIT_multipleLocationIds,
        _PINIT_utran_GPSReferenceTimeResult,
        _PINIT_utran_GANSSReferenceTimeResult,
        _PINIT_gnssPosTechnology,
        PINIT,
        _RequestedAssistData_almanacRequested,
        _RequestedAssistData_utcModelRequested,
        _RequestedAssistData_ionosphericModelRequested,
        _RequestedAssistData_dgpsCorrectionsRequested,
        _RequestedAssistData_referenceLocationRequested,
        _RequestedAssistData_referenceTimeRequested,
        _RequestedAssistData_acquisitionAssistanceRequested,
        _RequestedAssistData_realTimeIntegrityRequested,
        _RequestedAssistData_navigationModelRequested,
        _RequestedAssistData_navigationModelData,
        _RequestedAssistData_ganssRequestedCommonAssistanceDataList,
        _RequestedAssistData_ganssRequestedGenericAssistanceDataList,
        _RequestedAssistData_extendedEphemeris,
        _RequestedAssistData_extendedEphemerisCheck,
        RequestedAssistData,
        _ExtendedEphemeris_validity,
        ExtendedEphemeris,
        _ExtendedEphCheck_beginTime,
        _ExtendedEphCheck_endTime,
        ExtendedEphCheck,
        _GPSTime_gPSWeek,
        _GPSTime_gPSTOWhour,
        GPSTime,
        _GanssRequestedCommonAssistanceDataList_ganssReferenceTime,
        _GanssRequestedCommonAssistanceDataList_ganssIonosphericModel,
        _GanssRequestedCommonAssistanceDataList_ganssAdditionalIonosphericModelForDataID00,
        _GanssRequestedCommonAssistanceDataList_ganssAdditionalIonosphericModelForDataID11,
        _GanssRequestedCommonAssistanceDataList_ganssEarthOrientationParameters,
        GanssRequestedCommonAssistanceDataList,
        _GanssRequestedGenericAssistanceDataList__item_,
        GanssRequestedGenericAssistanceDataList,
        _GanssReqGenericData_ganssId,
        _GanssReqGenericData_ganssSBASid,
        _GanssReqGenericData_ganssRealTimeIntegrity,
        _GanssReqGenericData_ganssDifferentialCorrection,
        _GanssReqGenericData_ganssAlmanac,
        _GanssReqGenericData_ganssNavigationModelData,
        _GanssReqGenericData_ganssTimeModels,
        _GanssReqGenericData_ganssReferenceMeasurementInfo,
        _GanssReqGenericData_ganssDataBits,
        _GanssReqGenericData_ganssUTCModel,
        _GanssReqGenericData_ganssAdditionalDataChoices,
        _GanssReqGenericData_ganssAuxiliaryInformation,
        _GanssReqGenericData_ganssExtendedEphemeris,
        _GanssReqGenericData_ganssExtendedEphemerisCheck,
        GanssReqGenericData,
        DGANSS_Sig_Id_Req,
        _GanssNavigationModelData_ganssWeek,
        _GanssNavigationModelData_ganssToe,
        _GanssNavigationModelData_t_toeLimit,
        _GanssNavigationModelData_satellitesListRelatedDataList,
        GanssNavigationModelData,
        _SatellitesListRelatedDataList__item_,
        SatellitesListRelatedDataList,
        _SatellitesListRelatedData_satId,
        _SatellitesListRelatedData_iod,
        SatellitesListRelatedData,
        maxGANSS,
        maxGANSSSat,
        _GanssDataBits_ganssTODmin,
        _GanssDataBits_reqDataBitAssistanceList,
        GanssDataBits,
        _ReqDataBitAssistanceList_gnssSignals,
        _ReqDataBitAssistanceList_ganssDataBitInterval,
        __ReqDataBitAssistanceList_ganssDataBitSatList__item_,
        _ReqDataBitAssistanceList_ganssDataBitSatList,
        ReqDataBitAssistanceList,
        _GanssAdditionalDataChoices_orbitModelID,
        _GanssAdditionalDataChoices_clockModelID,
        _GanssAdditionalDataChoices_utcModelID,
        _GanssAdditionalDataChoices_almanacModelID,
        GanssAdditionalDataChoices,
        _GanssExtendedEphCheck_beginTime,
        _GanssExtendedEphCheck_endTime,
        GanssExtendedEphCheck,
        _GANSSextEphTime_gANSSday,
        _GANSSextEphTime_gANSSTODhour,
        GANSSextEphTime,
        _NavigationModel_gpsWeek,
        _NavigationModel_gpsToe,
        _NavigationModel_nSAT,
        _NavigationModel_toeLimit,
        _NavigationModel_satInfo,
        NavigationModel,
        _SatelliteInfo__item_,
        SatelliteInfo,
        _SatelliteInfoElement_satId,
        _SatelliteInfoElement_iODE,
        SatelliteInfoElement,
    ]

class ILP_PAUTH:

    _name_  = u'ILP-PAUTH'
    _oid_   = []
    
    _obj_ = [
        u'PAUTH',
        ]
    _type_ = [
        u'PAUTH',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< PAUTH >-----#
    PAUTH = SEQ(name=u'PAUTH', mode=MODE_TYPE)
    _PAUTH_sPCSETKey = BIT_STR(name=u'sPCSETKey', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'SPCSETKey')))
    _PAUTH_sPCTID = SEQ(name=u'sPCTID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'SPCTID')))
    _PAUTH_sPCSETKeylifetime = INT(name=u'sPCSETKeylifetime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'SPCSETKeylifetime')), opt=True)
    PAUTH._cont = ASN1Dict([
        (u'sPCSETKey', _PAUTH_sPCSETKey),
        (u'sPCTID', _PAUTH_sPCTID),
        (u'sPCSETKeylifetime', _PAUTH_sPCSETKeylifetime),
        ])
    PAUTH._ext = []
    
    _all_ = [
        _PAUTH_sPCSETKey,
        _PAUTH_sPCTID,
        _PAUTH_sPCSETKeylifetime,
        PAUTH,
    ]

class ILP_PALIVE:

    _name_  = u'ILP-PALIVE'
    _oid_   = []
    
    _obj_ = [
        u'PALIVE',
        ]
    _type_ = [
        u'PALIVE',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< PALIVE >-----#
    PALIVE = SEQ(name=u'PALIVE', mode=MODE_TYPE)
    _PALIVE_sPCStatusCode = ENUM(name=u'sPCStatusCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'SPCStatusCode')), opt=True)
    PALIVE._cont = ASN1Dict([
        (u'sPCStatusCode', _PALIVE_sPCStatusCode),
        ])
    PALIVE._ext = []
    
    _all_ = [
        _PALIVE_sPCStatusCode,
        PALIVE,
    ]

class ILP_PEND:

    _name_  = u'ILP-PEND'
    _oid_   = []
    
    _obj_ = [
        u'PEND',
        ]
    _type_ = [
        u'PEND',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< PEND >-----#
    PEND = SEQ(name=u'PEND', mode=MODE_TYPE)
    _PEND_position = SEQ(name=u'position', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'Position')), opt=True)
    _PEND_statusCode = ENUM(name=u'statusCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'StatusCode')), opt=True)
    PEND._cont = ASN1Dict([
        (u'position', _PEND_position),
        (u'statusCode', _PEND_statusCode),
        ])
    PEND._ext = []
    
    _all_ = [
        _PEND_position,
        _PEND_statusCode,
        PEND,
    ]

class ILP_PMESS:

    _name_  = u'ILP-PMESS'
    _oid_   = []
    
    _obj_ = [
        u'PMESS',
        ]
    _type_ = [
        u'PMESS',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< PMESS >-----#
    PMESS = SEQ(name=u'PMESS', mode=MODE_TYPE)
    _PMESS_posPayLoad = CHOICE(name=u'posPayLoad', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ILP-Components', 'PosPayLoad')))
    _PMESS_velocity = CHOICE(name=u'velocity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('ILP-Components', 'Velocity')), opt=True)
    _PMESS_utran_GPSReferenceTimeAssistance = SEQ(name=u'utran-GPSReferenceTimeAssistance', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'UTRAN-GPSReferenceTimeAssistance')), opt=True)
    _PMESS_utran_GPSReferenceTimeResult = SEQ(name=u'utran-GPSReferenceTimeResult', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'UTRAN-GPSReferenceTimeResult')), opt=True)
    _PMESS_utran_GANSSReferenceTimeAssistance = SEQ(name=u'utran-GANSSReferenceTimeAssistance', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'UTRAN-GANSSReferenceTimeAssistance')), opt=True)
    _PMESS_utran_GANSSReferenceTimeResult = SEQ(name=u'utran-GANSSReferenceTimeResult', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ILP-Components', 'UTRAN-GANSSReferenceTimeResult')), opt=True)
    PMESS._cont = ASN1Dict([
        (u'posPayLoad', _PMESS_posPayLoad),
        (u'velocity', _PMESS_velocity),
        (u'utran-GPSReferenceTimeAssistance', _PMESS_utran_GPSReferenceTimeAssistance),
        (u'utran-GPSReferenceTimeResult', _PMESS_utran_GPSReferenceTimeResult),
        (u'utran-GANSSReferenceTimeAssistance', _PMESS_utran_GANSSReferenceTimeAssistance),
        (u'utran-GANSSReferenceTimeResult', _PMESS_utran_GANSSReferenceTimeResult),
        ])
    PMESS._ext = []
    
    _all_ = [
        _PMESS_posPayLoad,
        _PMESS_velocity,
        _PMESS_utran_GPSReferenceTimeAssistance,
        _PMESS_utran_GPSReferenceTimeResult,
        _PMESS_utran_GANSSReferenceTimeAssistance,
        _PMESS_utran_GANSSReferenceTimeResult,
        PMESS,
    ]

init_modules(ILP_Components, ILP, ILP_PREQ, ILP_PRES, ILP_PRPT, ILP_PLREQ, ILP_PLRES, ILP_PINIT, ILP_PAUTH, ILP_PALIVE, ILP_PEND, ILP_PMESS)
