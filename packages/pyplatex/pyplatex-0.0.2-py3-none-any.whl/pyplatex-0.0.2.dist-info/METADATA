Metadata-Version: 2.1
Name: pyplatex
Version: 0.0.2
Summary: A scalable and versatile ANPR package leveraging YOLO for detection and multiple OCR options to accurately recognize license plates.
Home-page: https://github.com/nuhmanpk/pyplatex
Author: Nuhman Pk
Author-email: nuhmanpk7@gmail.com
License: MIT
Project-URL: Documentation, https://github.com/nuhmanpk/pyplatex/blob/main/README.md
Project-URL: Funding, https://github.com/sponsors/nuhmanpk
Project-URL: Source, https://github.com/nuhmanpk/pyplatex/
Project-URL: Tracker, https://github.com/nuhmanpk/pyplatex/issues
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3.9
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: certifi ==2024.7.4
Requires-Dist: charset-normalizer ==3.3.2
Requires-Dist: contourpy ==1.2.1
Requires-Dist: cycler ==0.12.1
Requires-Dist: cv2filters ==0.2.6
Requires-Dist: fast-plate-ocr ==0.1.6
Requires-Dist: filelock ==3.15.4
Requires-Dist: fonttools ==4.53.1
Requires-Dist: fsspec ==2024.6.1
Requires-Dist: idna ==3.7
Requires-Dist: Jinja2 ==3.1.4
Requires-Dist: kiwisolver ==1.4.5
Requires-Dist: MarkupSafe ==2.1.5
Requires-Dist: matplotlib ==3.9.1
Requires-Dist: mpmath ==1.3.0
Requires-Dist: networkx ==3.3
Requires-Dist: numpy ==1.26.4
Requires-Dist: opencv-python ==4.10.0.84
Requires-Dist: packaging ==24.1
Requires-Dist: pandas ==2.2.2
Requires-Dist: pillow ==10.4.0
Requires-Dist: psutil ==6.0.0
Requires-Dist: py-cpuinfo ==9.0.0
Requires-Dist: pyparsing ==3.1.2
Requires-Dist: python-dateutil ==2.9.0.post0
Requires-Dist: pytesseract ==0.3.10
Requires-Dist: pytz ==2024.1
Requires-Dist: PyYAML ==6.0.1
Requires-Dist: requests ==2.32.3
Requires-Dist: scipy ==1.14.0
Requires-Dist: seaborn ==0.13.2
Requires-Dist: setuptools ==70.3.0
Requires-Dist: six ==1.16.0
Requires-Dist: sympy ==1.13.0
Requires-Dist: torch ==2.3.1
Requires-Dist: torchvision ==0.18.1
Requires-Dist: tqdm ==4.66.4
Requires-Dist: typing-extensions ==4.12.2
Requires-Dist: tzdata ==2024.1
Requires-Dist: ultralytics ==8.2.55
Requires-Dist: ultralytics-thop ==2.0.0
Requires-Dist: urllib3 ==2.2.2
Requires-Dist: wheel ==0.43.0

# PyPlateX
A scalable and versatile ANPR package leveraging YOLO for detection and multiple OCR options to accurately recognize license plates.


[![Downloads](https://static.pepy.tech/personalized-badge/pyplatex?period=total&units=abbreviation&left_color=grey&right_color=yellow&left_text=Total-Downloads)](https://pepy.tech/project/pyplatex)
[![Supported Versions](https://img.shields.io/pypi/pyversions/pyplatex.svg)](https://pypi.org/project/pyplatex)
![GitHub](https://img.shields.io/github/license/nuhmanpk/pyplatex)
![PyPI](https://img.shields.io/pypi/v/pyplatex)
![PyPI - Downloads](https://img.shields.io/pypi/dm/pyplatex)
[![Downloads](https://static.pepy.tech/personalized-badge/pyplatex?period=week&units=international_system&left_color=grey&right_color=brightgreen&left_text=Downloads/Week)](https://pepy.tech/project/pyplatex)
![PyPI - Format](https://img.shields.io/pypi/format/pyplatex)

## Simple ready to use ANPR 
```py

from pyplatex import ANPR
import asyncio

async def main():
    anpr = ANPR()
    plates = await anpr.detect('./typesofcarnumberplates-02-01.jpg', save_image=True)
    print(plates)

# Run the async main function
asyncio.run(main())

```
the output will be like

```json
    {
        'detected': True, 
        'confidence': array(    0.74661, dtype=float32), 
        'saved_path': 'detected_plates/cropped_plate_20240714_145500.jpg'
    }
```

### NOTE
Still cooking in the kitchen‚Äîdon‚Äôt worry, we‚Äôll let you know when it‚Äôs done and ready to serve! üç≥


