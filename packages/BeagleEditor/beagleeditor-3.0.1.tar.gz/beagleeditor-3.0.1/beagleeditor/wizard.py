# Form implementation generated from reading ui file '.\be-wizard.ui'
#
# Created by: PyQt6 UI code generator 6.7.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
import json

def run_from_main_app():
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Wizard = QtWidgets.QWizard()
    ui = Ui_Wizard()
    ui.setupUi(Wizard)
    Wizard.show()
    sys.exit(app.exec())

class Ui_Wizard(object):
    def setupUi(self, Wizard):
        Wizard.setObjectName("Wizard")
        Wizard.resize(649, 379)
        self.wizardPage1 = QtWidgets.QWizardPage()
        self.wizardPage1.setObjectName("wizardPage1")
        self.label = QtWidgets.QLabel(parent=self.wizardPage1)
        self.label.setGeometry(QtCore.QRect(10, 10, 631, 61))
        font = QtGui.QFont()
        font.setPointSize(32)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(parent=self.wizardPage1)
        self.label_2.setGeometry(QtCore.QRect(10, 70, 351, 16))
        self.label_2.setObjectName("label_2")
        self.radioButton = QtWidgets.QRadioButton(parent=self.wizardPage1)
        self.radioButton.setGeometry(QtCore.QRect(220, 90, 62, 14))
        self.radioButton.setObjectName("radioButton")
        self.radioButton_2 = QtWidgets.QRadioButton(parent=self.wizardPage1)
        self.radioButton_2.setGeometry(QtCore.QRect(0, 90, 62, 14))
        self.radioButton_2.setObjectName("radioButton_2")
        self.label_3 = QtWidgets.QLabel(parent=self.wizardPage1)
        self.label_3.setGeometry(QtCore.QRect(10, 110, 621, 16))
        self.label_3.setObjectName("label_3")
        Wizard.addPage(self.wizardPage1)
        self.wizardPage2 = QtWidgets.QWizardPage()
        self.wizardPage2.setObjectName("wizardPage2")
        self.label_4 = QtWidgets.QLabel(parent=self.wizardPage2)
        self.label_4.setGeometry(QtCore.QRect(0, 0, 631, 61))
        font = QtGui.QFont()
        font.setPointSize(32)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.pushButton = QtWidgets.QPushButton(parent=self.wizardPage2)
        self.pushButton.setGeometry(QtCore.QRect(0, 50, 631, 17))
        self.pushButton.setObjectName("pushButton")
        Wizard.addPage(self.wizardPage2)
        Wizard.setStyleSheet("QWidget { background-color: white; color: black; }")

        self.retranslateUi(Wizard)
        QtCore.QMetaObject.connectSlotsByName(Wizard)
        self.pushButton.clicked.connect(self.save_settings)

    def save_settings(self):
        f = open("beagleeditor_settings.json", "w")
        if self.radioButton.isChecked():
            be_settings = {
                "settings": {
                    "theme": "dark"
                }
            }
        elif self.radioButton_2.isChecked():
            be_settings = {
                "settings": {
                    "theme": "light"
                }
            }
        json.dump(be_settings, f)	

    def retranslateUi(self, Wizard):
        _translate = QtCore.QCoreApplication.translate
        Wizard.setWindowTitle(_translate("Wizard", "Wizard"))
        self.label.setText(_translate("Wizard", "Welcome to BeagleEditor"))
        self.label_2.setText(_translate("Wizard", "Do you prefer dark mode or light mode?"))
        self.radioButton.setText(_translate("Wizard", "Dark Mode"))
        self.radioButton_2.setText(_translate("Wizard", "Light mode"))
        self.label_3.setText(_translate("Wizard", "BeagleEditor supports programming languages, too. You can programming app with BeagleEditor, too"))
        self.label_4.setText(_translate("Wizard", "Ready to use!"))
        self.pushButton.setText(_translate("Wizard", "Save Settings"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Wizard = QtWidgets.QWizard()
    ui = Ui_Wizard()
    ui.setupUi(Wizard)
    Wizard.show()
    sys.exit(app.exec())
