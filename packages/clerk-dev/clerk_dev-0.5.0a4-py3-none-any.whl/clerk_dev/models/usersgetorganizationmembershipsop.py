"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
from .organizationmemberships import OrganizationMemberships, OrganizationMembershipsTypedDict
from clerk_dev.types import BaseModel
from clerk_dev.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from typing import Callable, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class UsersGetOrganizationMembershipsRequestTypedDict(TypedDict):
    user_id: str
    r"""The ID of the user whose organization memberships we want to retrieve"""
    limit: NotRequired[float]
    r"""Applies a limit to the number of results returned.
    Can be used for paginating the results together with `offset`.
    """
    offset: NotRequired[float]
    r"""Skip the first `offset` results when paginating.
    Needs to be an integer greater or equal to zero.
    To be used in conjunction with `limit`.
    """
    

class UsersGetOrganizationMembershipsRequest(BaseModel):
    user_id: Annotated[str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    r"""The ID of the user whose organization memberships we want to retrieve"""
    limit: Annotated[Optional[float], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = 10
    r"""Applies a limit to the number of results returned.
    Can be used for paginating the results together with `offset`.
    """
    offset: Annotated[Optional[float], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = 0
    r"""Skip the first `offset` results when paginating.
    Needs to be an integer greater or equal to zero.
    To be used in conjunction with `limit`.
    """
    

class UsersGetOrganizationMembershipsResponseTypedDict(TypedDict):
    result: OrganizationMembershipsTypedDict
    

class UsersGetOrganizationMembershipsResponse(BaseModel):
    next: Callable[[], Optional[UsersGetOrganizationMembershipsResponse]]
    
    result: OrganizationMemberships
    
