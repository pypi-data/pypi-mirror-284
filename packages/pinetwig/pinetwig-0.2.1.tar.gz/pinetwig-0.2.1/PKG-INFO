Metadata-Version: 2.1
Name: pinetwig
Version: 0.2.1
Summary: A pinescript-like financial data analysis and trading package
Home-page: https://github.com/AyberkAtalay0/pinetwig
Author: Ayberk ATALAY
Author-email: ayberkatalaypersonal@gmail.com
License: MIT
Keywords: python,pinetwig,financial,data,analysis,tradingview,binance,pinescript,trading,cryptocurrency,chart,candlestick,plotly,matplotlib,visualizing
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >= 3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pandas
Requires-Dist: numpy
Requires-Dist: python-binance
Requires-Dist: websocket-client
Requires-Dist: websockets
Requires-Dist: datetime
Requires-Dist: plotly
Requires-Dist: matplotlib

# pinetwig 0.2.1
[PineTwig](https://github.com/AyberkAtalay0/pinetwig/) is a pinescript-like financial data analysis and trading package.

## Requirements
- Python 3.7 or above on Windows, Linux or macOS

## Installation
```
pip install pinetwig
```

## Examples
Create ```main.py``` file with one of the following examples:

#### Scraping data from Binance.
```
import pinetwig as pt

df = pt.getDataFromBinance(ticker="BTCUSDT", interval="1h", start="2 day ago UTC", end="now")
print(df)
```

#### Scraping data from TradingView.
```
import pinetwig as pt

df = pt.getDataFromTradingView(symbol="NASDAQ:AAPL", interval="5m", length=5000)
print(df)
```

#### List available indicators.
```
import pinetwig as pt

for i in pt.indicators.all:
    print(i)
```

#### Visualizing a financial dataframe. (Candlestick Chart)
```
import pinetwig as pt

df = pt.getDataFromBinance(ticker="BTCUSDT", interval="1h", start="2 day ago UTC", end="now")

df["SMA12"] = pt.sma(df["Close"], 12)

x, y = list(range(len(df))), df["Close"].tolist()
df["Ray1"] = pt.ray(x, (x[0], y[0]), (x[-1], y[-1]*1.02))
df["Ray2"] = pt.ray(x, (x[0], y[0]), (x[-1], y[-1]*0.98))

chart = pt.FancyChart(df, theme="light")
chart.show()
```

#### Generating a linear regression line.
```
import pinetwig as pt

df = pt.getDataFromBinance(ticker="BTCUSDT", interval="1h", start="2 days ago UTC", end="now")
x, y1 = list(range(len(df))), df["Close"].tolist()
y2 = pt.linreg(x, y1)

pt.visualize(lines={"Values": {"x": x, "y": y1}, "Linear Reg.": {"x": x, "y": y2}})
```

#### Generating a ray and visualizing.
```
import pinetwig as pt

x = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
y = [-1, 1, -1, 1, -1, 1, -1, 1, -1, 1]
ray = pt.ray(x, (0, 0), (2, 1))

pt.visualize(lines={"Values": {"x": x, "y": y}, "Ray": {"x": x, "y": ray}})
```

## Learn more
- [PineTwig GitHub](https://github.com/AyberkAtalay0/pinetwig/)
- [PineTwig PyPI](https://pypi.org/project/pinetwig/)
