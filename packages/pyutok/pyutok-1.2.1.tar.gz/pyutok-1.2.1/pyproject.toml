[tool.poetry]
name = "pyutok"
version = "1.2.1"
description = "Inspired by a tool I can not find anymore on the internet: utok 1.5. I use it to clean up path settings in large shell script configuration setups."
packages = [{ include = "utok.py" }]
authors = ["Berthold HÃ¶llmann <berhoel@gmail.com>"]
license = "MIT"
repository = "https://gitlab.com/berhoel/python/pyutok.git"
homepage = "https://python.xn--hllmanns-n4a.de/utok/"
documentation = "https://python.xn--hllmanns-n4a.de/utok/"
readme = "README.rst"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "Intended Audience :: End Users/Desktop",
  "Intended Audience :: System Administrators",
  "Operating System :: POSIX",
  "Topic :: System :: Shells",
  "Topic :: Utilities",
]

[tool.poetry.dependencies]
python = "^3.8"
setuptools = "*"

[tool.poetry.dev-dependencies]
berhoel-sphinx-settings = { git = "https://gitlab.com/berhoel/python/berhoel-sphinx-settings.git", rev = "main" }
black = "*"
isort = "*"
mypy = "*"
pdbp = "*"
pytest = "*"
pytest-benchmark = "*"
pytest-black-ng = "*"
pytest-cache = "*"
pytest-cov = "*"
pytest-env = "*"
pytest-isort = "*"
pytest-mock = "*"
pytest-ruff = "*"
pytest-runner = "*"
pytest-sugar = "*"
rope = "*"
ruff = "*"
sphinx-argparse-cli = "*"
tox = "*"
urllib3 = "*"
xdoctest = "*"

[tool.poetry.scripts]
utok = 'utok:main'

[tool.isort]
dedup_headings = true
include_trailing_comma = true
float_to_top = true
namespace_packages = ['berhoel']
force_grid_wrap = 0
balanced_wrapping = true
use_parentheses = true
length_sort = true
line_length = 88
combine_as_imports = true
known_first_party = ["berhoel"]
known_third_party = [
    "pytest",
]

[tool.ruff]
namespace-packages = ["docs", 'berhoel']
line-length = 88

[tool.ruff.lint]
select = ["ALL"]
ignore = ["ANN101", "D211", "D213"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.isort]
force-sort-within-sections = true
force-wrap-aliases = true
combine-as-imports = true
section-order = [
  "future",
  "standard-library",
  "third-party",
  "first-party",
  "local-folder",
]
default-section = "third-party"
known-first-party = ["berhoel"]
known-third-party = ["pytest"]

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true

[tool.tox]
legacy_tox_ini = """

[tox]
isolated_build = true
skip_missing_interpreters = true
envlist = py{38, 39, 310, 311, 312, 313}

[testenv]
deps =
   git+https://gitlab.com/berhoel/python/berhoel-sphinx-settings.git
   pdbp
   pytest
   pytest-benchmark
   pytest-cov
   pytest-mock
   pytest-ruff
   pytest-runner
   pytest-sugar
   rope
   toml
   xdoctest

whitelist_externals = poetry
allowlist_externals = poetry

commands =
   poetry run pytest
"""

[tool.pytest.ini_options]
junit_family = "xunit2"
doctest_encoding = "UTF-8"
minversion = "7.0"
addopts = "--import-mode=importlib --doctest-modules --ff --pdb -s --cov=. --cov-report=term --cov-report=html --cov-branch --ruff"
testpaths = ["."]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
