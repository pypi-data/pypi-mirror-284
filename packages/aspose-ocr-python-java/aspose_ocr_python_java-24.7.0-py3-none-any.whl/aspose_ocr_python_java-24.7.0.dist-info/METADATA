Metadata-Version: 2.1
Name: aspose-ocr-python-java
Version: 24.7.0
Summary: Aspose.OCR for Python via .Java is a powerful, while easy-to-use optical character recognition (OCR) engine for your Python applications and notebooks.
Home-page: https://products.aspose.com/ocr/
Author: Aspose
Author-email: aleksander.golshtain@aspose.com
Project-URL: GitHub, https://github.com/aspose-ocr/Aspose.OCR-for-Python-via-Java
Keywords: aspose,ocr,java
Classifier: Programming Language :: Python :: 3.8
Classifier: License :: Other/Proprietary License
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: JPype1 (==1.4.1)

# Aspose.OCR for Python via Java


[Product Page](https://products.aspose.com/ocr/python-java/) | [Documentation](https://docs.aspose.com/ocr/python-java/) | [Demos](https://products.aspose.app/ocr/family) | [Blog](https://blog.aspose.com/categories/aspose.ocr-product-family/) | [API Reference](https://reference.aspose.com/ocr/python-java/) | [Search](https://search.aspose.com/) | [Free Support](https://forum.aspose.com/c/ocr/16) | [Temporary License](https://purchase.aspose.com/temporary-license)

Try our [Free Online Apps](https://products.aspose.app/ocr/family) demonstrating some of the most popular Aspose.OCR functionality.

**Aspose.OCR for Python via JAVA** is a powerful, while easy-to-use optical character recognition (OCR) engine for your Python applications and notebooks. In less than **10** lines of code, you can recognize text in **28** languages based on Latin, Cyrillic, and Asian scripts, returning results in the most popular document and data interchange formats.
There is no need to learn complex mathematical models, build machine learning algorithms and train neural networks — our simple and robust API will do everything for you.

The library works equally well with all sources, from a high-quality scan to a quick photo on a smartphone. Whether the image is rotated, distorted or noisy — automatic pre- and post-processing filters provide the highest recognition accuracy in the shortest time.


Check out the [Landing Pages](https://products.aspose.com/ocr/python-java/) of **Aspose.OCR for Python via JAVA** for a more detailed description of the features and possibilities of the library.

## Key features

- Recognizes text in 28 languages based on Latin, Cyrillic and Asian scrips, including texts in mixed languages.
- Accurately extracts texts regardless of the original image quality - work with rotated, distorted and noisy pictures and photos.
- Supports most file formats you can get from a scanner or camera, as well as web links.
- Automatically corrects spelling errors to further improve the results without manual intervention.
- Reads multi-page documents, folders, and even ZIP archives in bulk and returns results in the most popular document and data exchange formats.


## Get Started

Run ```pip install aspose-ocr-python-java``` to fetch the package. If you already have **Aspose.OCR for Python via JAVA** and want to get the latest version, please run ```pip install --upgrade aspose-ocr-python-java```.

To learn more about **Aspose.OCR for Python via JAVA** and explore the basic requirements and features of the library, check out the following [Aspose.OCR for Python via JAVA Documentation](https://docs.aspose.com/ocr/python-java/) pages for other use cases.

### Code snippet

**Aspose.OCR for Python via JAVA** is extremely easy to use, regardless of the application's scale and complexity. Let's try to create a very simple application that can extract text from images and output it to the console.

1. Install  the latest version of the *aspose-ocr* package using pip and install Jpype1.
2. Import `aspose` module into the application.
3. Create an instance of `AsposeOcr` class.
4. Create an instance of `OcrInput` class and add one or more images to it.
5. Extract text from the image using `recognize` method.
6. Output the extracted text to the console.

Full code:

```python
import aspose as ocr

# Initialize OCR engine
api = AsposeOcr()

# Initialize OCR input
input = OcrInput(InputType.SINGLE_IMAGE)
input.add("1.png")
input.add("2.jpg")

# Recognize images
settings = ocr.RecognitionSettings()
settings.set_detect_areas_mode(ocr.DetectAreasMode.PHOTO)
result = api.recognize(input, settings)

# Print result
print(result[0].recognition_text)
print(result[1].recognition_text)
```

[Product Page](https://products.aspose.com/ocr/python-java/) | [Documentation](https://docs.aspose.com/ocr/python-java/) | [Demos](https://products.aspose.app/ocr/family) | [Blog](https://blog.aspose.com/categories/aspose.ocr-product-family/) | [API Reference](https://reference.aspose.com/ocr/python-java/) | [Search](https://search.aspose.com/) | [Free Support](https://forum.aspose.com/c/ocr/16) | [Temporary License](https://purchase.aspose.com/temporary-license)
