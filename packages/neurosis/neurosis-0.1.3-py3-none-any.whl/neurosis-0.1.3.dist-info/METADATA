Metadata-Version: 2.1
Name: neurosis
Version: 0.1.3
Summary: A neural network trainer (for weebs)
Author-email: Andi Powers-Holmes <aholmes@omnom.net>
License: The extensive modifications made to the original code are released/relicensed under:
        
        GNU General Public License v3
        
        Copyright (c) 2023, Andi Powers-Holmes
        
        This program is free software: you can redistribute it and/or modify
        it under the terms of the GNU General Public License as published by
        the Free Software Foundation, either version 3 of the License, or
        (at your option) any later version.
        
        This program is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU General Public License for more details.
        
        You should have received a copy of the GNU General Public License
        along with this program. If not, see <http://www.gnu.org/licenses/>.
        
        ---
        
        In addition to the above, Andi-Powers Holmes grants the following additional permissions:
        
        Stability AI and its affiliates are granted a non-exclusive, worldwide, royalty-free,
        non-transferable, non-sublicensable, non-revocable license to use, reproduce, modify,
        and distribute the Software, and to permit persons to whom the Software is furnished to do so,
        subject to the conditions of the MIT License the original code was released under (see below).
        
        As a further note, should the GPLv3 license be found to be incompatible with the MIT License,
        the MIT License shall take precedence, and the GPLv3 license shall be considered null and void.
        
        Any person or entity who wishes to use this software in a manner not permitted by the above
        license(s) can contact Andi Powers-Holmes at the email address listed above (or open a GitHub issue)
        to negotiate a separate license agreement.
        
        Aside: In general I'm happy to hand out MIT licenses, but I'd like to keep track of who's using this
        so it doesn't get wrapped up in some proprietary for-profit software package without credit and
        without giving back to the community.
        
        ---
        
        Based upon code from Stability AI's [generative-models/sgm](https://github.com/Stability-AI/generative-models)
        repository, originally released under the following license:
        
        MIT License
        
        Copyright (c) 2023 Stability AI
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Keywords: deep-learning,diffusers,machine-learning,neural-networks,pytorch-lightning,pytorch,stable-diffusion,transformers
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE.md
Requires-Dist: accelerate >=0.26.1
Requires-Dist: chardet ==5.1.0
Requires-Dist: colorama <0.5.0,>=0.4.3
Requires-Dist: colorcet <4.0.0,>=3.0.1
Requires-Dist: crc32c >=2.3
Requires-Dist: diffusers >=0.26.1
Requires-Dist: einops >=0.6.1
Requires-Dist: fsspec >=2024.4.0
Requires-Dist: jsonargparse[argcomplete,fsspec,omegaconf,signatures] <5.0.0,>=4.27.1
Requires-Dist: kornia >=0.7.0
Requires-Dist: lightning[extra] >=2.2.1
Requires-Dist: natsort >=8.4.0
Requires-Dist: ninja >=1.11.0
Requires-Dist: numpy >=1.24.3
Requires-Dist: open-clip-torch >=2.2.0
Requires-Dist: opencv-contrib-python-headless <4.7.0,>=4.6.0.66
Requires-Dist: pandas >=2.0.0
Requires-Dist: pillow <11.0.0,>=10.0.0
Requires-Dist: pudb >=2022.1.3
Requires-Dist: pydantic <2.6.0,>=2.5.0
Requires-Dist: pydantic-settings <2.2.0,>=2.0.0
Requires-Dist: pytorch-optimizer >=2.12.0
Requires-Dist: rich <14.0.0,>=13.0.0
Requires-Dist: safetensors >=0.4.2
Requires-Dist: scipy <1.12.0,>=1.11.1
Requires-Dist: sentencepiece >=0.1.99
Requires-Dist: shellingham <2.0.0,>=1.5.0
Requires-Dist: tokenizers >=0.13.3
Requires-Dist: torch >=2.1.0
Requires-Dist: torchmetrics >=1.3.0
Requires-Dist: torchvision
Requires-Dist: tqdm >=4.65.0
Requires-Dist: transformers >=4.36.0
Requires-Dist: typer <1.0.0,>=0.9.0
Requires-Dist: wandb <0.18.0,>=0.17.0
Provides-Extra: all
Requires-Dist: neurosis[dev] ; extra == 'all'
Requires-Dist: neurosis[extra] ; extra == 'all'
Requires-Dist: neurosis[mongo] ; extra == 'all'
Requires-Dist: neurosis[multinode] ; extra == 'all'
Requires-Dist: neurosis[vae] ; extra == 'all'
Provides-Extra: dev
Requires-Dist: ruff >=0.0.289 ; extra == 'dev'
Requires-Dist: setuptools-scm >=8.0.0 ; extra == 'dev'
Requires-Dist: pre-commit >=3.0.0 ; extra == 'dev'
Requires-Dist: tabulate >=0.8.9 ; extra == 'dev'
Provides-Extra: extra
Requires-Dist: bitsandbytes >=0.41.0 ; extra == 'extra'
Requires-Dist: datasets >=2.13.0 ; extra == 'extra'
Requires-Dist: hf-transfer <1.0.0,>=0.1.4 ; extra == 'extra'
Requires-Dist: nvidia-ml-py <13.0.0,>=12.0.0 ; extra == 'extra'
Requires-Dist: adlfs >=2024.4.0 ; extra == 'extra'
Requires-Dist: s3fs >=2024.4.0 ; extra == 'extra'
Provides-Extra: mongo
Requires-Dist: pyarrow <17.0.0,>=13.0.0 ; extra == 'mongo'
Requires-Dist: pymongoarrow <1.6.0,>=1.4.0 ; extra == 'mongo'
Requires-Dist: zstandard >=0.22.0 ; extra == 'mongo'
Provides-Extra: multinode
Requires-Dist: torchelastic <0.3.0,>=0.2.2 ; extra == 'multinode'
Provides-Extra: novae
Requires-Dist: neurosis[dev] ; extra == 'novae'
Requires-Dist: neurosis[extra] ; extra == 'novae'
Requires-Dist: neurosis[mongo] ; extra == 'novae'
Requires-Dist: neurosis[multinode] ; extra == 'novae'

# neurosis

a neural network trainer for ~~weebs~~ diffusion models.

## OwO what's this?

I got sick and tired of trying to trace execution through the arcane codepaths of existing Stable Diffusion trainers, so I wrote my own.
This is based off the modeling/training code from [@Stability-AI/generative-models](https://github.com/Stability-AI/generative-models),
with *significant* modification for usability and readability.

## Features

Major changes from `generative-models` include:

- Architectural changes:
  - Migration to full PyTorch Lightning
  - LightningCLI trainer interface and configuration management (config file format is largely the same as `generative-models`, but with some minor differences in keywords)
  - Refactoring of some of the configuration code and model subclassing
  - "oops, all wandb" approach to logging (with some TensorBoard support as well)
- Trainer changes:
  - Use of PyTorch Lightning's `Trainer` class for training
  - Support for multiple GPUs (and multiple nodes, if you're into that)
  - Support for individual learning rates for the UNet and for each TE module
  - VAE training support! (kinda! discriminators are iffy but it works mostly)
- Module changes:
  - Rework of the `ImageLogger` to... sorta kinda work?
  - Adding support for `Adafactor` scheduler as well as the usual BitsAndBytes etc. ones
  - hey look tag frequency based loss scaling wonder where we got that one from :eyes:
  - Cleanup and refactoring of most modules to make them more readable and easier to trace execution
  - Probably more duplicated code than there really should be but here we are in this hell timeline
  - A huge pile of small changes too numerous to mention
- Dataset handling:
  - Support for Huggingface datasets (kinda! you're on your own but it should work if the keys match)
  - Shiny new ImageFolder datasets in "square", "square with captions", and "aspect-bucketed with captions" flavors
  - Support for custom datasets (see `neurosis/dataset/` for examples)
  - Funny hybrid mongo+s3 dataset we're using for large-scale training (stop judging me, it works)
  - Support for custom data transform functions injected into the dataset pipeline[^1]

[^1]: completely untested and not entirely pushed to public yet sry

## Installation

OK so first of all:

1. **Do Not.**

if you REALLY must, here:

```bash
git clone https://github.com/neggles/neurosis.git neurosis
cd neurosis
python3.10 -m venv .venv
source .venv/bin/activate
python -m pip install -U pip setuptools wheel setuptools-scm
python -m pip install -e '.[all]'
```

There is a docker container in GitHub packages, if you're feeling masochistic today.

Will also be throwing up Kubeflow manifest examples at some point (needs more testing)

## Usage

I am once again asking,

1. Please, *please just **Do Not***

but if the idea of arguing with my code and trying to figure shit out from incomplete outdated configuration templates
sounds attractive to you, by all means:

```bash
python -m neurosis.trainer.cli --help
```

If you need more assistance than that, this code is probably not ready for you to use yet.

### If you open an issue without providing liberal amounts of detail, logs, exactly what you tried, and exactly how it broke, you're going to get WONTFIX'd for the time being.

This will change as/if/when the code gets a bit more stable and usable.

## License

My own code is GPLv3, see [LICENSE.md](LICENSE.md)

A significant amount of code is copied from from [@Stability-AI/generative-models](https://github.com/Stability-AI/generative-models),which is MIT licensed and has been relicensed here under GPLv3 due to the extensive modifications.

Some code carries its own licenses (most notably LPIPS and Adafactor),
see the appropriate SPDX identifiers and LICENSE files in the relevant files' directories.
