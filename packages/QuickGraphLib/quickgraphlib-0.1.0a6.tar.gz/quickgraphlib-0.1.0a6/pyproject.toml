[project]
name = "QuickGraphLib"
description = "A scientific graphing library for QtQuick"
readme = "README.md"
license = { file = "LICENCE" }
authors = [{ name = "Matthew Joyce", email = "matthew.joyce@refeyn.com" }]
dependencies = ["PySide6", "contourpy"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: X11 Applications :: Qt",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Topic :: Multimedia :: Graphics :: Presentation",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: User Interfaces",
    "Typing :: Typed",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/refeyn/QuickGraphLib"
Issues = "https://github.com/refeyn/QuickGraphLib/issues"
Documentation = "https://refeyn.github.io/QuickGraphLib"
Source = "https://github.com/refeyn/QuickGraphLib"

[project.optional-dependencies]
analyse = [
    # Code analysis
    "black",
    "pylint",
    "mypy",
    "pre-commit",
    "lxml",
    # Testing
    "pytest",
    "pytest-cov",
]

[build-system]
requires = ["setuptools>=61.0.0", "setuptools-git-versioning<2", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools-git-versioning]
enabled = true

[tool.setuptools.packages.find]
include = ["quickgraphlib_helpers*"]

[tool.cibuildwheel]
build = [
    "cp37-macosx_x86_64",
    "cp37-win_amd64",
    "cp37-manylinux_x86_64",
    # "cp37-manylinux_aarch64",
]
before-all = "python ci/setup_qt.py"
repair-wheel-command = ""
build-frontend = "build"
# test-command = "pytest {project}/tests"
# test-extras = ["tests"]

[tool.cibuildwheel.environment]
CMAKE_BUILD_FLAGS = "-DCMAKE_PREFIX_PATH=\"$(python ci/find_qt.py)/lib/cmake\""

[tool.cibuildwheel.macos]
archs = ["universal2"]

[tool.cibuildwheel.linux]
archs = ["x86_64"]                                                                                                   # , "aarch64"]
manylinux-x86_64-image = "manylinux_2_28"
manylinux-aarch64-image = "manylinux_2_28"
repair-wheel-command = "cp {wheel} {dest_dir}; wheel tags --remove --platform-tag $AUDITWHEEL_PLAT {dest_dir}/*.whl"

[tool.cibuildwheel.windows]
archs = ["AMD64"]

[tool.isort]
profile = "black"
force_alphabetical_sort_within_sections = true
combine_as_imports = true

[tool.pylint.MAIN]
extension-pkg-whitelist = ["PySide6"]

[tool.pylint.'MESSAGES CONTROL']
disable = [
    "R", # R=Refactor
    "C", # C=Conventions
]
