Metadata-Version: 2.1
Name: devito
Version: 4.8.9
Summary: Finite Difference DSL for symbolic computation.
Home-page: http://www.devitoproject.org
Author: Imperial College London
Author-email: g.gorman@imperial.ac.uk
License: MIT
Project-URL: Documentation, https://www.devitoproject.org/devito/index.html
Project-URL: Source Code, https://github.com/devitocodes/devito
Project-URL: Issue Tracker, https://github.com/devitocodes/devito/issues
Platform: Linux
Platform: Mac OS-X
Platform: Unix
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Education
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: MacOS
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation
Classifier: Programming Language :: C
Classifier: Programming Language :: C++
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Topic :: Software Development :: Code Generators
Classifier: Topic :: Software Development :: Compilers
Requires-Python: >=3.8
Provides-Extra: extras
Provides-Extra: mpi
Provides-Extra: nvidia
Provides-Extra:  python_version >= "3.8"
Provides-Extra: tests
License-File: LICENSE.md


      Devito is a tool for performing optimised Finite Difference (FD)
      computation from high-level symbolic problem definitions. Devito
      performs automated code generation and Just-In-time (JIT) compilation
      based on symbolic equations defined in SymPy to create and execute highly
      optimised Finite Difference stencil kernels on multiple computer platforms.
