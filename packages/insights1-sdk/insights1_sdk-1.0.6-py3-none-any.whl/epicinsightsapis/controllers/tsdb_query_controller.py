# -*- coding: utf-8 -*-

"""
epicinsightsapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from epicinsightsapis.api_helper import APIHelper
from epicinsightsapis.configuration import Server
from epicinsightsapis.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from epicinsightsapis.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from epicinsightsapis.models.tsdb_response import TsdbResponse
from epicinsightsapis.exceptions.api_exception import APIException
from epicinsightsapis.exceptions.insights_api_v_1_orgs_tsdb_query_401_error_exception import InsightsApiV1OrgsTsdbQuery401ErrorException
from epicinsightsapis.exceptions.insights_api_v_1_orgs_tsdb_query_403_error_exception import InsightsApiV1OrgsTsdbQuery403ErrorException
from epicinsightsapis.exceptions.insights_api_v_1_orgs_tsdb_query_404_error_exception import InsightsApiV1OrgsTsdbQuery404ErrorException


class TSDBQueryController(BaseController):

    """A Controller to access Endpoints in the epicinsightsapis API."""
    def __init__(self, config):
        super(TSDBQueryController, self).__init__(config)

    def tsdb_query(self,
                   org_id,
                   body):
        """Does a POST request to /insights/api/v1/orgs/{org_id}/tsdb/query.

        This API endpoint can be used to query TSDB and fetch data.

        Args:
            org_id (str): `org-id` of device
            body (TsdbPostBody): Query TSDB body object

        Returns:
            TsdbResponse: Response from the API. Successful operation. NOTE:
                the "values" in the query result is a list of list. Elements
                in this list can be of any type string/integer/float/boolean.
                Because of the limitation in swagger 2.0, this information
                could not be encoded. So for now it is maked as string

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/insights/api/v1/orgs/{org_id}/tsdb/query')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('org_id')
                            .value(org_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('APIKeyHeader'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(TsdbResponse.from_dictionary)
            .local_error('400', 'The API endpoint exists but its syntax/payload is incorrect, detail may be given', APIException)
            .local_error('401', 'Unauthorized', InsightsApiV1OrgsTsdbQuery401ErrorException)
            .local_error('403', 'Permission Denied', InsightsApiV1OrgsTsdbQuery403ErrorException)
            .local_error('404', 'Not found. The API endpoint doesn\'t exist or resource doesn\'t exist', InsightsApiV1OrgsTsdbQuery404ErrorException)
        ).execute()
