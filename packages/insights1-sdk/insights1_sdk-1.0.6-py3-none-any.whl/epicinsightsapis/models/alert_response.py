# -*- coding: utf-8 -*-

"""
epicinsightsapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from epicinsightsapis.api_helper import APIHelper
from epicinsightsapis.models.alert import Alert


class AlertResponse(object):

    """Implementation of the 'alertResponse' model.

    TODO: type model description here.

    Attributes:
        alert (Alert): TODO: type description here.
        status (str): TODO: type description here.
        total (int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "alert": 'alert',
        "status": 'status',
        "total": 'total'
    }

    _optionals = [
        'alert',
        'status',
        'total',
    ]

    def __init__(self,
                 alert=APIHelper.SKIP,
                 status=APIHelper.SKIP,
                 total=APIHelper.SKIP):
        """Constructor for the AlertResponse class"""

        # Initialize members of the class
        if alert is not APIHelper.SKIP:
            self.alert = alert 
        if status is not APIHelper.SKIP:
            self.status = status 
        if total is not APIHelper.SKIP:
            self.total = total 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        alert = Alert.from_dictionary(dictionary.get('alert')) if 'alert' in dictionary.keys() else APIHelper.SKIP
        status = dictionary.get("status") if dictionary.get("status") else APIHelper.SKIP
        total = dictionary.get("total") if dictionary.get("total") else APIHelper.SKIP
        # Return an object of this model
        return cls(alert,
                   status,
                   total)
