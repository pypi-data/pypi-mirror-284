# -*- coding: utf-8 -*-

"""
epicinsightsapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from epicinsightsapis.api_helper import APIHelper


class StatusCounts(object):

    """Implementation of the 'StatusCounts' model.

    TODO: type model description here.

    Attributes:
        ack (int): TODO: type description here.
        open (int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "ack": 'ack',
        "open": 'open'
    }

    _optionals = [
        'ack',
        'open',
    ]

    def __init__(self,
                 ack=APIHelper.SKIP,
                 open=APIHelper.SKIP):
        """Constructor for the StatusCounts class"""

        # Initialize members of the class
        if ack is not APIHelper.SKIP:
            self.ack = ack 
        if open is not APIHelper.SKIP:
            self.open = open 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        ack = dictionary.get("ack") if dictionary.get("ack") else APIHelper.SKIP
        open = dictionary.get("open") if dictionary.get("open") else APIHelper.SKIP
        # Return an object of this model
        return cls(ack,
                   open)
