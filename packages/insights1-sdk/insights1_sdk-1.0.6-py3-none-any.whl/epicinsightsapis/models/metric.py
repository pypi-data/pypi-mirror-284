# -*- coding: utf-8 -*-

"""
epicinsightsapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from epicinsightsapis.api_helper import APIHelper


class Metric(object):

    """Implementation of the 'Metric' model.

    Mapping for the labels of the series.

    Attributes:
        name (str): Name of the metric in the format
            `<topic>/<rule>[/<trigger>]:<field>`. For triggers, <field> can
            only be either `color` or `message`.
        db (str): Database name in the format
            `<tenant>:<org-id>:<device-mac>`.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "name": '__name__',
        "db": '_db'
    }

    _optionals = [
        'name',
        'db',
    ]

    def __init__(self,
                 name=APIHelper.SKIP,
                 db=APIHelper.SKIP):
        """Constructor for the Metric class"""

        # Initialize members of the class
        if name is not APIHelper.SKIP:
            self.name = name 
        if db is not APIHelper.SKIP:
            self.db = db 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        name = dictionary.get("__name__") if dictionary.get("__name__") else APIHelper.SKIP
        db = dictionary.get("_db") if dictionary.get("_db") else APIHelper.SKIP
        # Return an object of this model
        return cls(name,
                   db)

    @classmethod
    def validate(cls, dictionary):
        """Validates dictionary against class required properties

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            boolean : if dictionary is valid contains required properties.

        """

        if isinstance(dictionary, cls):
            return True

        if not isinstance(dictionary, dict):
            return False

        return True
