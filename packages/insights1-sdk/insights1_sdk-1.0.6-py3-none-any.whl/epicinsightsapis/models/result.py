# -*- coding: utf-8 -*-

"""
epicinsightsapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from epicinsightsapis.api_helper import APIHelper
from epicinsightsapis.models.metric import Metric


class Result(object):

    """Implementation of the 'Result' model.

    Response data for a series.

    Attributes:
        metric (Metric): Mapping for the labels of the series.
        values (List[List[int | str]] | None): List of series data

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "metric": 'metric',
        "values": 'values'
    }

    _optionals = [
        'metric',
        'values',
    ]

    def __init__(self,
                 metric=APIHelper.SKIP,
                 values=APIHelper.SKIP):
        """Constructor for the Result class"""

        # Initialize members of the class
        if metric is not APIHelper.SKIP:
            self.metric = metric 
        if values is not APIHelper.SKIP:
            self.values = values 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        from epicinsightsapis.utilities.union_type_lookup import UnionTypeLookUp

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        metric = Metric.from_dictionary(dictionary.get('metric')) if 'metric' in dictionary.keys() else APIHelper.SKIP
        values = APIHelper.deserialize_union_type(UnionTypeLookUp.get('ResultValues'), dictionary.get('values'), False) if dictionary.get('values') is not None else APIHelper.SKIP
        # Return an object of this model
        return cls(metric,
                   values)
