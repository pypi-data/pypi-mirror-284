# -*- coding: utf-8 -*-

"""
epicinsightsapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from epicinsightsapis.api_helper import APIHelper


class SeverityCounts(object):

    """Implementation of the 'SeverityCounts' model.

    TODO: type model description here.

    Attributes:
        critical (int): TODO: type description here.
        minor (int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "critical": 'critical',
        "minor": 'minor'
    }

    _optionals = [
        'critical',
        'minor',
    ]

    def __init__(self,
                 critical=APIHelper.SKIP,
                 minor=APIHelper.SKIP):
        """Constructor for the SeverityCounts class"""

        # Initialize members of the class
        if critical is not APIHelper.SKIP:
            self.critical = critical 
        if minor is not APIHelper.SKIP:
            self.minor = minor 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        critical = dictionary.get("critical") if dictionary.get("critical") else APIHelper.SKIP
        minor = dictionary.get("minor") if dictionary.get("minor") else APIHelper.SKIP
        # Return an object of this model
        return cls(critical,
                   minor)
