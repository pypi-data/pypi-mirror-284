# -*- coding: utf-8 -*-

"""
epicinsightsapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from epicinsightsapis.api_helper import APIHelper


class AlertActionPostBody(object):

    """Implementation of the 'alertActionPostBody' model.

    TODO: type model description here.

    Attributes:
        action (str): action for the alert (ack, unack, close, open, shelve)
        text (str): TODO: type description here.
        timeout (int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "action": 'action',
        "text": 'text',
        "timeout": 'timeout'
    }

    _optionals = [
        'action',
        'text',
        'timeout',
    ]

    def __init__(self,
                 action=APIHelper.SKIP,
                 text=APIHelper.SKIP,
                 timeout=APIHelper.SKIP):
        """Constructor for the AlertActionPostBody class"""

        # Initialize members of the class
        if action is not APIHelper.SKIP:
            self.action = action 
        if text is not APIHelper.SKIP:
            self.text = text 
        if timeout is not APIHelper.SKIP:
            self.timeout = timeout 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        action = dictionary.get("action") if dictionary.get("action") else APIHelper.SKIP
        text = dictionary.get("text") if dictionary.get("text") else APIHelper.SKIP
        timeout = dictionary.get("timeout") if dictionary.get("timeout") else APIHelper.SKIP
        # Return an object of this model
        return cls(action,
                   text,
                   timeout)
