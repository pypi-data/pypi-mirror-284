# -*- coding: utf-8 -*-

"""
epicinsightsapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from epicinsightsapis.api_helper import APIHelper
from epicinsightsapis.models.response import Response


class TsdbResponse(object):

    """Implementation of the 'tsdb_response' model.

    Response for tsdb queries

    Attributes:
        responses (List[Response]): Responses for each of the query in the
            request body (in order).

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "responses": 'responses'
    }

    _optionals = [
        'responses',
    ]

    def __init__(self,
                 responses=APIHelper.SKIP):
        """Constructor for the TsdbResponse class"""

        # Initialize members of the class
        if responses is not APIHelper.SKIP:
            self.responses = responses 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        responses = None
        if dictionary.get('responses') is not None:
            responses = [Response.from_dictionary(x) for x in dictionary.get('responses')]
        else:
            responses = APIHelper.SKIP
        # Return an object of this model
        return cls(responses)
