# -*- coding: utf-8 -*-

"""
epicinsightsapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from epicinsightsapis.api_helper import APIHelper


class Rib(object):

    """Implementation of the 'Rib' model.

    TODO: type model description here.

    Attributes:
        count (int): count of routes
        no_data (bool): flag to indicate the presence of data

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "count": 'count',
        "no_data": 'no_data'
    }

    _optionals = [
        'count',
        'no_data',
    ]

    def __init__(self,
                 count=APIHelper.SKIP,
                 no_data=APIHelper.SKIP):
        """Constructor for the Rib class"""

        # Initialize members of the class
        if count is not APIHelper.SKIP:
            self.count = count 
        if no_data is not APIHelper.SKIP:
            self.no_data = no_data 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        count = dictionary.get("count") if dictionary.get("count") else APIHelper.SKIP
        no_data = dictionary.get("no_data") if "no_data" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(count,
                   no_data)

    @classmethod
    def validate(cls, dictionary):
        """Validates dictionary against class required properties

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            boolean : if dictionary is valid contains required properties.

        """

        if isinstance(dictionary, cls):
            return True

        if not isinstance(dictionary, dict):
            return False

        return True
