Metadata-Version: 2.1
Name: vex_api_client
Version: 1.0.0
Summary: FastAPI
Home-page: https://github.com/GIT_USER_ID/GIT_REPO_ID
License: NoLicense
Keywords: OpenAPI,OpenAPI-Generator,FastAPI
Author: OpenAPI Generator Community
Author-email: team@openapitools.org
Requires-Python: >=3.7,<4.0
Classifier: License :: Other/Proprietary License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: pydantic (>=2)
Requires-Dist: python-dateutil (>=2.8.2)
Requires-Dist: typing-extensions (>=4.7.1)
Requires-Dist: urllib3 (>=1.25.3)
Project-URL: Repository, https://github.com/GIT_USER_ID/GIT_REPO_ID
Description-Content-Type: text/markdown

# vex-api-client
No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

This Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: 0.1.0
- Package version: 1.0.0
- Generator version: 7.7.0
- Build package: org.openapitools.codegen.languages.PythonClientCodegen

## Requirements.

Python 3.7+

## Installation & Usage
### pip install

If the python package is hosted on a repository, you can install directly using:

```sh
pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git
```
(you may need to run `pip` with root permission: `sudo pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git`)

Then import the package:
```python
import vex_api_client
```

### Setuptools

Install via [Setuptools](http://pypi.python.org/pypi/setuptools).

```sh
python setup.py install --user
```
(or `sudo python setup.py install` to install the package for all users)

Then import the package:
```python
import vex_api_client
```

### Tests

Execute `pytest` to run the tests.

## Getting Started

Please follow the [installation procedure](#installation--usage) and then run the following:

```python

import vex_api_client
from vex_api_client.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to http://localhost
# See configuration.py for a list of all supported configuration parameters.
configuration = vex_api_client.Configuration(
    host = "http://localhost"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

# Configure Bearer authorization: JWTBearer
configuration = vex_api_client.Configuration(
    access_token = os.environ["BEARER_TOKEN"]
)


# Enter a context with an instance of the API client
with vex_api_client.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = vex_api_client.ListApi(api_client)
    org_name = 'org_name_example' # str | 

    try:
        # List Indexes
        api_response = api_instance.list_indexes_v1_indexes_org_name_get(org_name)
        print("The response of ListApi->list_indexes_v1_indexes_org_name_get:\n")
        pprint(api_response)
    except ApiException as e:
        print("Exception when calling ListApi->list_indexes_v1_indexes_org_name_get: %s\n" % e)

```

## Documentation for API Endpoints

All URIs are relative to *http://localhost*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
*ListApi* | [**list_indexes_v1_indexes_org_name_get**](docs/ListApi.md#list_indexes_v1_indexes_org_name_get) | **GET** /v1/indexes/{org_name} | List Indexes
*SearchApi* | [**search_index_v1_search_org_name_index_name_post**](docs/SearchApi.md#search_index_v1_search_org_name_index_name_post) | **POST** /v1/search/{org_name}/{index_name} | Search Index


## Documentation For Models

 - [HTTPValidationError](docs/HTTPValidationError.md)
 - [IndexSearchResultEntrySchema](docs/IndexSearchResultEntrySchema.md)
 - [LocationInner](docs/LocationInner.md)
 - [SearchQueryBody](docs/SearchQueryBody.md)
 - [SearchResponse](docs/SearchResponse.md)
 - [ValidationError](docs/ValidationError.md)


<a id="documentation-for-authorization"></a>
## Documentation For Authorization


Authentication schemes defined for the API:
<a id="JWTBearer"></a>
### JWTBearer

- **Type**: Bearer authentication


## Author





