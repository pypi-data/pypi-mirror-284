
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftLTGTLEGENEEQleftPLUSMINUSleftTIMESDIVIDEMODleftEXPOABS AND APPEND AS ATN CHR CLOSE CLS COLON COLOR COMMA COS CSRLIN CVI CVS DATA DEFINT DEFSNG DIM DIVIDE ELSE END EQ EXPO FHANDLE FIELD FOR FRP GE GET GOSUB GOTO GT IF INPUT INT LE LEFT LEN LOCATE LOG LPAREN LSET LT MID MINUS MKI MKS MOD NE NEXT NUMBER ON OPEN OR OUTPUT PLUS PRINT PUT RANDOM READ REM RETURN RIGHT RPAREN RSET SEMIC SGN SIN SQR STEP STR STRING_DQ STRING_SQ SYSTEM TAB THEN TIMES TO USING VAL VAR WRITE\n            statement : simple-statement\n                      | statement COLON simple-statement\n        \n            simple-statement : assignment-statement\n                             | close-statement\n                             | cls-statement\n                             | color-statement\n                             | data-statement\n                             | defint-statement\n                             | defsng-statement\n                             | dim-statement\n                             | else-statement\n                             | endif-statement\n                             | end-statement\n                             | field-statement\n                             | for-statement\n                             | get-statement\n                             | gosub-statement\n                             | goto-statement\n                             | if-start-statement\n                             | if-statement\n                             | input-statement\n                             | locate-statement\n                             | lset-statement\n                             | mid-statement\n                             | next-statement\n                             | ongoto-statement\n                             | open-statement\n                             | print-statement\n                             | put-statement\n                             | read-statement\n                             | rem-statement\n                             | return-statement\n                             | rset-statement\n                             | write-statement\n\n        \n            assignment-statement : lhs EQ expr\n        \n            cls-statement : CLS\n        \n            close-statement : CLOSE\n                            | CLOSE FHANDLE\n                            | CLOSE NUMBER\n        \n            color-statement : COLOR intlist\n        \n            data-statement : DATA literal-list\n        \n            defint-statement : DEFINT varlist\n        \n            defsng-statement : DEFSNG varlist\n        \n            dim-statement : DIM dimlist\n        \n            dimlist : dimrhs\n                    | dimlist COMMA dimrhs\n        \n            dimrhs : VAR LPAREN exprlist RPAREN\n        \n            else-statement : ELSE\n        empty :\n            end-statement : END\n            end-statement : SYSTEM\n        \n            endif-statement : END IF\n        \n            expr : literal\n        \n            expr : ABS LPAREN expr RPAREN\n                       | ATN LPAREN expr RPAREN\n                       | CHR LPAREN expr RPAREN\n                       | COS LPAREN expr RPAREN\n                       | CVI LPAREN expr RPAREN\n                       | CVS LPAREN expr RPAREN\n                       | FRP LPAREN expr RPAREN\n                       | INT LPAREN expr RPAREN\n                       | LOG LPAREN expr RPAREN\n                       | MKI LPAREN expr RPAREN\n                       | MKS LPAREN expr RPAREN\n                       | SGN LPAREN expr RPAREN\n                       | SIN LPAREN expr RPAREN\n                       | SQR LPAREN expr RPAREN\n                       | STR LPAREN expr RPAREN\n                       | TAB LPAREN expr RPAREN\n                       | VAL LPAREN expr RPAREN\n        \n            expr : LEFT  LPAREN expr COMMA expr RPAREN\n                 | RIGHT LPAREN expr COMMA expr RPAREN\n        \n            expr : MID LPAREN expr COMMA expr COMMA expr RPAREN\n                 | MID LPAREN expr COMMA expr RPAREN\n        \n            expr : LPAREN expr RPAREN\n        \n            expr : expr PLUS   expr\n                 | expr MINUS  expr\n                 | expr TIMES  expr\n                 | expr DIVIDE expr\n                 | expr MOD    expr\n                 | expr GT     expr\n                 | expr GE     expr\n                 | expr LT     expr\n                 | expr LE     expr\n                 | expr NE     expr\n                 | expr EQ     expr\n                 | expr AND    expr\n                 | expr OR     expr\n                 | expr EXPO   expr\n        \n            expr : MINUS expr\n        \n            expr : VAR\n        \n            expr : VAR LPAREN exprlist RPAREN\n        \n            exprlist : expr\n                     | exprlist COMMA expr\n        \n            field-statement : FIELD FHANDLE COMMA fieldlist\n        \n            fieldlist : NUMBER AS lhs\n                      | fieldlist COMMA NUMBER AS lhs\n        \n            for-statement : FOR VAR EQ expr TO expr\n        \n            for-statement : FOR VAR EQ expr TO expr STEP expr\n        \n            get-statement : GET FHANDLE\n                          | GET NUMBER\n        \n            goto-statement : GOTO NUMBER\n        \n            gosub-statement : GOSUB NUMBER\n        \n            if-start-statement : IF expr THEN\n        \n            if-statement : IF expr THEN NUMBER\n                         | IF expr THEN NUMBER ELSE NUMBER\n                         | IF expr THEN NUMBER ELSE statement\n                         | IF expr THEN statement\n                         | IF expr THEN statement ELSE NUMBER\n                         | IF expr THEN statement ELSE statement\n        \n            if-statement : IF expr GOTO NUMBER\n        \n            input-statement : INPUT STRING_SQ SEMIC varlist-complex\n                            | INPUT STRING_DQ SEMIC varlist-complex\n        \n            input-statement : INPUT varlist-complex\n        \n            intlist : NUMBER\n                    | intlist COMMA NUMBER\n        \n            lhs : VAR\n                | VAR LPAREN exprlist RPAREN\n        \n            literal : NUMBER\n                    | STRING_DQ\n                    | STRING_SQ\n        \n            literal-list : literal\n                         | literal-list COMMA literal\n        \n            locate-statement : LOCATE CSRLIN COMMA NUMBER\n        \n            lset-statement : LSET lhs EQ expr\n        \n            mid-statement : MID LPAREN lhs COMMA expr COMMA expr RPAREN EQ expr\n                          | MID LPAREN lhs COMMA expr RPAREN EQ expr\n        \n            next-statement : NEXT VAR\n        \n            ongoto-statement : ON expr GOTO intlist\n        \n            open-statement : OPEN expr FOR OUTPUT AS FHANDLE\n                           | OPEN expr FOR APPEND AS FHANDLE\n        \n            open-statement : OPEN expr AS FHANDLE LEN EQ expr\n                           | OPEN expr FOR RANDOM AS FHANDLE LEN EQ expr\n        \n            print-statement : PRINT printlist\n                            | PRINT FHANDLE COMMA printlist\n                            | PRINT FHANDLE COMMA USING printlist\n        \n            printlist : empty\n                      | expr\n                      | printlist SEMIC expr\n                      | printlist COMMA expr\n                      | printlist expr\n                      | printlist SEMIC\n                      | printlist COMMA\n        \n            put-statement : PUT FHANDLE\n                          | PUT NUMBER\n        \n            read-statement : READ varlist-complex\n        \n            rem-statement : REM\n        \n            return-statement : RETURN\n        \n            rset-statement : RSET lhs EQ expr\n        \n            varlist : varlist COMMA VAR\n                    | varlist MINUS VAR\n                    | VAR\n        \n            varlist-complex : varlist-complex COMMA lhs\n                            | lhs\n        \n            write-statement : WRITE FHANDLE COMMA exprlist\n                            | WRITE exprlist\n        '
    
_lr_action_items = {'CLOSE':([0,67,146,272,273,],[36,36,36,36,36,]),'CLS':([0,67,146,272,273,],[37,37,37,37,37,]),'COLOR':([0,67,146,272,273,],[38,38,38,38,38,]),'DATA':([0,67,146,272,273,],[39,39,39,39,39,]),'DEFINT':([0,67,146,272,273,],[40,40,40,40,40,]),'DEFSNG':([0,67,146,272,273,],[41,41,41,41,41,]),'DIM':([0,67,146,272,273,],[42,42,42,42,42,]),'ELSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,43,44,46,49,60,63,64,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,86,109,113,114,115,116,118,120,124,127,129,130,131,132,133,136,137,138,139,146,183,197,198,199,200,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,249,252,253,254,255,256,257,259,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,303,304,305,306,307,312,313,316,317,320,321,323,329,331,332,334,336,338,339,],[43,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-37,-36,-48,-50,-51,-117,-49,-147,-148,43,-38,-39,-40,-115,-41,-122,-119,-120,-121,-42,-152,-43,-44,-45,-52,-53,-91,-100,-101,-103,-102,-114,-154,-128,-134,-137,-138,-144,-145,-146,-156,-93,-2,-35,43,-90,-142,-141,-143,-49,-116,-123,-150,-151,-46,272,273,-111,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,-95,-118,-112,-153,-113,-124,-125,-129,-139,-140,-135,-49,-149,-155,-94,-47,43,43,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,-136,-106,-107,-110,-109,-96,-98,-130,-131,-71,-72,-74,-132,-97,-99,-127,-73,-133,-126,]),'END':([0,67,146,272,273,],[44,44,44,44,44,]),'SYSTEM':([0,67,146,272,273,],[46,46,46,46,46,]),'FIELD':([0,67,146,272,273,],[47,47,47,47,47,]),'FOR':([0,67,75,76,77,86,109,126,146,183,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,320,321,323,336,],[48,48,-119,-120,-121,-53,-91,195,48,-90,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,48,48,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,-71,-72,-74,-73,]),'GET':([0,67,146,272,273,],[50,50,50,50,50,]),'GOSUB':([0,67,146,272,273,],[51,51,51,51,51,]),'GOTO':([0,67,75,76,77,85,86,109,125,146,183,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,320,321,323,336,],[52,52,-119,-120,-121,147,-53,-91,194,52,-90,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,52,52,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,-71,-72,-74,-73,]),'IF':([0,44,67,146,272,273,],[45,84,45,45,45,45,]),'INPUT':([0,67,146,272,273,],[53,53,53,53,53,]),'LOCATE':([0,67,146,272,273,],[54,54,54,54,54,]),'LSET':([0,67,146,272,273,],[55,55,55,55,55,]),'MID':([0,45,58,59,60,66,67,68,75,76,77,86,88,108,109,112,127,129,130,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,303,314,319,320,321,322,323,325,327,335,336,337,],[56,107,107,107,107,107,56,107,-119,-120,-121,-53,107,107,-91,107,107,-137,-138,107,56,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-90,107,107,107,107,-141,107,107,107,107,107,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,107,-139,-140,107,107,56,56,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,107,107,107,-92,107,107,107,107,-71,-72,107,-74,107,107,107,-73,107,]),'NEXT':([0,67,146,272,273,],[57,57,57,57,57,]),'ON':([0,67,146,272,273,],[58,58,58,58,58,]),'OPEN':([0,67,146,272,273,],[59,59,59,59,59,]),'PRINT':([0,67,146,272,273,],[60,60,60,60,60,]),'PUT':([0,67,146,272,273,],[61,61,61,61,61,]),'READ':([0,67,146,272,273,],[62,62,62,62,62,]),'REM':([0,67,146,272,273,],[63,63,63,63,63,]),'RETURN':([0,67,146,272,273,],[64,64,64,64,64,]),'RSET':([0,67,146,272,273,],[65,65,65,65,65,]),'WRITE':([0,67,146,272,273,],[66,66,66,66,66,]),'VAR':([0,40,41,42,45,48,53,55,57,58,59,60,62,65,66,67,68,75,76,77,86,88,108,109,112,123,127,129,130,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,188,189,190,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,297,303,314,319,320,321,322,323,324,325,327,335,336,337,],[49,79,79,83,109,111,49,49,124,109,109,109,49,49,109,49,109,-119,-120,-121,-53,109,109,-91,109,49,109,-137,-138,206,207,83,109,49,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-90,109,109,49,49,49,109,109,-141,109,109,109,109,109,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,109,-139,-140,109,109,49,49,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,109,109,109,-92,49,109,109,109,109,-71,-72,109,-74,49,109,109,109,-73,109,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,43,44,46,49,60,63,64,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,86,109,113,114,115,116,118,120,124,127,129,130,131,132,133,136,137,138,139,146,183,197,198,199,200,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,249,252,253,254,255,256,257,259,264,265,266,267,268,269,270,271,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,303,304,305,306,307,312,313,316,317,320,321,323,329,331,332,334,336,338,339,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-37,-36,-48,-50,-51,-117,-49,-147,-148,-38,-39,-40,-115,-41,-122,-119,-120,-121,-42,-152,-43,-44,-45,-52,-53,-91,-100,-101,-103,-102,-114,-154,-128,-134,-137,-138,-144,-145,-146,-156,-93,-2,-35,-104,-90,-142,-141,-143,-49,-116,-123,-150,-151,-46,-105,-108,-111,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,-95,-118,-112,-153,-113,-124,-125,-129,-139,-140,-135,-49,-149,-155,-94,-47,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,-136,-106,-107,-110,-109,-96,-98,-130,-131,-71,-72,-74,-132,-97,-99,-127,-73,-133,-126,]),'COLON':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,43,44,46,49,60,63,64,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,86,109,113,114,115,116,118,120,124,127,129,130,131,132,133,136,137,138,139,146,183,197,198,199,200,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,249,252,253,254,255,256,257,259,264,265,266,267,268,269,270,271,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,303,304,305,306,307,312,313,316,317,320,321,323,329,331,332,334,336,338,339,],[67,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-37,-36,-48,-50,-51,-117,-49,-147,-148,-38,-39,-40,-115,-41,-122,-119,-120,-121,-42,-152,-43,-44,-45,-52,-53,-91,-100,-101,-103,-102,-114,-154,-128,-134,-137,-138,-144,-145,-146,-156,-93,-2,-35,-104,-90,-142,-141,-143,-49,-116,-123,-150,-151,-46,-105,67,-111,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,-95,-118,-112,-153,-113,-124,-125,-129,-139,-140,-135,-49,-149,-155,-94,-47,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,-136,-106,67,67,-109,-96,-98,-130,-131,-71,-72,-74,-132,-97,-99,-127,-73,-133,-126,]),'EQ':([35,49,75,76,77,85,86,109,111,122,125,126,130,134,137,139,163,183,198,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,251,252,257,264,265,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,298,302,308,309,310,313,315,320,321,323,326,328,329,330,332,333,334,336,338,339,],[68,-117,-119,-120,-121,158,-53,-91,186,192,158,158,158,201,158,158,158,-90,158,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,158,158,-89,158,-75,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,-118,158,158,158,158,158,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,158,319,158,158,158,158,327,-71,-72,-74,158,335,158,158,158,337,158,-73,158,158,]),'FHANDLE':([36,47,50,60,61,66,196,299,300,301,],[69,110,113,128,131,135,263,316,317,318,]),'NUMBER':([36,38,39,45,50,51,52,58,59,60,61,66,68,75,76,77,86,88,108,109,112,127,129,130,140,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,191,192,194,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,303,314,319,320,321,322,323,325,327,335,336,337,],[70,72,75,75,114,115,116,75,75,75,132,75,75,-119,-120,-121,-53,75,75,-91,75,75,-137,-138,204,75,75,210,212,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-90,75,250,75,256,75,72,75,-141,75,75,75,75,75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,75,-139,-140,75,75,304,307,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,75,75,75,-92,311,75,75,75,75,-71,-72,75,-74,75,75,75,-73,75,]),'STRING_DQ':([39,45,53,58,59,60,66,68,75,76,77,86,88,108,109,112,127,129,130,141,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,303,314,319,320,321,322,323,325,327,335,336,337,],[76,76,119,76,76,76,76,76,-119,-120,-121,-53,76,76,-91,76,76,-137,-138,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-90,76,76,76,76,-141,76,76,76,76,76,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,76,-139,-140,76,76,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,76,76,76,-92,76,76,76,76,-71,-72,76,-74,76,76,76,-73,76,]),'STRING_SQ':([39,45,53,58,59,60,66,68,75,76,77,86,88,108,109,112,127,129,130,141,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,303,314,319,320,321,322,323,325,327,335,336,337,],[77,77,117,77,77,77,77,77,-119,-120,-121,-53,77,77,-91,77,77,-137,-138,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-90,77,77,77,77,-141,77,77,77,77,77,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,77,-139,-140,77,77,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,77,77,77,-92,77,77,77,77,-71,-72,77,-74,77,77,77,-73,77,]),'ABS':([45,58,59,60,66,68,75,76,77,86,88,108,109,112,127,129,130,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,303,314,319,320,321,322,323,325,327,335,336,337,],[87,87,87,87,87,87,-119,-120,-121,-53,87,87,-91,87,87,-137,-138,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-90,87,87,87,87,-141,87,87,87,87,87,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,87,-139,-140,87,87,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,87,87,87,-92,87,87,87,87,-71,-72,87,-74,87,87,87,-73,87,]),'ATN':([45,58,59,60,66,68,75,76,77,86,88,108,109,112,127,129,130,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,303,314,319,320,321,322,323,325,327,335,336,337,],[89,89,89,89,89,89,-119,-120,-121,-53,89,89,-91,89,89,-137,-138,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-90,89,89,89,89,-141,89,89,89,89,89,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,89,-139,-140,89,89,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,89,89,89,-92,89,89,89,89,-71,-72,89,-74,89,89,89,-73,89,]),'CHR':([45,58,59,60,66,68,75,76,77,86,88,108,109,112,127,129,130,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,303,314,319,320,321,322,323,325,327,335,336,337,],[90,90,90,90,90,90,-119,-120,-121,-53,90,90,-91,90,90,-137,-138,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-90,90,90,90,90,-141,90,90,90,90,90,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,90,-139,-140,90,90,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,90,90,90,-92,90,90,90,90,-71,-72,90,-74,90,90,90,-73,90,]),'COS':([45,58,59,60,66,68,75,76,77,86,88,108,109,112,127,129,130,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,303,314,319,320,321,322,323,325,327,335,336,337,],[91,91,91,91,91,91,-119,-120,-121,-53,91,91,-91,91,91,-137,-138,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-90,91,91,91,91,-141,91,91,91,91,91,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,91,-139,-140,91,91,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,91,91,91,-92,91,91,91,91,-71,-72,91,-74,91,91,91,-73,91,]),'CVI':([45,58,59,60,66,68,75,76,77,86,88,108,109,112,127,129,130,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,303,314,319,320,321,322,323,325,327,335,336,337,],[92,92,92,92,92,92,-119,-120,-121,-53,92,92,-91,92,92,-137,-138,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-90,92,92,92,92,-141,92,92,92,92,92,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,92,-139,-140,92,92,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,92,92,92,-92,92,92,92,92,-71,-72,92,-74,92,92,92,-73,92,]),'CVS':([45,58,59,60,66,68,75,76,77,86,88,108,109,112,127,129,130,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,303,314,319,320,321,322,323,325,327,335,336,337,],[93,93,93,93,93,93,-119,-120,-121,-53,93,93,-91,93,93,-137,-138,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-90,93,93,93,93,-141,93,93,93,93,93,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,93,-139,-140,93,93,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,93,93,93,-92,93,93,93,93,-71,-72,93,-74,93,93,93,-73,93,]),'FRP':([45,58,59,60,66,68,75,76,77,86,88,108,109,112,127,129,130,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,303,314,319,320,321,322,323,325,327,335,336,337,],[94,94,94,94,94,94,-119,-120,-121,-53,94,94,-91,94,94,-137,-138,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-90,94,94,94,94,-141,94,94,94,94,94,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,94,-139,-140,94,94,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,94,94,94,-92,94,94,94,94,-71,-72,94,-74,94,94,94,-73,94,]),'INT':([45,58,59,60,66,68,75,76,77,86,88,108,109,112,127,129,130,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,303,314,319,320,321,322,323,325,327,335,336,337,],[95,95,95,95,95,95,-119,-120,-121,-53,95,95,-91,95,95,-137,-138,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-90,95,95,95,95,-141,95,95,95,95,95,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,95,-139,-140,95,95,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,95,95,95,-92,95,95,95,95,-71,-72,95,-74,95,95,95,-73,95,]),'LOG':([45,58,59,60,66,68,75,76,77,86,88,108,109,112,127,129,130,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,303,314,319,320,321,322,323,325,327,335,336,337,],[96,96,96,96,96,96,-119,-120,-121,-53,96,96,-91,96,96,-137,-138,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-90,96,96,96,96,-141,96,96,96,96,96,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,96,-139,-140,96,96,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,96,96,96,-92,96,96,96,96,-71,-72,96,-74,96,96,96,-73,96,]),'MKI':([45,58,59,60,66,68,75,76,77,86,88,108,109,112,127,129,130,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,303,314,319,320,321,322,323,325,327,335,336,337,],[97,97,97,97,97,97,-119,-120,-121,-53,97,97,-91,97,97,-137,-138,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-90,97,97,97,97,-141,97,97,97,97,97,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,97,-139,-140,97,97,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,97,97,97,-92,97,97,97,97,-71,-72,97,-74,97,97,97,-73,97,]),'MKS':([45,58,59,60,66,68,75,76,77,86,88,108,109,112,127,129,130,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,303,314,319,320,321,322,323,325,327,335,336,337,],[98,98,98,98,98,98,-119,-120,-121,-53,98,98,-91,98,98,-137,-138,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-90,98,98,98,98,-141,98,98,98,98,98,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,98,-139,-140,98,98,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,98,98,98,-92,98,98,98,98,-71,-72,98,-74,98,98,98,-73,98,]),'SGN':([45,58,59,60,66,68,75,76,77,86,88,108,109,112,127,129,130,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,303,314,319,320,321,322,323,325,327,335,336,337,],[99,99,99,99,99,99,-119,-120,-121,-53,99,99,-91,99,99,-137,-138,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-90,99,99,99,99,-141,99,99,99,99,99,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,99,-139,-140,99,99,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,99,99,99,-92,99,99,99,99,-71,-72,99,-74,99,99,99,-73,99,]),'SIN':([45,58,59,60,66,68,75,76,77,86,88,108,109,112,127,129,130,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,303,314,319,320,321,322,323,325,327,335,336,337,],[100,100,100,100,100,100,-119,-120,-121,-53,100,100,-91,100,100,-137,-138,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-90,100,100,100,100,-141,100,100,100,100,100,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,100,-139,-140,100,100,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,100,100,100,-92,100,100,100,100,-71,-72,100,-74,100,100,100,-73,100,]),'SQR':([45,58,59,60,66,68,75,76,77,86,88,108,109,112,127,129,130,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,303,314,319,320,321,322,323,325,327,335,336,337,],[101,101,101,101,101,101,-119,-120,-121,-53,101,101,-91,101,101,-137,-138,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-90,101,101,101,101,-141,101,101,101,101,101,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,101,-139,-140,101,101,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,101,101,101,-92,101,101,101,101,-71,-72,101,-74,101,101,101,-73,101,]),'STR':([45,58,59,60,66,68,75,76,77,86,88,108,109,112,127,129,130,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,303,314,319,320,321,322,323,325,327,335,336,337,],[102,102,102,102,102,102,-119,-120,-121,-53,102,102,-91,102,102,-137,-138,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-90,102,102,102,102,-141,102,102,102,102,102,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,102,-139,-140,102,102,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,102,102,102,-92,102,102,102,102,-71,-72,102,-74,102,102,102,-73,102,]),'TAB':([45,58,59,60,66,68,75,76,77,86,88,108,109,112,127,129,130,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,303,314,319,320,321,322,323,325,327,335,336,337,],[103,103,103,103,103,103,-119,-120,-121,-53,103,103,-91,103,103,-137,-138,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-90,103,103,103,103,-141,103,103,103,103,103,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,103,-139,-140,103,103,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,103,103,103,-92,103,103,103,103,-71,-72,103,-74,103,103,103,-73,103,]),'VAL':([45,58,59,60,66,68,75,76,77,86,88,108,109,112,127,129,130,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,303,314,319,320,321,322,323,325,327,335,336,337,],[104,104,104,104,104,104,-119,-120,-121,-53,104,104,-91,104,104,-137,-138,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-90,104,104,104,104,-141,104,104,104,104,104,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,104,-139,-140,104,104,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,104,104,104,-92,104,104,104,104,-71,-72,104,-74,104,104,104,-73,104,]),'LEFT':([45,58,59,60,66,68,75,76,77,86,88,108,109,112,127,129,130,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,303,314,319,320,321,322,323,325,327,335,336,337,],[105,105,105,105,105,105,-119,-120,-121,-53,105,105,-91,105,105,-137,-138,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-90,105,105,105,105,-141,105,105,105,105,105,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,105,-139,-140,105,105,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,105,105,105,-92,105,105,105,105,-71,-72,105,-74,105,105,105,-73,105,]),'RIGHT':([45,58,59,60,66,68,75,76,77,86,88,108,109,112,127,129,130,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,303,314,319,320,321,322,323,325,327,335,336,337,],[106,106,106,106,106,106,-119,-120,-121,-53,106,106,-91,106,106,-137,-138,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-90,106,106,106,106,-141,106,106,106,106,106,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,106,-139,-140,106,106,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,106,106,106,-92,106,106,106,106,-71,-72,106,-74,106,106,106,-73,106,]),'LPAREN':([45,49,56,58,59,60,66,68,75,76,77,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,127,129,130,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,258,264,265,266,267,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,303,314,319,320,321,322,323,325,327,335,336,337,],[88,112,123,88,88,88,88,88,-119,-120,-121,145,-53,162,88,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,88,184,88,88,-137,-138,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-90,88,88,88,88,-141,88,88,88,88,88,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,88,-139,-140,88,88,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,88,88,88,-92,88,88,88,88,-71,-72,88,-74,88,88,88,-73,88,]),'MINUS':([45,58,59,60,66,68,75,76,77,78,79,80,85,86,88,108,109,112,125,126,127,129,130,137,139,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,192,197,198,199,200,201,202,203,206,207,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,251,257,258,264,265,266,267,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,298,303,308,309,310,313,314,319,320,321,322,323,325,326,327,329,330,332,334,335,336,337,338,339,],[108,108,108,108,108,108,-119,-120,-121,143,-152,143,149,-53,108,108,-91,108,149,149,108,-137,149,149,149,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,149,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-90,108,108,108,108,149,108,108,108,108,108,-150,-151,-76,-77,-78,-79,-80,149,149,149,149,149,149,149,149,-89,149,-75,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,108,149,149,108,108,149,149,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,108,108,108,-92,108,149,108,149,149,149,149,108,108,-71,-72,108,-74,108,149,108,149,149,149,149,108,-73,108,149,149,]),'COMMA':([49,60,71,72,73,74,75,76,77,78,79,80,81,82,86,109,110,118,120,121,127,128,129,130,133,135,136,137,183,187,193,197,198,199,200,204,205,206,207,208,209,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,245,246,247,248,249,252,253,254,255,259,264,265,266,267,269,270,271,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,298,303,310,312,320,321,323,331,336,],[-117,-49,140,-115,141,-122,-119,-120,-121,142,-152,142,144,-45,-53,-91,185,189,-154,191,199,200,-137,-138,189,202,203,-93,-90,203,258,-142,-141,-143,-49,-116,-123,-150,-151,-46,203,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,291,292,293,203,295,-118,189,-153,189,140,-139,-140,199,-49,203,-94,-47,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,314,199,322,-96,-71,-72,-74,-97,-73,]),'CSRLIN':([54,],[121,]),'SEMIC':([60,75,76,77,86,109,117,119,127,129,130,183,197,198,199,200,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,264,265,266,267,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,303,320,321,323,336,],[-49,-119,-120,-121,-53,-91,188,190,197,-137,-138,-90,-142,-141,-143,-49,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,-139,-140,197,-49,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,197,-71,-72,-74,-73,]),'THEN':([75,76,77,85,86,109,183,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,320,321,323,336,],[-119,-120,-121,146,-53,-91,-90,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,-71,-72,-74,-73,]),'PLUS':([75,76,77,85,86,109,125,126,130,137,139,163,183,198,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,251,257,264,265,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,298,308,309,310,313,320,321,323,326,329,330,332,334,336,338,339,],[-119,-120,-121,148,-53,-91,148,148,148,148,148,148,-90,148,-76,-77,-78,-79,-80,148,148,148,148,148,148,148,148,-89,148,-75,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,148,148,148,148,148,-71,-72,-74,148,148,148,148,148,-73,148,148,]),'TIMES':([75,76,77,85,86,109,125,126,130,137,139,163,183,198,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,251,257,264,265,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,298,308,309,310,313,320,321,323,326,329,330,332,334,336,338,339,],[-119,-120,-121,150,-53,-91,150,150,150,150,150,150,150,150,150,150,-78,-79,-80,150,150,150,150,150,150,150,150,-89,150,-75,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,150,150,150,150,150,-71,-72,-74,150,150,150,150,150,-73,150,150,]),'DIVIDE':([75,76,77,85,86,109,125,126,130,137,139,163,183,198,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,251,257,264,265,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,298,308,309,310,313,320,321,323,326,329,330,332,334,336,338,339,],[-119,-120,-121,151,-53,-91,151,151,151,151,151,151,151,151,151,151,-78,-79,-80,151,151,151,151,151,151,151,151,-89,151,-75,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,151,151,151,151,151,-71,-72,-74,151,151,151,151,151,-73,151,151,]),'MOD':([75,76,77,85,86,109,125,126,130,137,139,163,183,198,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,251,257,264,265,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,298,308,309,310,313,320,321,323,326,329,330,332,334,336,338,339,],[-119,-120,-121,152,-53,-91,152,152,152,152,152,152,152,152,152,152,-78,-79,-80,152,152,152,152,152,152,152,152,-89,152,-75,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,152,152,152,152,152,-71,-72,-74,152,152,152,152,152,-73,152,152,]),'GT':([75,76,77,85,86,109,125,126,130,137,139,163,183,198,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,251,257,264,265,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,298,308,309,310,313,320,321,323,326,329,330,332,334,336,338,339,],[-119,-120,-121,153,-53,-91,153,153,153,153,153,153,-90,153,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,153,153,-89,153,-75,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,153,153,153,153,153,-71,-72,-74,153,153,153,153,153,-73,153,153,]),'GE':([75,76,77,85,86,109,125,126,130,137,139,163,183,198,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,251,257,264,265,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,298,308,309,310,313,320,321,323,326,329,330,332,334,336,338,339,],[-119,-120,-121,154,-53,-91,154,154,154,154,154,154,-90,154,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,154,154,-89,154,-75,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,154,154,154,154,154,-71,-72,-74,154,154,154,154,154,-73,154,154,]),'LT':([75,76,77,85,86,109,125,126,130,137,139,163,183,198,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,251,257,264,265,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,298,308,309,310,313,320,321,323,326,329,330,332,334,336,338,339,],[-119,-120,-121,155,-53,-91,155,155,155,155,155,155,-90,155,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,155,155,-89,155,-75,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,155,155,155,155,155,-71,-72,-74,155,155,155,155,155,-73,155,155,]),'LE':([75,76,77,85,86,109,125,126,130,137,139,163,183,198,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,251,257,264,265,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,298,308,309,310,313,320,321,323,326,329,330,332,334,336,338,339,],[-119,-120,-121,156,-53,-91,156,156,156,156,156,156,-90,156,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,156,156,-89,156,-75,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,156,156,156,156,156,-71,-72,-74,156,156,156,156,156,-73,156,156,]),'NE':([75,76,77,85,86,109,125,126,130,137,139,163,183,198,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,251,257,264,265,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,298,308,309,310,313,320,321,323,326,329,330,332,334,336,338,339,],[-119,-120,-121,157,-53,-91,157,157,157,157,157,157,-90,157,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,157,157,-89,157,-75,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,157,157,157,157,157,-71,-72,-74,157,157,157,157,157,-73,157,157,]),'AND':([75,76,77,85,86,109,125,126,130,137,139,163,183,198,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,251,257,264,265,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,298,308,309,310,313,320,321,323,326,329,330,332,334,336,338,339,],[-119,-120,-121,159,-53,-91,159,159,159,159,159,159,-90,159,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,159,-75,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,159,159,159,159,159,-71,-72,-74,159,159,159,159,159,-73,159,159,]),'OR':([75,76,77,85,86,109,125,126,130,137,139,163,183,198,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,251,257,264,265,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,298,308,309,310,313,320,321,323,326,329,330,332,334,336,338,339,],[-119,-120,-121,160,-53,-91,160,160,160,160,160,160,-90,160,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,160,-75,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,160,160,160,160,160,-71,-72,-74,160,160,160,160,160,-73,160,160,]),'EXPO':([75,76,77,85,86,109,125,126,130,137,139,163,183,198,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,251,257,264,265,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,298,308,309,310,313,320,321,323,326,329,330,332,334,336,338,339,],[-119,-120,-121,161,-53,-91,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,-89,161,-75,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,161,161,161,161,161,-71,-72,-74,161,161,161,161,161,-73,161,161,]),'AS':([75,76,77,86,109,126,183,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,250,260,261,262,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,311,320,321,323,336,],[-119,-120,-121,-53,-91,196,-90,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,296,299,300,301,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,324,-71,-72,-74,-73,]),'RPAREN':([75,76,77,86,109,137,163,183,187,209,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,248,270,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,298,308,309,310,320,321,323,326,330,336,],[-119,-120,-121,-53,-91,-93,228,-90,252,271,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,274,-75,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,-94,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,315,320,321,323,-71,-72,-74,333,336,-73,]),'TO':([75,76,77,86,109,183,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,251,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,320,321,323,336,],[-119,-120,-121,-53,-91,-90,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,297,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,-71,-72,-74,-73,]),'STEP':([75,76,77,86,109,183,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,313,320,321,323,336,],[-119,-120,-121,-53,-91,-90,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-75,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-92,325,-71,-72,-74,-73,]),'OUTPUT':([195,],[260,]),'APPEND':([195,],[261,]),'RANDOM':([195,],[262,]),'USING':([200,],[267,]),'LEN':([263,318,],[302,328,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,146,272,273,],[1,211,305,306,]),'simple-statement':([0,67,146,272,273,],[2,138,2,2,2,]),'assignment-statement':([0,67,146,272,273,],[3,3,3,3,3,]),'close-statement':([0,67,146,272,273,],[4,4,4,4,4,]),'cls-statement':([0,67,146,272,273,],[5,5,5,5,5,]),'color-statement':([0,67,146,272,273,],[6,6,6,6,6,]),'data-statement':([0,67,146,272,273,],[7,7,7,7,7,]),'defint-statement':([0,67,146,272,273,],[8,8,8,8,8,]),'defsng-statement':([0,67,146,272,273,],[9,9,9,9,9,]),'dim-statement':([0,67,146,272,273,],[10,10,10,10,10,]),'else-statement':([0,67,146,272,273,],[11,11,11,11,11,]),'endif-statement':([0,67,146,272,273,],[12,12,12,12,12,]),'end-statement':([0,67,146,272,273,],[13,13,13,13,13,]),'field-statement':([0,67,146,272,273,],[14,14,14,14,14,]),'for-statement':([0,67,146,272,273,],[15,15,15,15,15,]),'get-statement':([0,67,146,272,273,],[16,16,16,16,16,]),'gosub-statement':([0,67,146,272,273,],[17,17,17,17,17,]),'goto-statement':([0,67,146,272,273,],[18,18,18,18,18,]),'if-start-statement':([0,67,146,272,273,],[19,19,19,19,19,]),'if-statement':([0,67,146,272,273,],[20,20,20,20,20,]),'input-statement':([0,67,146,272,273,],[21,21,21,21,21,]),'locate-statement':([0,67,146,272,273,],[22,22,22,22,22,]),'lset-statement':([0,67,146,272,273,],[23,23,23,23,23,]),'mid-statement':([0,67,146,272,273,],[24,24,24,24,24,]),'next-statement':([0,67,146,272,273,],[25,25,25,25,25,]),'ongoto-statement':([0,67,146,272,273,],[26,26,26,26,26,]),'open-statement':([0,67,146,272,273,],[27,27,27,27,27,]),'print-statement':([0,67,146,272,273,],[28,28,28,28,28,]),'put-statement':([0,67,146,272,273,],[29,29,29,29,29,]),'read-statement':([0,67,146,272,273,],[30,30,30,30,30,]),'rem-statement':([0,67,146,272,273,],[31,31,31,31,31,]),'return-statement':([0,67,146,272,273,],[32,32,32,32,32,]),'rset-statement':([0,67,146,272,273,],[33,33,33,33,33,]),'write-statement':([0,67,146,272,273,],[34,34,34,34,34,]),'lhs':([0,53,55,62,65,67,123,146,188,189,190,272,273,296,324,],[35,120,122,120,134,35,193,35,120,254,120,35,35,312,331,]),'intlist':([38,194,],[71,259,]),'literal-list':([39,],[73,]),'literal':([39,45,58,59,60,66,68,88,108,112,127,141,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,186,192,197,199,200,201,202,203,258,266,267,291,292,293,297,303,314,319,322,325,327,335,337,],[74,86,86,86,86,86,86,86,86,86,86,205,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'varlist':([40,41,],[78,80,]),'dimlist':([42,],[81,]),'dimrhs':([42,144,],[82,208,]),'expr':([45,58,59,60,66,68,88,108,112,127,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,186,192,197,199,200,201,202,203,258,266,267,291,292,293,297,303,314,319,322,325,327,335,337,],[85,125,126,130,137,139,163,183,137,198,137,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,137,251,257,264,265,130,268,137,270,298,198,130,308,309,310,313,198,326,329,330,332,334,338,339,]),'varlist-complex':([53,62,188,190,],[118,133,253,255,]),'printlist':([60,200,267,],[127,266,303,]),'empty':([60,200,267,],[129,129,129,]),'exprlist':([66,112,145,184,202,],[136,187,209,248,269,]),'fieldlist':([185,],[249,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> simple-statement','statement',1,'p_start','bas.py',911),
  ('statement -> statement COLON simple-statement','statement',3,'p_start','bas.py',912),
  ('simple-statement -> assignment-statement','simple-statement',1,'p_stmt','bas.py',925),
  ('simple-statement -> close-statement','simple-statement',1,'p_stmt','bas.py',926),
  ('simple-statement -> cls-statement','simple-statement',1,'p_stmt','bas.py',927),
  ('simple-statement -> color-statement','simple-statement',1,'p_stmt','bas.py',928),
  ('simple-statement -> data-statement','simple-statement',1,'p_stmt','bas.py',929),
  ('simple-statement -> defint-statement','simple-statement',1,'p_stmt','bas.py',930),
  ('simple-statement -> defsng-statement','simple-statement',1,'p_stmt','bas.py',931),
  ('simple-statement -> dim-statement','simple-statement',1,'p_stmt','bas.py',932),
  ('simple-statement -> else-statement','simple-statement',1,'p_stmt','bas.py',933),
  ('simple-statement -> endif-statement','simple-statement',1,'p_stmt','bas.py',934),
  ('simple-statement -> end-statement','simple-statement',1,'p_stmt','bas.py',935),
  ('simple-statement -> field-statement','simple-statement',1,'p_stmt','bas.py',936),
  ('simple-statement -> for-statement','simple-statement',1,'p_stmt','bas.py',937),
  ('simple-statement -> get-statement','simple-statement',1,'p_stmt','bas.py',938),
  ('simple-statement -> gosub-statement','simple-statement',1,'p_stmt','bas.py',939),
  ('simple-statement -> goto-statement','simple-statement',1,'p_stmt','bas.py',940),
  ('simple-statement -> if-start-statement','simple-statement',1,'p_stmt','bas.py',941),
  ('simple-statement -> if-statement','simple-statement',1,'p_stmt','bas.py',942),
  ('simple-statement -> input-statement','simple-statement',1,'p_stmt','bas.py',943),
  ('simple-statement -> locate-statement','simple-statement',1,'p_stmt','bas.py',944),
  ('simple-statement -> lset-statement','simple-statement',1,'p_stmt','bas.py',945),
  ('simple-statement -> mid-statement','simple-statement',1,'p_stmt','bas.py',946),
  ('simple-statement -> next-statement','simple-statement',1,'p_stmt','bas.py',947),
  ('simple-statement -> ongoto-statement','simple-statement',1,'p_stmt','bas.py',948),
  ('simple-statement -> open-statement','simple-statement',1,'p_stmt','bas.py',949),
  ('simple-statement -> print-statement','simple-statement',1,'p_stmt','bas.py',950),
  ('simple-statement -> put-statement','simple-statement',1,'p_stmt','bas.py',951),
  ('simple-statement -> read-statement','simple-statement',1,'p_stmt','bas.py',952),
  ('simple-statement -> rem-statement','simple-statement',1,'p_stmt','bas.py',953),
  ('simple-statement -> return-statement','simple-statement',1,'p_stmt','bas.py',954),
  ('simple-statement -> rset-statement','simple-statement',1,'p_stmt','bas.py',955),
  ('simple-statement -> write-statement','simple-statement',1,'p_stmt','bas.py',956),
  ('assignment-statement -> lhs EQ expr','assignment-statement',3,'p_assignment_statement','bas.py',966),
  ('cls-statement -> CLS','cls-statement',1,'p_cls_statement','bas.py',973),
  ('close-statement -> CLOSE','close-statement',1,'p_close_statement','bas.py',981),
  ('close-statement -> CLOSE FHANDLE','close-statement',2,'p_close_statement','bas.py',982),
  ('close-statement -> CLOSE NUMBER','close-statement',2,'p_close_statement','bas.py',983),
  ('color-statement -> COLOR intlist','color-statement',2,'p_color_statement','bas.py',993),
  ('data-statement -> DATA literal-list','data-statement',2,'p_data_statement','bas.py',1000),
  ('defint-statement -> DEFINT varlist','defint-statement',2,'p_defint_statement','bas.py',1010),
  ('defsng-statement -> DEFSNG varlist','defsng-statement',2,'p_defsng_statement','bas.py',1017),
  ('dim-statement -> DIM dimlist','dim-statement',2,'p_dim_statement','bas.py',1024),
  ('dimlist -> dimrhs','dimlist',1,'p_dimlist','bas.py',1031),
  ('dimlist -> dimlist COMMA dimrhs','dimlist',3,'p_dimlist','bas.py',1032),
  ('dimrhs -> VAR LPAREN exprlist RPAREN','dimrhs',4,'p_dimrhs','bas.py',1042),
  ('else-statement -> ELSE','else-statement',1,'p_else','bas.py',1053),
  ('empty -> <empty>','empty',0,'p_empty','bas.py',1059),
  ('end-statement -> END','end-statement',1,'p_end_statement','bas.py',1065),
  ('end-statement -> SYSTEM','end-statement',1,'p_end_statement','bas.py',1066),
  ('endif-statement -> END IF','endif-statement',2,'p_endif_statement','bas.py',1073),
  ('expr -> literal','expr',1,'p_expression_literal','bas.py',1080),
  ('expr -> ABS LPAREN expr RPAREN','expr',4,'p_expression_function','bas.py',1090),
  ('expr -> ATN LPAREN expr RPAREN','expr',4,'p_expression_function','bas.py',1091),
  ('expr -> CHR LPAREN expr RPAREN','expr',4,'p_expression_function','bas.py',1092),
  ('expr -> COS LPAREN expr RPAREN','expr',4,'p_expression_function','bas.py',1093),
  ('expr -> CVI LPAREN expr RPAREN','expr',4,'p_expression_function','bas.py',1094),
  ('expr -> CVS LPAREN expr RPAREN','expr',4,'p_expression_function','bas.py',1095),
  ('expr -> FRP LPAREN expr RPAREN','expr',4,'p_expression_function','bas.py',1096),
  ('expr -> INT LPAREN expr RPAREN','expr',4,'p_expression_function','bas.py',1097),
  ('expr -> LOG LPAREN expr RPAREN','expr',4,'p_expression_function','bas.py',1098),
  ('expr -> MKI LPAREN expr RPAREN','expr',4,'p_expression_function','bas.py',1099),
  ('expr -> MKS LPAREN expr RPAREN','expr',4,'p_expression_function','bas.py',1100),
  ('expr -> SGN LPAREN expr RPAREN','expr',4,'p_expression_function','bas.py',1101),
  ('expr -> SIN LPAREN expr RPAREN','expr',4,'p_expression_function','bas.py',1102),
  ('expr -> SQR LPAREN expr RPAREN','expr',4,'p_expression_function','bas.py',1103),
  ('expr -> STR LPAREN expr RPAREN','expr',4,'p_expression_function','bas.py',1104),
  ('expr -> TAB LPAREN expr RPAREN','expr',4,'p_expression_function','bas.py',1105),
  ('expr -> VAL LPAREN expr RPAREN','expr',4,'p_expression_function','bas.py',1106),
  ('expr -> LEFT LPAREN expr COMMA expr RPAREN','expr',6,'p_expression_function_2','bas.py',1145),
  ('expr -> RIGHT LPAREN expr COMMA expr RPAREN','expr',6,'p_expression_function_2','bas.py',1146),
  ('expr -> MID LPAREN expr COMMA expr COMMA expr RPAREN','expr',8,'p_expression_function_2_3','bas.py',1163),
  ('expr -> MID LPAREN expr COMMA expr RPAREN','expr',6,'p_expression_function_2_3','bas.py',1164),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expression_paren','bas.py',1184),
  ('expr -> expr PLUS expr','expr',3,'p_expression_twoop','bas.py',1191),
  ('expr -> expr MINUS expr','expr',3,'p_expression_twoop','bas.py',1192),
  ('expr -> expr TIMES expr','expr',3,'p_expression_twoop','bas.py',1193),
  ('expr -> expr DIVIDE expr','expr',3,'p_expression_twoop','bas.py',1194),
  ('expr -> expr MOD expr','expr',3,'p_expression_twoop','bas.py',1195),
  ('expr -> expr GT expr','expr',3,'p_expression_twoop','bas.py',1196),
  ('expr -> expr GE expr','expr',3,'p_expression_twoop','bas.py',1197),
  ('expr -> expr LT expr','expr',3,'p_expression_twoop','bas.py',1198),
  ('expr -> expr LE expr','expr',3,'p_expression_twoop','bas.py',1199),
  ('expr -> expr NE expr','expr',3,'p_expression_twoop','bas.py',1200),
  ('expr -> expr EQ expr','expr',3,'p_expression_twoop','bas.py',1201),
  ('expr -> expr AND expr','expr',3,'p_expression_twoop','bas.py',1202),
  ('expr -> expr OR expr','expr',3,'p_expression_twoop','bas.py',1203),
  ('expr -> expr EXPO expr','expr',3,'p_expression_twoop','bas.py',1204),
  ('expr -> MINUS expr','expr',2,'p_expression_unaryminus','bas.py',1255),
  ('expr -> VAR','expr',1,'p_expression_var','bas.py',1276),
  ('expr -> VAR LPAREN exprlist RPAREN','expr',4,'p_expression_var_complex','bas.py',1284),
  ('exprlist -> expr','exprlist',1,'p_exprlist','bas.py',1296),
  ('exprlist -> exprlist COMMA expr','exprlist',3,'p_exprlist','bas.py',1297),
  ('field-statement -> FIELD FHANDLE COMMA fieldlist','field-statement',4,'p_field_statement','bas.py',1312),
  ('fieldlist -> NUMBER AS lhs','fieldlist',3,'p_fieldlist','bas.py',1319),
  ('fieldlist -> fieldlist COMMA NUMBER AS lhs','fieldlist',5,'p_fieldlist','bas.py',1320),
  ('for-statement -> FOR VAR EQ expr TO expr','for-statement',6,'p_for_statement','bas.py',1330),
  ('for-statement -> FOR VAR EQ expr TO expr STEP expr','for-statement',8,'p_for_statement_step','bas.py',1337),
  ('get-statement -> GET FHANDLE','get-statement',2,'p_get_statement','bas.py',1344),
  ('get-statement -> GET NUMBER','get-statement',2,'p_get_statement','bas.py',1345),
  ('goto-statement -> GOTO NUMBER','goto-statement',2,'p_goto_statement','bas.py',1352),
  ('gosub-statement -> GOSUB NUMBER','gosub-statement',2,'p_gosub_statement','bas.py',1359),
  ('if-start-statement -> IF expr THEN','if-start-statement',3,'p_if_start','bas.py',1366),
  ('if-statement -> IF expr THEN NUMBER','if-statement',4,'p_if_statement','bas.py',1373),
  ('if-statement -> IF expr THEN NUMBER ELSE NUMBER','if-statement',6,'p_if_statement','bas.py',1374),
  ('if-statement -> IF expr THEN NUMBER ELSE statement','if-statement',6,'p_if_statement','bas.py',1375),
  ('if-statement -> IF expr THEN statement','if-statement',4,'p_if_statement','bas.py',1376),
  ('if-statement -> IF expr THEN statement ELSE NUMBER','if-statement',6,'p_if_statement','bas.py',1377),
  ('if-statement -> IF expr THEN statement ELSE statement','if-statement',6,'p_if_statement','bas.py',1378),
  ('if-statement -> IF expr GOTO NUMBER','if-statement',4,'p_if_statement_without_then','bas.py',1388),
  ('input-statement -> INPUT STRING_SQ SEMIC varlist-complex','input-statement',4,'p_input_statement','bas.py',1395),
  ('input-statement -> INPUT STRING_DQ SEMIC varlist-complex','input-statement',4,'p_input_statement','bas.py',1396),
  ('input-statement -> INPUT varlist-complex','input-statement',2,'p_input_statement_multi','bas.py',1403),
  ('intlist -> NUMBER','intlist',1,'p_intlist','bas.py',1410),
  ('intlist -> intlist COMMA NUMBER','intlist',3,'p_intlist','bas.py',1411),
  ('lhs -> VAR','lhs',1,'p_lhs','bas.py',1421),
  ('lhs -> VAR LPAREN exprlist RPAREN','lhs',4,'p_lhs','bas.py',1422),
  ('literal -> NUMBER','literal',1,'p_literal','bas.py',1438),
  ('literal -> STRING_DQ','literal',1,'p_literal','bas.py',1439),
  ('literal -> STRING_SQ','literal',1,'p_literal','bas.py',1440),
  ('literal-list -> literal','literal-list',1,'p_literal_list','bas.py',1451),
  ('literal-list -> literal-list COMMA literal','literal-list',3,'p_literal_list','bas.py',1452),
  ('locate-statement -> LOCATE CSRLIN COMMA NUMBER','locate-statement',4,'p_locate_statement','bas.py',1462),
  ('lset-statement -> LSET lhs EQ expr','lset-statement',4,'p_lset_statement','bas.py',1469),
  ('mid-statement -> MID LPAREN lhs COMMA expr COMMA expr RPAREN EQ expr','mid-statement',10,'p_mid_statement','bas.py',1476),
  ('mid-statement -> MID LPAREN lhs COMMA expr RPAREN EQ expr','mid-statement',8,'p_mid_statement','bas.py',1477),
  ('next-statement -> NEXT VAR','next-statement',2,'p_next_statement','bas.py',1487),
  ('ongoto-statement -> ON expr GOTO intlist','ongoto-statement',4,'p_ongoto_statement','bas.py',1494),
  ('open-statement -> OPEN expr FOR OUTPUT AS FHANDLE','open-statement',6,'p_open_statement','bas.py',1501),
  ('open-statement -> OPEN expr FOR APPEND AS FHANDLE','open-statement',6,'p_open_statement','bas.py',1502),
  ('open-statement -> OPEN expr AS FHANDLE LEN EQ expr','open-statement',7,'p_open_statement_bin','bas.py',1509),
  ('open-statement -> OPEN expr FOR RANDOM AS FHANDLE LEN EQ expr','open-statement',9,'p_open_statement_bin','bas.py',1510),
  ('print-statement -> PRINT printlist','print-statement',2,'p_print_statement','bas.py',1524),
  ('print-statement -> PRINT FHANDLE COMMA printlist','print-statement',4,'p_print_statement','bas.py',1525),
  ('print-statement -> PRINT FHANDLE COMMA USING printlist','print-statement',5,'p_print_statement','bas.py',1526),
  ('printlist -> empty','printlist',1,'p_printlist','bas.py',1538),
  ('printlist -> expr','printlist',1,'p_printlist','bas.py',1539),
  ('printlist -> printlist SEMIC expr','printlist',3,'p_printlist','bas.py',1540),
  ('printlist -> printlist COMMA expr','printlist',3,'p_printlist','bas.py',1541),
  ('printlist -> printlist expr','printlist',2,'p_printlist','bas.py',1542),
  ('printlist -> printlist SEMIC','printlist',2,'p_printlist','bas.py',1543),
  ('printlist -> printlist COMMA','printlist',2,'p_printlist','bas.py',1544),
  ('put-statement -> PUT FHANDLE','put-statement',2,'p_put_statement','bas.py',1573),
  ('put-statement -> PUT NUMBER','put-statement',2,'p_put_statement','bas.py',1574),
  ('read-statement -> READ varlist-complex','read-statement',2,'p_read_statement','bas.py',1581),
  ('rem-statement -> REM','rem-statement',1,'p_rem_statement','bas.py',1588),
  ('return-statement -> RETURN','return-statement',1,'p_return_statement','bas.py',1595),
  ('rset-statement -> RSET lhs EQ expr','rset-statement',4,'p_rset_statement','bas.py',1602),
  ('varlist -> varlist COMMA VAR','varlist',3,'p_varlist','bas.py',1609),
  ('varlist -> varlist MINUS VAR','varlist',3,'p_varlist','bas.py',1610),
  ('varlist -> VAR','varlist',1,'p_varlist','bas.py',1611),
  ('varlist-complex -> varlist-complex COMMA lhs','varlist-complex',3,'p_varlist_complex','bas.py',1638),
  ('varlist-complex -> lhs','varlist-complex',1,'p_varlist_complex','bas.py',1639),
  ('write-statement -> WRITE FHANDLE COMMA exprlist','write-statement',4,'p_write','bas.py',1649),
  ('write-statement -> WRITE exprlist','write-statement',2,'p_write','bas.py',1650),
]
